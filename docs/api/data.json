{
    "project": {
        "name": "FA2RE - SE",
        "description": "Finite Automata to Regular Expression converter (using the state elimination method)",
        "version": "0.8",
        "url": "https://github.com/andrelago13/COMP"
    },
    "files": {
        "src\\antlr4\\tree\\Trees.js": {
            "name": "src\\antlr4\\tree\\Trees.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\dsl\\ast\\EO_AST.js": {
            "name": "src\\dsl\\ast\\EO_AST.js",
            "modules": {},
            "classes": {
                "EO_AST": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dsl\\ast\\EO_AST_Node.js": {
            "name": "src\\dsl\\ast\\EO_AST_Node.js",
            "modules": {},
            "classes": {
                "EO_AST_Node": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dsl\\ast\\EO_AST_NodeAuto.js": {
            "name": "src\\dsl\\ast\\EO_AST_NodeAuto.js",
            "modules": {},
            "classes": {
                "EO_AST_NodeAuto": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dsl\\ast\\EO_AST_NodeE.js": {
            "name": "src\\dsl\\ast\\EO_AST_NodeE.js",
            "modules": {},
            "classes": {
                "EO_AST_NodeE": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dsl\\ast\\EO_AST_NodeE1.js": {
            "name": "src\\dsl\\ast\\EO_AST_NodeE1.js",
            "modules": {},
            "classes": {
                "EO_AST_NodeE1": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dsl\\ast\\EO_AST_NodeF.js": {
            "name": "src\\dsl\\ast\\EO_AST_NodeF.js",
            "modules": {},
            "classes": {
                "EO_AST_NodeF": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dsl\\ast\\EO_AST_NodeLoop.js": {
            "name": "src\\dsl\\ast\\EO_AST_NodeLoop.js",
            "modules": {},
            "classes": {
                "EO_AST_NodeLoop": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dsl\\ast\\EO_AST_NodeManual.js": {
            "name": "src\\dsl\\ast\\EO_AST_NodeManual.js",
            "modules": {},
            "classes": {
                "EO_AST_NodeManual": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dsl\\ast\\EO_AST_NodeReserved.js": {
            "name": "src\\dsl\\ast\\EO_AST_NodeReserved.js",
            "modules": {},
            "classes": {
                "EO_AST_NodeReserved": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dsl\\ast\\EO_AST_NodeT.js": {
            "name": "src\\dsl\\ast\\EO_AST_NodeT.js",
            "modules": {},
            "classes": {
                "EO_AST_NodeT": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dsl\\ast\\EO_AST_NodeT1.js": {
            "name": "src\\dsl\\ast\\EO_AST_NodeT1.js",
            "modules": {},
            "classes": {
                "EO_AST_NodeT1": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dsl\\ast\\EO_AST_NodeTerminal.js": {
            "name": "src\\dsl\\ast\\EO_AST_NodeTerminal.js",
            "modules": {},
            "classes": {
                "EO_AST_NodeTerminal": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dsl\\ast\\EO_AST_NodeV.js": {
            "name": "src\\dsl\\ast\\EO_AST_NodeV.js",
            "modules": {},
            "classes": {
                "EO_AST_NodeV": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dsl\\ast\\EvalResult.js": {
            "name": "src\\dsl\\ast\\EvalResult.js",
            "modules": {},
            "classes": {
                "EvalResult": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dsl\\ast\\VarMap.js": {
            "name": "src\\dsl\\ast\\VarMap.js",
            "modules": {},
            "classes": {
                "VarMap": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dsl\\CustomErrorListener.js": {
            "name": "src\\dsl\\CustomErrorListener.js",
            "modules": {},
            "classes": {
                "CustomErrorListener": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\Converter.js": {
            "name": "src\\js\\Converter.js",
            "modules": {},
            "classes": {
                "Converter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\DSLLoader.js": {
            "name": "src\\js\\DSLLoader.js",
            "modules": {
                "Grammar": 1
            },
            "classes": {
                "DSLLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\FALoader.js": {
            "name": "src\\js\\FALoader.js",
            "modules": {
                "FiniteAutomata": 1
            },
            "classes": {
                "FALoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\FAutils.js": {
            "name": "src\\js\\FAutils.js",
            "modules": {
                "FAutils": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\Stack.js": {
            "name": "src\\js\\Stack.js",
            "modules": {
                "Utils": 1
            },
            "classes": {
                "Stack": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\main.js": {
            "name": "src\\js\\main.js",
            "modules": {
                "Main": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\libs\\vis\\vis.js": {
            "name": "src\\libs\\vis\\vis.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\libs\\vis\\vis.min.js": {
            "name": "src\\libs\\vis\\vis.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Grammar": {
            "name": "Grammar",
            "submodules": {},
            "elements": {},
            "classes": {
                "DSLLoader": 1,
                "EO_AST": 1,
                "EO_AST_Node": 1,
                "EO_AST_NodeAuto": 1,
                "EO_AST_NodeE": 1,
                "EO_AST_NodeE1": 1,
                "EO_AST_NodeF": 1,
                "EO_AST_NodeLoop": 1,
                "EO_AST_NodeManual": 1,
                "EO_AST_NodeReserved": 1,
                "EO_AST_NodeT": 1,
                "EO_AST_NodeT1": 1,
                "EO_AST_NodeTerminal": 1,
                "EO_AST_NodeV": 1,
                "EvalResult": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\js\\DSLLoader.js",
            "line": 11,
            "description": "Classes to help parsing, validating and evaluating expressions under the DSL we defined in the \"About\" page"
        },
        "Utils": {
            "name": "Utils",
            "submodules": {},
            "elements": {},
            "classes": {
                "VarMap": 1,
                "CustomErrorListener": 1,
                "Stack": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\js\\Stack.js",
            "line": 8,
            "description": "Utilities for the application"
        },
        "FiniteAutomata": {
            "name": "FiniteAutomata",
            "submodules": {
                "undefined": 1
            },
            "elements": {},
            "classes": {
                "FALoader": 1,
                "Converter": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\js\\FALoader.js",
            "line": 11,
            "description": "Module containing utilities for manipulating finite automatas"
        },
        "FAutils": {
            "name": "FAutils",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\js\\FAutils.js",
            "line": 3,
            "description": "Useful methods for finite automata manipulation. To see the available methods\nplease consult the file, all the methods are documented there."
        },
        "Main": {
            "name": "Main",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\js\\main.js",
            "line": 26,
            "description": "This module initializes the page and performs the on-page actions,\nthen calling the rest of the API to perform the intended actions.\nPlease consult the documentation of the methods in this file for more details"
        }
    },
    "classes": {
        "EO_AST": {
            "name": "EO_AST",
            "shortname": "EO_AST",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Grammar",
            "namespace": "",
            "file": "src\\dsl\\ast\\EO_AST.js",
            "line": 8,
            "description": "This class represents a AST obtained by parsing the grammar expression.\n\nAll classes that extend this class have similar methods, with slightly different behaviors according to their placement in the grammar",
            "is_constructor": 1
        },
        "EO_AST_Node": {
            "name": "EO_AST_Node",
            "shortname": "EO_AST_Node",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Grammar",
            "namespace": "",
            "file": "src\\dsl\\ast\\EO_AST_Node.js",
            "line": 4,
            "description": "This is the basic class to represent a generic AST node, for instance the root node.\n\nAll other Node classes represent nodes equivalent to portions of the grammar.\n\nAST nodes are also used to evaluate a certain graph according to the grammar they specify.\nThe main functionality implemented by nodes is:\n\t- eval - the function that evaluates the Node's symbolic value within the AST\n - solveTies - because this specific class represents the root node of the AST, it's eval function must return the final order at which nodes must be removed.\n \tNode evaluation may result in ties at the first attempt, so it is necessary to solve those ties, moving to the following expressions specified. The purpose \n \tof solveTies is to reevaluate nodes that have the same score with one sub-expression, calculating their values with following sub-expression. The algorithm\n \titself is complex, so please see the documentation of that function to better understand how it works\n \nRead the rest of the documentation to understand how it works and which algorithms are used."
        },
        "EO_AST_NodeAuto": {
            "name": "EO_AST_NodeAuto",
            "shortname": "EO_AST_NodeAuto",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Grammar",
            "namespace": "",
            "file": "src\\dsl\\ast\\EO_AST_NodeAuto.js",
            "line": 1,
            "description": "Represents node \"Auto\" of the grammar.\n\nUsage example:\n\n\t\t[\"TYPE\", EO_AST_NodeE]\n\n\t\"TYPE\" - one of EO_AST_NodeAuto.Type"
        },
        "EO_AST_NodeE": {
            "name": "EO_AST_NodeE",
            "shortname": "EO_AST_NodeE",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Grammar",
            "namespace": "",
            "file": "src\\dsl\\ast\\EO_AST_NodeE.js",
            "line": 1,
            "description": "Represents node \"E\" of the grammar.\n\nUsage example:\n\n\t\t[ EO_AST_NodeT ( , EO_AST_NodeE1 ) ]\n\nIf EO_AST_NodeE1 does not exist, the node replaces itself by EO_AST_NodeT"
        },
        "EO_AST_NodeE1": {
            "name": "EO_AST_NodeE1",
            "shortname": "EO_AST_NodeE1",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Grammar",
            "namespace": "",
            "file": "src\\dsl\\ast\\EO_AST_NodeE1.js",
            "line": 1,
            "description": "Represents node \"E1\" of the grammar.\n\nUsage example:\n\n\t\t[ \"TYPE\", EO_AST_NodeT ( , EO_AST_NodeE1 ) ]\n\n\t\"TYPE\" is one of EO_AST_NodeE1.PLUS, EO_AST_NodeE1.MINUS"
        },
        "EO_AST_NodeF": {
            "name": "EO_AST_NodeF",
            "shortname": "EO_AST_NodeF",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Grammar",
            "namespace": "",
            "file": "src\\dsl\\ast\\EO_AST_NodeF.js",
            "line": 1,
            "description": "Represents node \"F\" of the grammar.\nShould never be an actual part of the AST, but is used to track errors\n\nUsage example:\n\n\t\tEO_AST_NodeV | EO_AST_NodeTerminal | EO_AST_NodeLoop | EO_AST_NodeE | EO_AST_NodeReserved\n\n\t\"INT\" and \"REAL\" are actual values"
        },
        "EO_AST_NodeLoop": {
            "name": "EO_AST_NodeLoop",
            "shortname": "EO_AST_NodeLoop",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Grammar",
            "namespace": "",
            "file": "src\\dsl\\ast\\EO_AST_NodeLoop.js",
            "line": 1,
            "description": "Represents node \"Loop\" of the grammar.\n\nUsage example:\n\n\t\t[\"TYPE\", \"IDENTIFIER\", EO_AST_NodeReserved, EO_AST_NodeE]\n\n\t\"TYPE\" - one of EO_AST_NodeLoop.SUM, EO_AST_NodeLoop.MUL\n\t\"IDENTIFIER\" - actual string with identifier's name"
        },
        "EO_AST_NodeManual": {
            "name": "EO_AST_NodeManual",
            "shortname": "EO_AST_NodeManual",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Grammar",
            "namespace": "",
            "file": "src\\dsl\\ast\\EO_AST_NodeManual.js",
            "line": 1,
            "description": "Represents node \"Manual\" of the grammar.\n\nUsage example:\n\n\t\t[\"INT\", \"INT\", ...]\n\n\t\"INT\" - number with the node's id"
        },
        "EO_AST_NodeReserved": {
            "name": "EO_AST_NodeReserved",
            "shortname": "EO_AST_NodeReserved",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Grammar",
            "namespace": "",
            "file": "src\\dsl\\ast\\EO_AST_NodeReserved.js",
            "line": 1,
            "description": "Represents node \"Reserved\" of the grammar.\n\nUsage example:\n\n\t\t[\"NAME\"]\n\nSee EO_AST_NodeReserved.Type"
        },
        "EO_AST_NodeT": {
            "name": "EO_AST_NodeT",
            "shortname": "EO_AST_NodeT",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Grammar",
            "namespace": "",
            "file": "src\\dsl\\ast\\EO_AST_NodeT.js",
            "line": 1,
            "description": "Represents node \"T\" of the grammar.\n\nUsage example:\n\n\t\t[ EO_AST_NodeF ( , EO_AST_NodeT1 )]\n\n\tIf no NodeT1 exists, replaces itself by EO_AST_NodeF"
        },
        "EO_AST_NodeT1": {
            "name": "EO_AST_NodeT1",
            "shortname": "EO_AST_NodeT1",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Grammar",
            "namespace": "",
            "file": "src\\dsl\\ast\\EO_AST_NodeT1.js",
            "line": 1,
            "description": "Represents node \"T1\" of the grammar.\n\nUsage example:\n\n\t\t[\"TYPE\", EO_AST_NodeF (, EO_AST_NodeT1 ) ]\n\n\t\"TYPE\" - one of EO_AST_NodeT1.ASTERISK, EO_AST_NodeT1.SLASH"
        },
        "EO_AST_NodeTerminal": {
            "name": "EO_AST_NodeTerminal",
            "shortname": "EO_AST_NodeTerminal",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Grammar",
            "namespace": "",
            "file": "src\\dsl\\ast\\EO_AST_NodeTerminal.js",
            "line": 1,
            "description": "Represents node \"Terminal\" of the grammar.\n\nUsage example:\n\n\t\t[\"NAME\"]"
        },
        "EO_AST_NodeV": {
            "name": "EO_AST_NodeV",
            "shortname": "EO_AST_NodeV",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Grammar",
            "namespace": "",
            "file": "src\\dsl\\ast\\EO_AST_NodeV.js",
            "line": 1,
            "description": "Represents node \"V\" of the grammar.\n\nUsage example:\n\n\t\t[\"MAJOR\" (, \"MINOR\") ]\n\n\tAs identifier is either MAJOR or MAJOR.MINOR"
        },
        "EvalResult": {
            "name": "EvalResult",
            "shortname": "EvalResult",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Grammar",
            "namespace": "",
            "file": "src\\dsl\\ast\\EvalResult.js",
            "line": 28,
            "description": "This class represents the result of an eval call to a graph. It's type represents either \"static\" or \"dynamic\", and the content is the order by which nodes must be removed",
            "is_constructor": 1
        },
        "VarMap": {
            "name": "VarMap",
            "shortname": "VarMap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Utils",
            "namespace": "",
            "file": "src\\dsl\\ast\\VarMap.js",
            "line": 6,
            "description": "This class represents a mapping of names and variables. This is essential because the DSL we defined allows the definition of variables.\nTherefore, the node classes use VarMap objects to store variable values and pass them onto each other, also allowing the use of variable\nscopes.",
            "is_constructor": 1
        },
        "CustomErrorListener": {
            "name": "CustomErrorListener",
            "shortname": "CustomErrorListener",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Utils",
            "namespace": "",
            "file": "src\\dsl\\CustomErrorListener.js",
            "line": 3,
            "description": "This class is an extension of the ErrorListener generated by Antlr4. In the case of our application,\nit is used to keep track of syntatic errors detected by the Antlr tools."
        },
        "Converter": {
            "name": "Converter",
            "shortname": "Converter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FiniteAutomata",
            "namespace": "",
            "file": "src\\js\\Converter.js",
            "line": 5,
            "description": "This class performs the actual convertion of the finite automata.\nThe order of elimination is given by the results of evaluating the AST, and some\nsimplifications are made to avoid getting redundant regular expressions.",
            "params": [
                {
                    "name": "fa",
                    "description": "automata to convert"
                },
                {
                    "name": "ast",
                    "description": "AST resulting from loading the DSL expression"
                }
            ],
            "is_constructor": 1
        },
        "DSLLoader": {
            "name": "DSLLoader",
            "shortname": "DSLLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Grammar",
            "namespace": "",
            "file": "src\\js\\DSLLoader.js",
            "line": 11,
            "description": "This class uses Antlr4 as well as our own custom classes to read and validate an expression according to the DSL we defined in the \"About\" page",
            "is_constructor": 1,
            "params": [
                {
                    "name": "dslString",
                    "description": "String with the string to analyze"
                }
            ]
        },
        "FALoader": {
            "name": "FALoader",
            "shortname": "FALoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FiniteAutomata",
            "namespace": "",
            "file": "src\\js\\FALoader.js",
            "line": 11,
            "description": "This class creates a simple interface for external applications to load and validate finite automatas.\n\nIt includes all sort of validations to ensure the \".dot\" file given is a valid file and represents a valid FA",
            "is_constructor": 1,
            "params": [
                {
                    "name": "dotString",
                    "description": "String with the dot files's content, which must yet be parsed"
                }
            ]
        },
        "Stack": {
            "name": "Stack",
            "shortname": "Stack",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Utils",
            "namespace": "",
            "file": "src\\js\\Stack.js",
            "line": 8,
            "description": "Provides a simple \"stack\" class, useful for AST creation",
            "is_constructor": 1
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "src\\antlr4\\tree\\Trees.js",
            "line": 39,
            "class": "EO_AST"
        },
        {
            "file": "src\\dsl\\ast\\EO_AST.js",
            "line": 24,
            "description": "Sets the root of the tree",
            "itemtype": "method",
            "name": "setRoot",
            "class": "EO_AST",
            "module": "Grammar"
        },
        {
            "file": "src\\dsl\\ast\\EO_AST.js",
            "line": 37,
            "description": "Adds a child to a specified node in the tree",
            "params": [
                {
                    "name": "father",
                    "description": "node to which the child will be added"
                },
                {
                    "name": "son",
                    "description": "child to be added"
                }
            ],
            "itemtype": "method",
            "name": "addChild",
            "class": "EO_AST",
            "module": "Grammar"
        },
        {
            "file": "src\\dsl\\ast\\EO_AST.js",
            "line": 48,
            "description": "Evaluates the value represented by the expression, given a FA.",
            "params": [
                {
                    "name": "graph",
                    "description": "FA obtained using the FiniteAutomata module's classes"
                }
            ],
            "return": {
                "description": "result of the evaluation, with node scores and node elimination order",
                "type": "EvalResult"
            },
            "itemtype": "method",
            "name": "eval",
            "class": "EO_AST",
            "module": "Grammar"
        },
        {
            "file": "src\\dsl\\ast\\EO_AST_Node.js",
            "line": 67,
            "description": "Eval is the main function of every Node class. The result is returned via the passed parameter 'result', which is an instance of\n\t\tEvalResult which represents a result of evaluation, as explained in it's specific documentation.\nIn the case of this class, eval calculates the value of the graph nodes given the first sub-expression, solving any ties with the\nfollowing sub-expressions if necessary.\n\nThis function MUST BE OVERRIDEN by any subclass so that it behaves correctly. Please see the implementation of this function in all \nsubclasses because the behavior of this function depends on the part of the AST the instance represents.",
            "params": [
                {
                    "name": "graph",
                    "description": "finite automata"
                },
                {
                    "name": "result",
                    "description": "where the result should be placed"
                }
            ],
            "itemtype": "method",
            "name": "eval",
            "class": "EO_AST_Node",
            "module": "Grammar"
        },
        {
            "file": "src\\dsl\\ast\\EO_AST_Node.js",
            "line": 120,
            "description": "Used to break ties of score in the nodes. To do that, the main line of logic is as follows:\n\t\t- Check the current score of all nodes\n\t\t- For all sets of tied nodes, solve the tie by recalculating and reordering those nodes and their scores\n\t\t- Return the new order and new calculated scores of each node in 'new_scores' and 'new_orders'",
            "itemtype": "method",
            "name": "solveTies",
            "class": "EO_AST_Node",
            "module": "Grammar"
        },
        {
            "file": "src\\dsl\\ast\\EO_AST_Node.js",
            "line": 171,
            "description": "Set score of un-tied nodes to null, so that specific tie-intervals are well defined",
            "itemtype": "method",
            "name": "createTempTies",
            "class": "EO_AST_Node",
            "module": "Grammar"
        },
        {
            "file": "src\\dsl\\ast\\EO_AST_Node.js",
            "line": 202,
            "description": "Recalculate the score of tied nodes and reorder them",
            "itemtype": "method",
            "name": "solveTie",
            "class": "EO_AST_Node",
            "module": "Grammar"
        },
        {
            "file": "src\\dsl\\ast\\EO_AST_Node.js",
            "line": 229,
            "description": "Check if a set of scores has at least one set of tied nodes",
            "itemtype": "method",
            "name": "hasTie",
            "class": "EO_AST_Node",
            "module": "Grammar"
        },
        {
            "file": "src\\dsl\\ast\\EvalResult.js",
            "line": 6,
            "description": "Type of the evaluation (either STATIC or DYNAMIC)",
            "itemtype": "property",
            "name": "Type",
            "class": "EvalResult",
            "module": "Grammar"
        },
        {
            "file": "src\\dsl\\ast\\EvalResult.js",
            "line": 16,
            "description": "Type of a operation (either ADD, SUB, MUL or DIV)",
            "itemtype": "property",
            "name": "Operation",
            "class": "EvalResult",
            "module": "Grammar"
        },
        {
            "file": "src\\dsl\\ast\\EvalResult.js",
            "line": 44,
            "description": "Returns the type of the evaluation",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "type",
                "type": "EvalResult.Type"
            },
            "class": "EvalResult",
            "module": "Grammar"
        },
        {
            "file": "src\\dsl\\ast\\EvalResult.js",
            "line": 58,
            "description": "Returns the order for state elimination",
            "itemtype": "method",
            "name": "getOrder",
            "return": {
                "description": "array of indices, in the order for node removal",
                "type": "Array"
            },
            "class": "EvalResult",
            "module": "Grammar"
        },
        {
            "file": "src\\dsl\\ast\\EvalResult.js",
            "line": 80,
            "description": "Initiates the score to zero for every node (assumes given size)",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "size",
                    "description": "number of nodes in the graph"
                }
            ],
            "class": "EvalResult",
            "module": "Grammar"
        },
        {
            "file": "src\\dsl\\ast\\EvalResult.js",
            "line": 93,
            "description": "Performs an operation on the current result, with another EvalResult",
            "itemtype": "method",
            "name": "operation",
            "params": [
                {
                    "name": "new_values",
                    "description": "values to perform operation"
                },
                {
                    "name": "operation",
                    "description": "one of EvalResult.Operation"
                }
            ],
            "class": "EvalResult",
            "module": "Grammar"
        },
        {
            "file": "src\\dsl\\ast\\VarMap.js",
            "line": 23,
            "description": "Retrieves a variable",
            "itemtype": "method",
            "name": "getVar",
            "params": [
                {
                    "name": "name",
                    "description": "name of the variable"
                }
            ],
            "return": {
                "description": "value of the variable, or 'undefined' if it doesn't exist"
            },
            "class": "VarMap",
            "module": "Utils"
        },
        {
            "file": "src\\dsl\\ast\\VarMap.js",
            "line": 38,
            "description": "Retrieves a variable",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "cloned VarMap",
                "type": "VarMap"
            },
            "class": "VarMap",
            "module": "Utils"
        },
        {
            "file": "src\\dsl\\ast\\VarMap.js",
            "line": 54,
            "description": "Adds a variable",
            "itemtype": "method",
            "name": "addVar",
            "params": [
                {
                    "name": "key",
                    "description": "name of the variable"
                },
                {
                    "name": "value",
                    "description": "value of the variable"
                }
            ],
            "class": "VarMap",
            "module": "Utils"
        },
        {
            "file": "src\\dsl\\ast\\VarMap.js",
            "line": 65,
            "description": "Deletes all variables",
            "itemtype": "method",
            "name": "clear",
            "class": "VarMap",
            "module": "Utils"
        },
        {
            "file": "src\\js\\Converter.js",
            "line": 21,
            "description": "Converts the given FA into a regular expression, eliminating the states in the order given by the evaluation of the DSL expression",
            "itemtype": "method",
            "name": "convert",
            "return": {
                "description": "an array with two members: \"steps\" (intermediate steps of the conversion, FAs), \"regex\" (resulting regular expression). Each member of \"steps\" is an object with the FA (\"fa\") and an explanation (\"explanation\") of what happenned in that step."
            },
            "class": "Converter",
            "module": "FiniteAutomata"
        },
        {
            "file": "src\\js\\Converter.js",
            "line": 75,
            "description": "Retrieves an array with the id's of all nodes in the FA",
            "itemtype": "method",
            "name": "convertNodeIDArrayToNodeArrayIndex",
            "return": {
                "description": "the converted array"
            },
            "class": "Converter",
            "module": "FiniteAutomata"
        },
        {
            "file": "src\\js\\Converter.js",
            "line": 89,
            "description": "Fixes an FA, formatting the start node",
            "itemtype": "method",
            "name": "fixStartingState",
            "params": [
                {
                    "name": "fa",
                    "description": "FA to fix"
                }
            ],
            "return": {
                "description": "the converted FA"
            },
            "class": "Converter",
            "module": "FiniteAutomata"
        },
        {
            "file": "src\\js\\Converter.js",
            "line": 127,
            "description": "Fixes an FA, formatting the final node",
            "itemtype": "method",
            "name": "fixFinalState",
            "params": [
                {
                    "name": "fa",
                    "description": "FA to fix"
                }
            ],
            "return": {
                "description": "the converted FA"
            },
            "class": "Converter",
            "module": "FiniteAutomata"
        },
        {
            "file": "src\\js\\Converter.js",
            "line": 177,
            "description": "Merges the transition label in an FA, between the given nodes",
            "itemtype": "method",
            "name": "getMergedTransitionsLabel",
            "params": [
                {
                    "name": "fa",
                    "description": "FA to merge"
                },
                {
                    "name": "srcID",
                    "description": "id of the source node"
                },
                {
                    "name": "dstID",
                    "description": "id of the destination node"
                }
            ],
            "return": {
                "description": "the converted label"
            },
            "class": "Converter",
            "module": "FiniteAutomata"
        },
        {
            "file": "src\\js\\Converter.js",
            "line": 202,
            "description": "Eliminates a state from the FA",
            "itemtype": "method",
            "name": "eliminateState",
            "params": [
                {
                    "name": "fa",
                    "description": "FA to merge"
                },
                {
                    "name": "stateID",
                    "description": "id of the node to remove"
                }
            ],
            "return": {
                "description": "the new FA"
            },
            "class": "Converter",
            "module": "FiniteAutomata"
        },
        {
            "file": "src\\js\\Converter.js",
            "line": 262,
            "description": "Checks if a given label needs parenthesis around it for the regex to be valid",
            "itemtype": "method",
            "name": "needsParenthesis",
            "params": [
                {
                    "name": "s",
                    "description": "expression to validate"
                }
            ],
            "return": {
                "description": "true if it needs parenthesis, false otherwise"
            },
            "class": "Converter",
            "module": "FiniteAutomata"
        },
        {
            "file": "src\\js\\DSLLoader.js",
            "line": 22,
            "description": "Loads the expression into an AST, performing lexical, syntatic and some semantic validation. If errors are found, they are placed in the global \"errors\" array",
            "itemtype": "method",
            "name": "load",
            "return": {
                "description": "generated AST, null if errors occurred",
                "type": "EO_AST"
            },
            "class": "DSLLoader",
            "module": "Grammar"
        },
        {
            "file": "src\\js\\FALoader.js",
            "line": 25,
            "description": "Parses the dot file content using \"vis\".\nAfter parsing, adds the usefult information to the nodes and edges (see FAutils.js)",
            "itemtype": "method",
            "name": "load",
            "class": "FALoader",
            "module": "FiniteAutomata"
        },
        {
            "file": "src\\js\\FALoader.js",
            "line": 46,
            "description": "Assign the EPSILON label to all non-labeled edges",
            "itemtype": "method",
            "name": "fixEmptyTransitions",
            "params": [
                {
                    "name": "fa",
                    "description": "input finite automata"
                }
            ],
            "return": {
                "description": "the processed automata"
            },
            "class": "FALoader",
            "module": "FiniteAutomata"
        },
        {
            "file": "src\\js\\FALoader.js",
            "line": 61,
            "description": "Validates a finite automata, see:\n - validateSingleStart\n - validateFinalExistence\n - validateNoUnreachable\n - validateTransitions",
            "itemtype": "method",
            "name": "validate",
            "params": [
                {
                    "name": "fa",
                    "description": "input finite automata"
                }
            ],
            "return": {
                "description": "true if the automata is valid, false otherwise"
            },
            "class": "FALoader",
            "module": "FiniteAutomata"
        },
        {
            "file": "src\\js\\FALoader.js",
            "line": 79,
            "description": "Ensures the finite automata has only one start node",
            "itemtype": "method",
            "name": "validateSingleStart",
            "params": [
                {
                    "name": "fa",
                    "description": "input finite automata"
                }
            ],
            "return": {
                "description": "true if the automata has only one start node, false otherwise"
            },
            "class": "FALoader",
            "module": "FiniteAutomata"
        },
        {
            "file": "src\\js\\FALoader.js",
            "line": 102,
            "description": "Ensures the finite automata has at least one final node",
            "itemtype": "method",
            "name": "validateFinalExistence",
            "params": [
                {
                    "name": "fa",
                    "description": "input finite automata"
                }
            ],
            "return": {
                "description": "true if the automata has at least one final node, false otherwise"
            },
            "class": "FALoader",
            "module": "FiniteAutomata"
        },
        {
            "file": "src\\js\\FALoader.js",
            "line": 118,
            "description": "Ensures the finite automata has no unreachable nodes",
            "itemtype": "method",
            "name": "validateNoUnreachable",
            "params": [
                {
                    "name": "fa",
                    "description": "input finite automata"
                }
            ],
            "return": {
                "description": "true if the automata has no unreachable nodes, false otherwise"
            },
            "class": "FALoader",
            "module": "FiniteAutomata"
        },
        {
            "file": "src\\js\\FALoader.js",
            "line": 152,
            "description": "Ensures all edges in the finite automata have a valid label (single character)",
            "itemtype": "method",
            "name": "validateTransitions",
            "params": [
                {
                    "name": "fa",
                    "description": "input finite automata"
                }
            ],
            "return": {
                "description": "true if the automata labels all are a single character, false otherwise"
            },
            "class": "FALoader",
            "module": "FiniteAutomata"
        },
        {
            "file": "src\\js\\Stack.js",
            "line": 22,
            "description": "Inserts an element to the top of the stack",
            "itemtype": "method",
            "name": "push",
            "params": [
                {
                    "name": "element",
                    "description": "element to insert"
                }
            ],
            "class": "Stack",
            "module": "Utils"
        },
        {
            "file": "src\\js\\Stack.js",
            "line": 32,
            "description": "Gets the element on top of the stack without removing it",
            "itemtype": "method",
            "name": "top",
            "return": {
                "description": "element on top of the stack (last element pushed)"
            },
            "class": "Stack",
            "module": "Utils"
        },
        {
            "file": "src\\js\\Stack.js",
            "line": 42,
            "description": "Gets the element on top of the stack, removing it",
            "itemtype": "method",
            "name": "pop",
            "return": {
                "description": "element on top of the stack (last element pushed)"
            },
            "class": "Stack",
            "module": "Utils"
        },
        {
            "file": "src\\js\\Stack.js",
            "line": 54,
            "description": "Gets the size of the stack",
            "itemtype": "method",
            "name": "size",
            "return": {
                "description": "number of elements in the stack"
            },
            "class": "Stack",
            "module": "Utils"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1,
            "description": "vis.js\nhttps://github.com/almende/vis\n\nA dynamic, browser-based visualization library.",
            "version": "4.15.1",
            "date": "2016-03-08",
            "license": "Copyright (C) 2011-2016 Almende B.V, http://almende.com\n\nVis.js is dual licensed under both\n\n* The Apache 2.0 License\n  http://www.apache.org/licenses/LICENSE-2.0\n\nand\n\n* The MIT License\n  http://opensource.org/licenses/MIT\n\nVis.js may be distributed under either license.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39,
            "description": "/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 80,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 82,
            "description": "'use strict';\n// utils\n  exports.util = __webpack_require__(1);\n  exports.DOMutil = __webpack_require__(7);\n// data\n  exports.DataSet = __webpack_require__(8);\n  exports.DataView = __webpack_require__(10);\n  exports.Queue = __webpack_require__(9);\n// Graph3d\n  exports.Graph3d = __webpack_require__(11);\n  exports.graph3d = {\n    Camera: __webpack_require__(15),\n    Filter: __webpack_require__(16),\n    Point2d: __webpack_require__(14),\n    Point3d: __webpack_require__(13),\n    Slider: __webpack_require__(17),\n    StepNumber: __webpack_require__(18)\n  };\n// Timeline\n  exports.Timeline = __webpack_require__(19);\n  exports.Graph2d = __webpack_require__(48);\n  exports.timeline = {\n    Core: __webpack_require__(30),\n    DateUtil: __webpack_require__(29),\n    Range: __webpack_require__(27),\n    stack: __webpack_require__(34),\n    TimeStep: __webpack_require__(32),\n  components: {\n      items: {\n        Item: __webpack_require__(36),\n        BackgroundItem: __webpack_require__(40),\n        BoxItem: __webpack_require__(38),\n        PointItem: __webpack_require__(39),\n        RangeItem: __webpack_require__(35)\n      },\n    BackgroundGroup: __webpack_require__(37),\n      Component: __webpack_require__(28),\n      CurrentTime: __webpack_require__(46),\n      CustomTime: __webpack_require__(44),\n      DataAxis: __webpack_require__(50),\n      DataScale: __webpack_require__(51),\n      GraphGroup: __webpack_require__(52),\n      Group: __webpack_require__(33),\n      ItemSet: __webpack_require__(31),\n      Legend: __webpack_require__(56),\n      LineGraph: __webpack_require__(49),\n      TimeAxis: __webpack_require__(41)\n    }\n  };\n// Network\n  exports.Network = __webpack_require__(58);\n  exports.network = {\n    Images: __webpack_require__(59),\n    dotparser: __webpack_require__(115),\n    gephiParser: __webpack_require__(116),\n    allOptions: __webpack_require__(111)\n  };\n  exports.network.convertDot = function (input) {\n    return exports.network.dotparser.DOTToGraph(input);\n  };\n  exports.network.convertGephi = function (input, options) {\n    return exports.network.gephiParser.parseGephi(input, options);\n  };\n// bundled external libraries\n  exports.moment = __webpack_require__(2);\n  exports.Hammer = __webpack_require__(22);\n  exports.keycharm = __webpack_require__(43);\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 162,
            "description": "'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n// utility functions\n// first check if moment.js is already loaded in the browser window, if so,\n  // use this instance. Else, load via commonjs.\nvar moment = __webpack_require__(2);\n  var uuid = __webpack_require__(6);\n/**\n   * Test whether given object is a number\n   * @param {*} object\n   * @return {Boolean} isNumber",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 185,
            "description": "Remove everything in the DOM object",
            "params": [
                {
                    "name": "DOMobject",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 198,
            "description": "this function gives you a range between 0 and 1 based on the min and max values in the set, the total sum of all values and the current value.",
            "params": [
                {
                    "name": "min",
                    "description": ""
                },
                {
                    "name": "max",
                    "description": ""
                },
                {
                    "name": "total",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 216,
            "description": "Test whether given object is a string",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "isString",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 225,
            "description": "Test whether given object is a Date, or a String containing a Date",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Date | String"
                }
            ],
            "return": {
                "description": "isDate",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 246,
            "description": "Create a semi UUID\nsource: http://stackoverflow.com/a/105074/1262753",
            "return": {
                "description": "uuid",
                "type": "String"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 255,
            "description": "assign all keys of an object that are not nested objects to a certain value (used for color objects).",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 270,
            "description": "Fill an object with a possibly partially defined other object. Only copies values if the a object has an object requiring values.\nThat means an object is not created on a property if only the b object has it.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 296,
            "description": "Extend object a with the properties of object b or a series of objects\nOnly properties with defined values are copied",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "... Object"
                }
            ],
            "return": {
                "description": "a",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 313,
            "description": "Extend object a with the properties of object b or a series of objects\nOnly properties with defined values are copied",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "... Object"
                }
            ],
            "return": {
                "description": "a",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 332,
            "description": "Extend object a with selected properties of object b or a series of objects\nOnly properties with defined values are copied",
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Array.<String>"
                },
                {
                    "name": "a",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "a",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 358,
            "description": "Extend object a with selected properties of object b or a series of objects\nOnly properties with defined values are copied",
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Array.<String>"
                },
                {
                    "name": "a",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "a",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 406,
            "description": "Extend object a with selected properties of object b or a series of objects\nOnly properties with defined values are copied",
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Array.<String>"
                },
                {
                    "name": "a",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "a",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 455,
            "description": "Deep extend an object a with the properties of object b",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "Boolean",
                    "description": "protoExtend --> optional parameter. If true, the prototype values will also be extended.\n                                 (ie. the options objects that inherit from others will also get the inherited options)",
                    "optional": true
                },
                {
                    "name": "Boolean",
                    "description": "global      --> optional parameter. If true, the values of fields that are null will not deleted",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 497,
            "description": "Test whether all elements in two arrays are equal.",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns true if both arrays have the same length and same\n                  elements.",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 514,
            "description": "Convert an object to another type",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Boolean | Number | String | Date | Moment | Null | undefined"
                },
                {
                    "name": "type",
                    "description": "Name of the type. Available types:\n                                   'Boolean', 'Number', 'String',\n                                   'Date', 'Moment', ISODate', 'ASPDate'.",
                    "type": "String | undefined"
                }
            ],
            "return": {
                "description": "object",
                "type": "*"
            },
            "throws": {
                "description": "Error"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 644,
            "description": "Get the type of an object, for example exports.getType([]) returns 'Array'",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "type",
                "type": "String"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 685,
            "description": "Used to extend an array and copy it. This is used to propagate paths recursively.",
            "params": [
                {
                    "name": "arr",
                    "description": ""
                },
                {
                    "name": "newValue",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 701,
            "description": "Used to extend an array and copy it. This is used to propagate paths recursively.",
            "params": [
                {
                    "name": "arr",
                    "description": ""
                },
                {
                    "name": "newValue",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 716,
            "description": "Retrieve the absolute left value of a DOM element",
            "params": [
                {
                    "name": "elem",
                    "description": "A dom element, for example a div",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "left        The absolute left position of this element\n                             in the browser page.",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 726,
            "description": "Retrieve the absolute top value of a DOM element",
            "params": [
                {
                    "name": "elem",
                    "description": "A dom element, for example a div",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "top        The absolute top position of this element\n                             in the browser page.",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 736,
            "description": "add a className to the given elements style",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "className",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 749,
            "description": "add a className to the given elements style",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "className",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 763,
            "description": "For each method for both arrays and objects.\nIn case of an array, the built-in Array.forEach() is applied.\nIn case of an Object, the method loops over all properties of the object.",
            "params": [
                {
                    "name": "object",
                    "description": "An Object or Array",
                    "type": "Object | Array"
                },
                {
                    "name": "callback",
                    "description": "Callback method, called for each item in\n                                 the object or array with three parameters:\n                                 callback(value, index, object)",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 789,
            "description": "Convert an object into an array: all objects properties are put into the\narray. The resulting array is unordered.",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "array",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 805,
            "description": "Update a property in an object",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "changed",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 821,
            "description": "Throttle the given function to be only executed once every `wait` milliseconds",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "wait",
                    "description": "Time in milliseconds",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the throttled function",
                "type": "Function"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 848,
            "description": "Add and event listener. Works for all browsers",
            "params": [
                {
                    "name": "element",
                    "description": "An html element",
                    "type": "Element"
                },
                {
                    "name": "action",
                    "description": "The action, for example \"click\",\n                                without the prefix \"on\"",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The callback function to be executed",
                    "type": "Function"
                },
                {
                    "name": "useCapture",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 870,
            "description": "Remove an event listener from an element",
            "params": [
                {
                    "name": "element",
                    "description": "An html dom element",
                    "type": "Element"
                },
                {
                    "name": "action",
                    "description": "The name of the event, for example \"mousedown\"",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function",
                    "type": "Function"
                },
                {
                    "name": "useCapture",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 893,
            "description": "Cancels the event if it is cancelable, without stopping further propagation of the event.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 906,
            "description": "Get HTML element which is the target of the event",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "target element",
                "type": "Element"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 933,
            "description": "Check if given element contains given parent somewhere in the DOM tree",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "parent",
                    "description": "",
                    "type": "Element"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 953,
            "description": "Convert a value into a boolean",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean | function | undefined"
                },
                {
                    "name": "defaultValue",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "bool",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 971,
            "description": "Convert a value into a number",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean | function | undefined"
                },
                {
                    "name": "defaultValue",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "number",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 989,
            "description": "Convert a value into a string",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String | function | undefined"
                },
                {
                    "name": "defaultValue",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "str",
                "type": "String"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1007,
            "description": "Convert a size or location into a string with pixels or a percentage",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String | Number | function | undefined"
                },
                {
                    "name": "defaultValue",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "size",
                "type": "String"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1027,
            "description": "Convert a value into a DOM element",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "HTMLElement | function | undefined"
                },
                {
                    "name": "defaultValue",
                    "description": "",
                    "type": "HTMLElement",
                    "optional": true
                }
            ],
            "return": {
                "description": "dom",
                "type": "HTMLElement | null"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1041,
            "description": "http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb",
            "params": [
                {
                    "name": "hex",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "} | 255 range",
                "type": "R: *, g: *, b: *"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1061,
            "description": "This function takes color in hex format or rgb() or rgba() format and overrides the opacity. Returns rgba() string.",
            "params": [
                {
                    "name": "color",
                    "description": ""
                },
                {
                    "name": "opacity",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1083,
            "params": [
                {
                    "name": "red",
                    "description": "0 -- 255"
                },
                {
                    "name": "green",
                    "description": "0 -- 255"
                },
                {
                    "name": "blue",
                    "description": "0 -- 255"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "is_constructor": 1,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1095,
            "description": "Parse a color property into an object with border, background, and\nhighlight colors",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "Object | String"
                }
            ],
            "return": {
                "description": "colorObject",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1173,
            "description": "http://www.javascripter.net/faq/rgb2hsv.htm",
            "params": [
                {
                    "name": "red",
                    "description": ""
                },
                {
                    "name": "green",
                    "description": ""
                },
                {
                    "name": "blue",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "is_constructor": 1,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1226,
            "description": "Append a string with css styles to an element",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "cssText",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1239,
            "description": "Remove a string with css styles from an element",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "cssText",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1257,
            "description": "https://gist.github.com/mjijackson/5311256",
            "params": [
                {
                    "name": "h",
                    "description": ""
                },
                {
                    "name": "s",
                    "description": ""
                },
                {
                    "name": "v",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "R: number, g: number, b: number"
            },
            "is_constructor": 1,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1318,
            "description": "This recursively redirects the prototype of JSON objects to the referenceObject\nThis is used for default options.",
            "params": [
                {
                    "name": "referenceObject",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1341,
            "description": "This recursively redirects the prototype of JSON objects to the referenceObject\nThis is used for default options.",
            "params": [
                {
                    "name": "referenceObject",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1364,
            "description": "This method provides a stable sort implementation, very fast for presorted data",
            "params": [
                {
                    "name": "a",
                    "description": "the array"
                },
                {
                    "name": "a",
                    "description": "order comparator"
                }
            ],
            "return": {
                "description": "",
                "type": "The array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1382,
            "description": "this is used to set the options of subobjects in the options object. A requirement of these subobjects\nis that they have an 'enabled' element which is optional for the user but mandatory for the program.",
            "params": [
                {
                    "name": "object",
                    "description": "mergeTarget | this is either this.options or the options used for the groups.",
                    "optional": true
                },
                {
                    "name": "object",
                    "description": "options     | options",
                    "optional": true
                },
                {
                    "name": "String",
                    "description": "option      | this is the option key in the options argument",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1414,
            "description": "This function does a binary search for a visible item in a sorted list. If we find a visible item, the code that uses\nthis function will then iterate in both directions over this sorted list to find all visible items.",
            "params": [
                {
                    "name": "orderedItems",
                    "description": "| Items ordered by start",
                    "type": "Item[]"
                },
                {
                    "name": "comparator",
                    "description": "| -1 is lower, 0 is equal, 1 is higher",
                    "type": "Function"
                },
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "field2",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1455,
            "description": "This function does a binary search for a specific value in a sorted array. If it does not exist but is in between of\ntwo values, we return either the one before or the one after, depending on user input\nIf it is found, we return the index, else -1.",
            "params": [
                {
                    "name": "orderedItems",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "}",
                    "description": "target",
                    "type": "Start: number, end: number"
                },
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "sidePreference",
                    "description": "'before' or 'after'",
                    "type": "String"
                },
                {
                    "name": "comparator",
                    "description": "an optional comparator, returning -1,0,1 for <,==,>.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1572,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1574,
            "description": "'use strict';\n// first check if moment.js is already loaded in the browser window, if so,\n  // use this instance. Else, load via commonjs.\n  module.exports = typeof window !== 'undefined' && window['moment'] || __webpack_require__(3);\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 1584,
            "description": "/* WEBPACK VAR INJECTION */(function(module) {//! moment.js\n  //! version : 2.12.0\n  //! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n  //! license : MIT\n  //! momentjs.com\n;(function (global, factory) {\n       true ? module.exports = factory() :\n      typeof define === 'function' && define.amd ? define(factory) :\n      global.moment = factory()\n  }(this, function () { 'use strict';\n    var hookCallback;\n    function utils_hooks__hooks () {\n          return hookCallback.apply(null, arguments);\n      }\n    // This is done to register the method called with moment()\n      // without creating circular dependencies.\n      function setHookCallback (callback) {\n          hookCallback = callback;\n      }\n    function isArray(input) {\n          return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n      }\n    function isDate(input) {\n          return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n      }\n    function map(arr, fn) {\n          var res = [], i;\n          for (i = 0; i < arr.length; ++i) {\n              res.push(fn(arr[i], i));\n          }\n          return res;\n      }\n    function hasOwnProp(a, b) {\n          return Object.prototype.hasOwnProperty.call(a, b);\n      }\n    function extend(a, b) {\n          for (var i in b) {\n              if (hasOwnProp(b, i)) {\n                  a[i] = b[i];\n              }\n          }\n        if (hasOwnProp(b, 'toString')) {\n              a.toString = b.toString;\n          }\n        if (hasOwnProp(b, 'valueOf')) {\n              a.valueOf = b.valueOf;\n          }\n        return a;\n      }\n    function create_utc__createUTC (input, format, locale, strict) {\n          return createLocalOrUTC(input, format, locale, strict, true).utc();\n      }\n    function defaultParsingFlags() {\n          // We need to deep clone this object.\n          return {\n              empty           : false,\n              unusedTokens    : [],\n              unusedInput     : [],\n              overflow        : -2,\n              charsLeftOver   : 0,\n              nullInput       : false,\n              invalidMonth    : null,\n              invalidFormat   : false,\n              userInvalidated : false,\n              iso             : false\n          };\n      }\n    function getParsingFlags(m) {\n          if (m._pf == null) {\n              m._pf = defaultParsingFlags();\n          }\n          return m._pf;\n      }\n    function valid__isValid(m) {\n          if (m._isValid == null) {\n              var flags = getParsingFlags(m);\n              m._isValid = !isNaN(m._d.getTime()) &&\n                  flags.overflow < 0 &&\n                  !flags.empty &&\n                  !flags.invalidMonth &&\n                  !flags.invalidWeekday &&\n                  !flags.nullInput &&\n                  !flags.invalidFormat &&\n                  !flags.userInvalidated;\n            if (m._strict) {\n                  m._isValid = m._isValid &&\n                      flags.charsLeftOver === 0 &&\n                      flags.unusedTokens.length === 0 &&\n                      flags.bigHour === undefined;\n              }\n          }\n          return m._isValid;\n      }\n    function valid__createInvalid (flags) {\n          var m = create_utc__createUTC(NaN);\n          if (flags != null) {\n              extend(getParsingFlags(m), flags);\n          }\n          else {\n              getParsingFlags(m).userInvalidated = true;\n          }\n        return m;\n      }\n    function isUndefined(input) {\n          return input === void 0;\n      }\n    // Plugins that add properties should also add the key here (null value),\n      // so we can properly clone ourselves.\n      var momentProperties = utils_hooks__hooks.momentProperties = [];\n    function copyConfig(to, from) {\n          var i, prop, val;\n        if (!isUndefined(from._isAMomentObject)) {\n              to._isAMomentObject = from._isAMomentObject;\n          }\n          if (!isUndefined(from._i)) {\n              to._i = from._i;\n          }\n          if (!isUndefined(from._f)) {\n              to._f = from._f;\n          }\n          if (!isUndefined(from._l)) {\n              to._l = from._l;\n          }\n          if (!isUndefined(from._strict)) {\n              to._strict = from._strict;\n          }\n          if (!isUndefined(from._tzm)) {\n              to._tzm = from._tzm;\n          }\n          if (!isUndefined(from._isUTC)) {\n              to._isUTC = from._isUTC;\n          }\n          if (!isUndefined(from._offset)) {\n              to._offset = from._offset;\n          }\n          if (!isUndefined(from._pf)) {\n              to._pf = getParsingFlags(from);\n          }\n          if (!isUndefined(from._locale)) {\n              to._locale = from._locale;\n          }\n        if (momentProperties.length > 0) {\n              for (i in momentProperties) {\n                  prop = momentProperties[i];\n                  val = from[prop];\n                  if (!isUndefined(val)) {\n                      to[prop] = val;\n                  }\n              }\n          }\n        return to;\n      }\n    var updateInProgress = false;\n    // Moment prototype object\n      function Moment(config) {\n          copyConfig(this, config);\n          this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n          // Prevent infinite loop in case updateOffset creates new moment\n          // objects.\n          if (updateInProgress === false) {\n              updateInProgress = true;\n              utils_hooks__hooks.updateOffset(this);\n              updateInProgress = false;\n          }\n      }\n    function isMoment (obj) {\n          return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n      }\n    function absFloor (number) {\n          if (number < 0) {\n              return Math.ceil(number);\n          } else {\n              return Math.floor(number);\n          }\n      }\n    function toInt(argumentForCoercion) {\n          var coercedNumber = +argumentForCoercion,\n              value = 0;\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n              value = absFloor(coercedNumber);\n          }\n        return value;\n      }\n    // compare two arrays, return the number of differences\n      function compareArrays(array1, array2, dontConvert) {\n          var len = Math.min(array1.length, array2.length),\n              lengthDiff = Math.abs(array1.length - array2.length),\n              diffs = 0,\n              i;\n          for (i = 0; i < len; i++) {\n              if ((dontConvert && array1[i] !== array2[i]) ||\n                  (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                  diffs++;\n              }\n          }\n          return diffs + lengthDiff;\n      }\n    function warn(msg) {\n          if (utils_hooks__hooks.suppressDeprecationWarnings === false &&\n                  (typeof console !==  'undefined') && console.warn) {\n              console.warn('Deprecation warning: ' + msg);\n          }\n      }\n    function deprecate(msg, fn) {\n          var firstTime = true;\n        return extend(function () {\n              if (firstTime) {\n                  warn(msg + '\\nArguments: ' + Array.prototype.slice.call(arguments).join(', ') + '\\n' + (new Error()).stack);\n                  firstTime = false;\n              }\n              return fn.apply(this, arguments);\n          }, fn);\n      }\n    var deprecations = {};\n    function deprecateSimple(name, msg) {\n          if (!deprecations[name]) {\n              warn(msg);\n              deprecations[name] = true;\n          }\n      }\n    utils_hooks__hooks.suppressDeprecationWarnings = false;\n    function isFunction(input) {\n          return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n      }\n    function isObject(input) {\n          return Object.prototype.toString.call(input) === '[object Object]';\n      }\n    function locale_set__set (config) {\n          var prop, i;\n          for (i in config) {\n              prop = config[i];\n              if (isFunction(prop)) {\n                  this[i] = prop;\n              } else {\n                  this['_' + i] = prop;\n              }\n          }\n          this._config = config;\n          // Lenient ordinal parsing accepts just a number in addition to\n          // number + (possibly) stuff coming from _ordinalParseLenient.\n          this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);\n      }\n    function mergeConfigs(parentConfig, childConfig) {\n          var res = extend({}, parentConfig), prop;\n          for (prop in childConfig) {\n              if (hasOwnProp(childConfig, prop)) {\n                  if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                      res[prop] = {};\n                      extend(res[prop], parentConfig[prop]);\n                      extend(res[prop], childConfig[prop]);\n                  } else if (childConfig[prop] != null) {\n                      res[prop] = childConfig[prop];\n                  } else {\n                      delete res[prop];\n                  }\n              }\n          }\n          return res;\n      }\n    function Locale(config) {\n          if (config != null) {\n              this.set(config);\n          }\n      }\n    // internal storage for locale config files\n      var locales = {};\n      var globalLocale;\n    function normalizeLocale(key) {\n          return key ? key.toLowerCase().replace('_', '-') : key;\n      }\n    // pick the locale from the array\n      // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n      // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n      function chooseLocale(names) {\n          var i = 0, j, next, locale, split;\n        while (i < names.length) {\n              split = normalizeLocale(names[i]).split('-');\n              j = split.length;\n              next = normalizeLocale(names[i + 1]);\n              next = next ? next.split('-') : null;\n              while (j > 0) {\n                  locale = loadLocale(split.slice(0, j).join('-'));\n                  if (locale) {\n                      return locale;\n                  }\n                  if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                      //the next array item is better than a shallower substring of this one\n                      break;\n                  }\n                  j--;\n              }\n              i++;\n          }\n          return null;\n      }\n    function loadLocale(name) {\n          var oldLocale = null;\n          // TODO: Find a better way to register and load all the locales in Node\n          if (!locales[name] && (typeof module !== 'undefined') &&\n                  module && module.exports) {\n              try {\n                  oldLocale = globalLocale._abbr;\n                  !(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./locale\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n                  // because defineLocale currently also sets the global locale, we\n                  // want to undo that for lazy loaded locales\n                  locale_locales__getSetGlobalLocale(oldLocale);\n              } catch (e) { }\n          }\n          return locales[name];\n      }\n    // This function will load locale and then set the global locale.  If\n      // no arguments are passed in, it will simply return the current global\n      // locale key.\n      function locale_locales__getSetGlobalLocale (key, values) {\n          var data;\n          if (key) {\n              if (isUndefined(values)) {\n                  data = locale_locales__getLocale(key);\n              }\n              else {\n                  data = defineLocale(key, values);\n              }\n            if (data) {\n                  // moment.duration._locale = moment._locale = data;\n                  globalLocale = data;\n              }\n          }\n        return globalLocale._abbr;\n      }\n    function defineLocale (name, config) {\n          if (config !== null) {\n              config.abbr = name;\n              if (locales[name] != null) {\n                  deprecateSimple('defineLocaleOverride',\n                          'use moment.updateLocale(localeName, config) to change ' +\n                          'an existing locale. moment.defineLocale(localeName, ' +\n                          'config) should only be used for creating a new locale');\n                  config = mergeConfigs(locales[name]._config, config);\n              } else if (config.parentLocale != null) {\n                  if (locales[config.parentLocale] != null) {\n                      config = mergeConfigs(locales[config.parentLocale]._config, config);\n                  } else {\n                      // treat as if there is no base config\n                      deprecateSimple('parentLocaleUndefined',\n                              'specified parentLocale is not defined yet');\n                  }\n              }\n              locales[name] = new Locale(config);\n            // backwards compat for now: also set the locale\n              locale_locales__getSetGlobalLocale(name);\n            return locales[name];\n          } else {\n              // useful for testing\n              delete locales[name];\n              return null;\n          }\n      }\n    function updateLocale(name, config) {\n          if (config != null) {\n              var locale;\n              if (locales[name] != null) {\n                  config = mergeConfigs(locales[name]._config, config);\n              }\n              locale = new Locale(config);\n              locale.parentLocale = locales[name];\n              locales[name] = locale;\n            // backwards compat for now: also set the locale\n              locale_locales__getSetGlobalLocale(name);\n          } else {\n              // pass null for config to unupdate, useful for tests\n              if (locales[name] != null) {\n                  if (locales[name].parentLocale != null) {\n                      locales[name] = locales[name].parentLocale;\n                  } else if (locales[name] != null) {\n                      delete locales[name];\n                  }\n              }\n          }\n          return locales[name];\n      }\n    // returns locale data\n      function locale_locales__getLocale (key) {\n          var locale;\n        if (key && key._locale && key._locale._abbr) {\n              key = key._locale._abbr;\n          }\n        if (!key) {\n              return globalLocale;\n          }\n        if (!isArray(key)) {\n              //short-circuit everything else\n              locale = loadLocale(key);\n              if (locale) {\n                  return locale;\n              }\n              key = [key];\n          }\n        return chooseLocale(key);\n      }\n    function locale_locales__listLocales() {\n          return Object.keys(locales);\n      }\n    var aliases = {};\n    function addUnitAlias (unit, shorthand) {\n          var lowerCase = unit.toLowerCase();\n          aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n      }\n    function normalizeUnits(units) {\n          return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n      }\n    function normalizeObjectUnits(inputObject) {\n          var normalizedInput = {},\n              normalizedProp,\n              prop;\n        for (prop in inputObject) {\n              if (hasOwnProp(inputObject, prop)) {\n                  normalizedProp = normalizeUnits(prop);\n                  if (normalizedProp) {\n                      normalizedInput[normalizedProp] = inputObject[prop];\n                  }\n              }\n          }\n        return normalizedInput;\n      }\n    function makeGetSet (unit, keepTime) {\n          return function (value) {\n              if (value != null) {\n                  get_set__set(this, unit, value);\n                  utils_hooks__hooks.updateOffset(this, keepTime);\n                  return this;\n              } else {\n                  return get_set__get(this, unit);\n              }\n          };\n      }\n    function get_set__get (mom, unit) {\n          return mom.isValid() ?\n              mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n      }\n    function get_set__set (mom, unit, value) {\n          if (mom.isValid()) {\n              mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n          }\n      }\n    // MOMENTS\n    function getSet (units, value) {\n          var unit;\n          if (typeof units === 'object') {\n              for (unit in units) {\n                  this.set(unit, units[unit]);\n              }\n          } else {\n              units = normalizeUnits(units);\n              if (isFunction(this[units])) {\n                  return this[units](value);\n              }\n          }\n          return this;\n      }\n    function zeroFill(number, targetLength, forceSign) {\n          var absNumber = '' + Math.abs(number),\n              zerosToFill = targetLength - absNumber.length,\n              sign = number >= 0;\n          return (sign ? (forceSign ? '+' : '') : '-') +\n              Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n      }\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n    var formatFunctions = {};\n    var formatTokenFunctions = {};\n    // token:    'M'\n      // padded:   ['MM', 2]\n      // ordinal:  'Mo'\n      // callback: function () { this.month() + 1 }\n      function addFormatToken (token, padded, ordinal, callback) {\n          var func = callback;\n          if (typeof callback === 'string') {\n              func = function () {\n                  return this[callback]();\n              };\n          }\n          if (token) {\n              formatTokenFunctions[token] = func;\n          }\n          if (padded) {\n              formatTokenFunctions[padded[0]] = function () {\n                  return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n              };\n          }\n          if (ordinal) {\n              formatTokenFunctions[ordinal] = function () {\n                  return this.localeData().ordinal(func.apply(this, arguments), token);\n              };\n          }\n      }\n    function removeFormattingTokens(input) {\n          if (input.match(/\\[[\\s\\S]/)) {\n              return input.replace(/^\\[|\\]$/g, '');\n          }\n          return input.replace(/\\\\/g, '');\n      }\n    function makeFormatFunction(format) {\n          var array = format.match(formattingTokens), i, length;\n        for (i = 0, length = array.length; i < length; i++) {\n              if (formatTokenFunctions[array[i]]) {\n                  array[i] = formatTokenFunctions[array[i]];\n              } else {\n                  array[i] = removeFormattingTokens(array[i]);\n              }\n          }\n        return function (mom) {\n              var output = '';\n              for (i = 0; i < length; i++) {\n                  output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n              }\n              return output;\n          };\n      }\n    // format date using native date object\n      function formatMoment(m, format) {\n          if (!m.isValid()) {\n              return m.localeData().invalidDate();\n          }\n        format = expandFormat(format, m.localeData());\n          formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n        return formatFunctions[format](m);\n      }\n    function expandFormat(format, locale) {\n          var i = 5;\n        function replaceLongDateFormatTokens(input) {\n              return locale.longDateFormat(input) || input;\n          }\n        localFormattingTokens.lastIndex = 0;\n          while (i >= 0 && localFormattingTokens.test(format)) {\n              format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n              localFormattingTokens.lastIndex = 0;\n              i -= 1;\n          }\n        return format;\n      }\n    var match1         = /\\d/;            //       0 - 9\n      var match2         = /\\d\\d/;          //      00 - 99\n      var match3         = /\\d{3}/;         //     000 - 999\n      var match4         = /\\d{4}/;         //    0000 - 9999\n      var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n      var match1to2      = /\\d\\d?/;         //       0 - 99\n      var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n      var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n      var match1to3      = /\\d{1,3}/;       //       0 - 999\n      var match1to4      = /\\d{1,4}/;       //       0 - 9999\n      var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n      var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n      var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n    // any word (or two) characters or numbers including two/three word month in arabic.\n      // includes scottish gaelic two word and hyphenated months\n      var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n    var regexes = {};\n    function addRegexToken (token, regex, strictRegex) {\n          regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n              return (isStrict && strictRegex) ? strictRegex : regex;\n          };\n      }\n    function getParseRegexForToken (token, config) {\n          if (!hasOwnProp(regexes, token)) {\n              return new RegExp(unescapeFormat(token));\n          }\n        return regexes[token](config._strict, config._locale);\n      }\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n      function unescapeFormat(s) {\n          return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n              return p1 || p2 || p3 || p4;\n          }));\n      }\n    function regexEscape(s) {\n          return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n      }\n    var tokens = {};\n    function addParseToken (token, callback) {\n          var i, func = callback;\n          if (typeof token === 'string') {\n              token = [token];\n          }\n          if (typeof callback === 'number') {\n              func = function (input, array) {\n                  array[callback] = toInt(input);\n              };\n          }\n          for (i = 0; i < token.length; i++) {\n              tokens[token[i]] = func;\n          }\n      }\n    function addWeekParseToken (token, callback) {\n          addParseToken(token, function (input, array, config, token) {\n              config._w = config._w || {};\n              callback(input, config._w, config, token);\n          });\n      }\n    function addTimeToArrayFromToken(token, input, config) {\n          if (input != null && hasOwnProp(tokens, token)) {\n              tokens[token](input, config._a, config, token);\n          }\n      }\n    var YEAR = 0;\n      var MONTH = 1;\n      var DATE = 2;\n      var HOUR = 3;\n      var MINUTE = 4;\n      var SECOND = 5;\n      var MILLISECOND = 6;\n      var WEEK = 7;\n      var WEEKDAY = 8;\n    function daysInMonth(year, month) {\n          return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n      }\n    // FORMATTING\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n          return this.month() + 1;\n      });\n    addFormatToken('MMM', 0, 0, function (format) {\n          return this.localeData().monthsShort(this, format);\n      });\n    addFormatToken('MMMM', 0, 0, function (format) {\n          return this.localeData().months(this, format);\n      });\n    // ALIASES\n    addUnitAlias('month', 'M');\n    // PARSING\n    addRegexToken('M',    match1to2);\n      addRegexToken('MM',   match1to2, match2);\n      addRegexToken('MMM',  function (isStrict, locale) {\n          return locale.monthsShortRegex(isStrict);\n      });\n      addRegexToken('MMMM', function (isStrict, locale) {\n          return locale.monthsRegex(isStrict);\n      });\n    addParseToken(['M', 'MM'], function (input, array) {\n          array[MONTH] = toInt(input) - 1;\n      });\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n          var month = config._locale.monthsParse(input, token, config._strict);\n          // if we didn't find a month name, mark the date as invalid.\n          if (month != null) {\n              array[MONTH] = month;\n          } else {\n              getParsingFlags(config).invalidMonth = input;\n          }\n      });\n    // LOCALES\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/;\n      var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n      function localeMonths (m, format) {\n          return isArray(this._months) ? this._months[m.month()] :\n              this._months[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n      }\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n      function localeMonthsShort (m, format) {\n          return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n              this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n      }\n    function localeMonthsParse (monthName, format, strict) {\n          var i, mom, regex;\n        if (!this._monthsParse) {\n              this._monthsParse = [];\n              this._longMonthsParse = [];\n              this._shortMonthsParse = [];\n          }\n        for (i = 0; i < 12; i++) {\n              // make the regex if we don't have it already\n              mom = create_utc__createUTC([2000, i]);\n              if (strict && !this._longMonthsParse[i]) {\n                  this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                  this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n              }\n              if (!strict && !this._monthsParse[i]) {\n                  regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                  this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n              }\n              // test the regex\n              if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                  return i;\n              } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                  return i;\n              } else if (!strict && this._monthsParse[i].test(monthName)) {\n                  return i;\n              }\n          }\n      }\n    // MOMENTS\n    function setMonth (mom, value) {\n          var dayOfMonth;\n        if (!mom.isValid()) {\n              // No op\n              return mom;\n          }\n        if (typeof value === 'string') {\n              if (/^\\d+$/.test(value)) {\n                  value = toInt(value);\n              } else {\n                  value = mom.localeData().monthsParse(value);\n                  // TODO: Another silent failure?\n                  if (typeof value !== 'number') {\n                      return mom;\n                  }\n              }\n          }\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n          mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n          return mom;\n      }\n    function getSetMonth (value) {\n          if (value != null) {\n              setMonth(this, value);\n              utils_hooks__hooks.updateOffset(this, true);\n              return this;\n          } else {\n              return get_set__get(this, 'Month');\n          }\n      }\n    function getDaysInMonth () {\n          return daysInMonth(this.year(), this.month());\n      }\n    var defaultMonthsShortRegex = matchWord;\n      function monthsShortRegex (isStrict) {\n          if (this._monthsParseExact) {\n              if (!hasOwnProp(this, '_monthsRegex')) {\n                  computeMonthsParse.call(this);\n              }\n              if (isStrict) {\n                  return this._monthsShortStrictRegex;\n              } else {\n                  return this._monthsShortRegex;\n              }\n          } else {\n              return this._monthsShortStrictRegex && isStrict ?\n                  this._monthsShortStrictRegex : this._monthsShortRegex;\n          }\n      }\n    var defaultMonthsRegex = matchWord;\n      function monthsRegex (isStrict) {\n          if (this._monthsParseExact) {\n              if (!hasOwnProp(this, '_monthsRegex')) {\n                  computeMonthsParse.call(this);\n              }\n              if (isStrict) {\n                  return this._monthsStrictRegex;\n              } else {\n                  return this._monthsRegex;\n              }\n          } else {\n              return this._monthsStrictRegex && isStrict ?\n                  this._monthsStrictRegex : this._monthsRegex;\n          }\n      }\n    function computeMonthsParse () {\n          function cmpLenRev(a, b) {\n              return b.length - a.length;\n          }\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n              i, mom;\n          for (i = 0; i < 12; i++) {\n              // make the regex if we don't have it already\n              mom = create_utc__createUTC([2000, i]);\n              shortPieces.push(this.monthsShort(mom, ''));\n              longPieces.push(this.months(mom, ''));\n              mixedPieces.push(this.months(mom, ''));\n              mixedPieces.push(this.monthsShort(mom, ''));\n          }\n          // Sorting makes sure if one month (or abbr) is a prefix of another it\n          // will match the longer piece.\n          shortPieces.sort(cmpLenRev);\n          longPieces.sort(cmpLenRev);\n          mixedPieces.sort(cmpLenRev);\n          for (i = 0; i < 12; i++) {\n              shortPieces[i] = regexEscape(shortPieces[i]);\n              longPieces[i] = regexEscape(longPieces[i]);\n              mixedPieces[i] = regexEscape(mixedPieces[i]);\n          }\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n          this._monthsShortRegex = this._monthsRegex;\n          this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')$', 'i');\n          this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')$', 'i');\n      }\n    function checkOverflow (m) {\n          var overflow;\n          var a = m._a;\n        if (a && getParsingFlags(m).overflow === -2) {\n              overflow =\n                  a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                  a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                  a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                  a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                  a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                  a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                  -1;\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                  overflow = DATE;\n              }\n              if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                  overflow = WEEK;\n              }\n              if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                  overflow = WEEKDAY;\n              }\n            getParsingFlags(m).overflow = overflow;\n          }\n        return m;\n      }\n    // iso 8601 regex\n      // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n      var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\n      var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n    var isoDates = [\n          ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n          ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n          ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n          ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n          ['YYYY-DDD', /\\d{4}-\\d{3}/],\n          ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n          ['YYYYYYMMDD', /[+-]\\d{10}/],\n          ['YYYYMMDD', /\\d{8}/],\n          // YYYYMM is NOT allowed by the standard\n          ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n          ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n          ['YYYYDDD', /\\d{7}/]\n      ];\n    // iso time formats and regexes\n      var isoTimes = [\n          ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n          ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n          ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n          ['HH:mm', /\\d\\d:\\d\\d/],\n          ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n          ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n          ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n          ['HHmm', /\\d\\d\\d\\d/],\n          ['HH', /\\d\\d/]\n      ];\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n    // date from iso format\n      function configFromISO(config) {\n          var i, l,\n              string = config._i,\n              match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n              allowTime, dateFormat, timeFormat, tzFormat;\n        if (match) {\n              getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                  if (isoDates[i][1].exec(match[1])) {\n                      dateFormat = isoDates[i][0];\n                      allowTime = isoDates[i][2] !== false;\n                      break;\n                  }\n              }\n              if (dateFormat == null) {\n                  config._isValid = false;\n                  return;\n              }\n              if (match[3]) {\n                  for (i = 0, l = isoTimes.length; i < l; i++) {\n                      if (isoTimes[i][1].exec(match[3])) {\n                          // match[2] should be 'T' or space\n                          timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                          break;\n                      }\n                  }\n                  if (timeFormat == null) {\n                      config._isValid = false;\n                      return;\n                  }\n              }\n              if (!allowTime && timeFormat != null) {\n                  config._isValid = false;\n                  return;\n              }\n              if (match[4]) {\n                  if (tzRegex.exec(match[4])) {\n                      tzFormat = 'Z';\n                  } else {\n                      config._isValid = false;\n                      return;\n                  }\n              }\n              config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n              configFromStringAndFormat(config);\n          } else {\n              config._isValid = false;\n          }\n      }\n    // date from iso format or fallback\n      function configFromString(config) {\n          var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n              config._d = new Date(+matched[1]);\n              return;\n          }\n        configFromISO(config);\n          if (config._isValid === false) {\n              delete config._isValid;\n              utils_hooks__hooks.createFromInputFallback(config);\n          }\n      }\n    utils_hooks__hooks.createFromInputFallback = deprecate(\n          'moment construction falls back to js Date. This is ' +\n          'discouraged and will be removed in upcoming major ' +\n          'release. Please refer to ' +\n          'https://github.com/moment/moment/issues/1407 for more info.',\n          function (config) {\n              config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n          }\n      );\n    function createDate (y, m, d, h, M, s, ms) {\n          //can't just apply() to create a date:\n          //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n          var date = new Date(y, m, d, h, M, s, ms);\n        //the date constructor remaps years 0-99 to 1900-1999\n          if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n              date.setFullYear(y);\n          }\n          return date;\n      }\n    function createUTCDate (y) {\n          var date = new Date(Date.UTC.apply(null, arguments));\n        //the Date.UTC function remaps years 0-99 to 1900-1999\n          if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n              date.setUTCFullYear(y);\n          }\n          return date;\n      }\n    // FORMATTING\n    addFormatToken('Y', 0, 0, function () {\n          var y = this.year();\n          return y <= 9999 ? '' + y : '+' + y;\n      });\n    addFormatToken(0, ['YY', 2], 0, function () {\n          return this.year() % 100;\n      });\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n      addFormatToken(0, ['YYYYY',  5],       0, 'year');\n      addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n    // ALIASES\n    addUnitAlias('year', 'y');\n    // PARSING\n    addRegexToken('Y',      matchSigned);\n      addRegexToken('YY',     match1to2, match2);\n      addRegexToken('YYYY',   match1to4, match4);\n      addRegexToken('YYYYY',  match1to6, match6);\n      addRegexToken('YYYYYY', match1to6, match6);\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n      addParseToken('YYYY', function (input, array) {\n          array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);\n      });\n      addParseToken('YY', function (input, array) {\n          array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);\n      });\n      addParseToken('Y', function (input, array) {\n          array[YEAR] = parseInt(input, 10);\n      });\n    // HELPERS\n    function daysInYear(year) {\n          return isLeapYear(year) ? 366 : 365;\n      }\n    function isLeapYear(year) {\n          return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n      }\n    // HOOKS\n    utils_hooks__hooks.parseTwoDigitYear = function (input) {\n          return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n      };\n    // MOMENTS\n    var getSetYear = makeGetSet('FullYear', false);\n    function getIsLeapYear () {\n          return isLeapYear(this.year());\n      }\n    // start-of-first-week - start-of-year\n      function firstWeekOffset(year, dow, doy) {\n          var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n              fwd = 7 + dow - doy,\n              // first-week day local weekday -- which local weekday is fwd\n              fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n        return -fwdlw + fwd - 1;\n      }\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n      function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n          var localWeekday = (7 + weekday - dow) % 7,\n              weekOffset = firstWeekOffset(year, dow, doy),\n              dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n              resYear, resDayOfYear;\n        if (dayOfYear <= 0) {\n              resYear = year - 1;\n              resDayOfYear = daysInYear(resYear) + dayOfYear;\n          } else if (dayOfYear > daysInYear(year)) {\n              resYear = year + 1;\n              resDayOfYear = dayOfYear - daysInYear(year);\n          } else {\n              resYear = year;\n              resDayOfYear = dayOfYear;\n          }\n        return {\n              year: resYear,\n              dayOfYear: resDayOfYear\n          };\n      }\n    function weekOfYear(mom, dow, doy) {\n          var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n              week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n              resWeek, resYear;\n        if (week < 1) {\n              resYear = mom.year() - 1;\n              resWeek = week + weeksInYear(resYear, dow, doy);\n          } else if (week > weeksInYear(mom.year(), dow, doy)) {\n              resWeek = week - weeksInYear(mom.year(), dow, doy);\n              resYear = mom.year() + 1;\n          } else {\n              resYear = mom.year();\n              resWeek = week;\n          }\n        return {\n              week: resWeek,\n              year: resYear\n          };\n      }\n    function weeksInYear(year, dow, doy) {\n          var weekOffset = firstWeekOffset(year, dow, doy),\n              weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n          return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n      }\n    // Pick the first defined of two or three arguments.\n      function defaults(a, b, c) {\n          if (a != null) {\n              return a;\n          }\n          if (b != null) {\n              return b;\n          }\n          return c;\n      }\n    function currentDateArray(config) {\n          // hooks is actually the exported moment object\n          var nowValue = new Date(utils_hooks__hooks.now());\n          if (config._useUTC) {\n              return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n          }\n          return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n      }\n    // convert an array to a date.\n      // the array should mirror the parameters below\n      // note: all values past the year are optional and will default to the lowest possible value.\n      // [year, month, day , hour, minute, second, millisecond]\n      function configFromArray (config) {\n          var i, date, input = [], currentDate, yearToUse;\n        if (config._d) {\n              return;\n          }\n        currentDate = currentDateArray(config);\n        //compute day of the year from weeks and weekdays\n          if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n              dayOfYearFromWeekInfo(config);\n          }\n        //if the day of the year is set, figure out what it is\n          if (config._dayOfYear) {\n              yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                  getParsingFlags(config)._overflowDayOfYear = true;\n              }\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n              config._a[MONTH] = date.getUTCMonth();\n              config._a[DATE] = date.getUTCDate();\n          }\n        // Default to current date.\n          // * if no year, month, day of month are given, default to today\n          // * if day of month is given, default month and year\n          // * if month is given, default only year\n          // * if year is given, don't default anything\n          for (i = 0; i < 3 && config._a[i] == null; ++i) {\n              config._a[i] = input[i] = currentDate[i];\n          }\n        // Zero out whatever was not defaulted, including time\n          for (; i < 7; i++) {\n              config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n          }\n        // Check for 24:00:00.000\n          if (config._a[HOUR] === 24 &&\n                  config._a[MINUTE] === 0 &&\n                  config._a[SECOND] === 0 &&\n                  config._a[MILLISECOND] === 0) {\n              config._nextDay = true;\n              config._a[HOUR] = 0;\n          }\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n          // Apply timezone offset from input. The actual utcOffset can be changed\n          // with parseZone.\n          if (config._tzm != null) {\n              config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n          }\n        if (config._nextDay) {\n              config._a[HOUR] = 24;\n          }\n      }\n    function dayOfYearFromWeekInfo(config) {\n          var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n        w = config._w;\n          if (w.GG != null || w.W != null || w.E != null) {\n              dow = 1;\n              doy = 4;\n            // TODO: We need to take the current isoWeekYear, but that depends on\n              // how we interpret now (local, utc, fixed offset). So create\n              // a now version of current config (take local/utc/offset flags, and\n              // create now).\n              weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);\n              week = defaults(w.W, 1);\n              weekday = defaults(w.E, 1);\n              if (weekday < 1 || weekday > 7) {\n                  weekdayOverflow = true;\n              }\n          } else {\n              dow = config._locale._week.dow;\n              doy = config._locale._week.doy;\n            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);\n              week = defaults(w.w, 1);\n            if (w.d != null) {\n                  // weekday -- low day numbers are considered next week\n                  weekday = w.d;\n                  if (weekday < 0 || weekday > 6) {\n                      weekdayOverflow = true;\n                  }\n              } else if (w.e != null) {\n                  // local weekday -- counting starts from begining of week\n                  weekday = w.e + dow;\n                  if (w.e < 0 || w.e > 6) {\n                      weekdayOverflow = true;\n                  }\n              } else {\n                  // default to begining of week\n                  weekday = dow;\n              }\n          }\n          if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n              getParsingFlags(config)._overflowWeeks = true;\n          } else if (weekdayOverflow != null) {\n              getParsingFlags(config)._overflowWeekday = true;\n          } else {\n              temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n              config._a[YEAR] = temp.year;\n              config._dayOfYear = temp.dayOfYear;\n          }\n      }\n    // constant that refers to the ISO standard\n      utils_hooks__hooks.ISO_8601 = function () {};\n    // date from string and format string\n      function configFromStringAndFormat(config) {\n          // TODO: Move this to another part of the creation flow to prevent circular deps\n          if (config._f === utils_hooks__hooks.ISO_8601) {\n              configFromISO(config);\n              return;\n          }\n        config._a = [];\n          getParsingFlags(config).empty = true;\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n          var string = '' + config._i,\n              i, parsedInput, tokens, token, skipped,\n              stringLength = string.length,\n              totalParsedInputLength = 0;\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        for (i = 0; i < tokens.length; i++) {\n              token = tokens[i];\n              parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n              // console.log('token', token, 'parsedInput', parsedInput,\n              //         'regex', getParseRegexForToken(token, config));\n              if (parsedInput) {\n                  skipped = string.substr(0, string.indexOf(parsedInput));\n                  if (skipped.length > 0) {\n                      getParsingFlags(config).unusedInput.push(skipped);\n                  }\n                  string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                  totalParsedInputLength += parsedInput.length;\n              }\n              // don't parse if it's not a known token\n              if (formatTokenFunctions[token]) {\n                  if (parsedInput) {\n                      getParsingFlags(config).empty = false;\n                  }\n                  else {\n                      getParsingFlags(config).unusedTokens.push(token);\n                  }\n                  addTimeToArrayFromToken(token, parsedInput, config);\n              }\n              else if (config._strict && !parsedInput) {\n                  getParsingFlags(config).unusedTokens.push(token);\n              }\n          }\n        // add remaining unparsed input length to the string\n          getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n          if (string.length > 0) {\n              getParsingFlags(config).unusedInput.push(string);\n          }\n        // clear _12h flag if hour is <= 12\n          if (getParsingFlags(config).bigHour === true &&\n                  config._a[HOUR] <= 12 &&\n                  config._a[HOUR] > 0) {\n              getParsingFlags(config).bigHour = undefined;\n          }\n          // handle meridiem\n          config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n        configFromArray(config);\n          checkOverflow(config);\n      }\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n          var isPm;\n        if (meridiem == null) {\n              // nothing to do\n              return hour;\n          }\n          if (locale.meridiemHour != null) {\n              return locale.meridiemHour(hour, meridiem);\n          } else if (locale.isPM != null) {\n              // Fallback\n              isPm = locale.isPM(meridiem);\n              if (isPm && hour < 12) {\n                  hour += 12;\n              }\n              if (!isPm && hour === 12) {\n                  hour = 0;\n              }\n              return hour;\n          } else {\n              // this is not supposed to happen\n              return hour;\n          }\n      }\n    // date from string and array of format strings\n      function configFromStringAndArray(config) {\n          var tempConfig,\n              bestMoment,\n            scoreToBeat,\n              i,\n              currentScore;\n        if (config._f.length === 0) {\n              getParsingFlags(config).invalidFormat = true;\n              config._d = new Date(NaN);\n              return;\n          }\n        for (i = 0; i < config._f.length; i++) {\n              currentScore = 0;\n              tempConfig = copyConfig({}, config);\n              if (config._useUTC != null) {\n                  tempConfig._useUTC = config._useUTC;\n              }\n              tempConfig._f = config._f[i];\n              configFromStringAndFormat(tempConfig);\n            if (!valid__isValid(tempConfig)) {\n                  continue;\n              }\n            // if there is any input that was not parsed add a penalty for that format\n              currentScore += getParsingFlags(tempConfig).charsLeftOver;\n            //or tokens\n              currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n            getParsingFlags(tempConfig).score = currentScore;\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                  scoreToBeat = currentScore;\n                  bestMoment = tempConfig;\n              }\n          }\n        extend(config, bestMoment || tempConfig);\n      }\n    function configFromObject(config) {\n          if (config._d) {\n              return;\n          }\n        var i = normalizeObjectUnits(config._i);\n          config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n              return obj && parseInt(obj, 10);\n          });\n        configFromArray(config);\n      }\n    function createFromConfig (config) {\n          var res = new Moment(checkOverflow(prepareConfig(config)));\n          if (res._nextDay) {\n              // Adding is smart enough around DST\n              res.add(1, 'd');\n              res._nextDay = undefined;\n          }\n        return res;\n      }\n    function prepareConfig (config) {\n          var input = config._i,\n              format = config._f;\n        config._locale = config._locale || locale_locales__getLocale(config._l);\n        if (input === null || (format === undefined && input === '')) {\n              return valid__createInvalid({nullInput: true});\n          }\n        if (typeof input === 'string') {\n              config._i = input = config._locale.preparse(input);\n          }\n        if (isMoment(input)) {\n              return new Moment(checkOverflow(input));\n          } else if (isArray(format)) {\n              configFromStringAndArray(config);\n          } else if (format) {\n              configFromStringAndFormat(config);\n          } else if (isDate(input)) {\n              config._d = input;\n          } else {\n              configFromInput(config);\n          }\n        if (!valid__isValid(config)) {\n              config._d = null;\n          }\n        return config;\n      }\n    function configFromInput(config) {\n          var input = config._i;\n          if (input === undefined) {\n              config._d = new Date(utils_hooks__hooks.now());\n          } else if (isDate(input)) {\n              config._d = new Date(+input);\n          } else if (typeof input === 'string') {\n              configFromString(config);\n          } else if (isArray(input)) {\n              config._a = map(input.slice(0), function (obj) {\n                  return parseInt(obj, 10);\n              });\n              configFromArray(config);\n          } else if (typeof(input) === 'object') {\n              configFromObject(config);\n          } else if (typeof(input) === 'number') {\n              // from milliseconds\n              config._d = new Date(input);\n          } else {\n              utils_hooks__hooks.createFromInputFallback(config);\n          }\n      }\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n          var c = {};\n        if (typeof(locale) === 'boolean') {\n              strict = locale;\n              locale = undefined;\n          }\n          // object construction must be done this way.\n          // https://github.com/moment/moment/issues/1423\n          c._isAMomentObject = true;\n          c._useUTC = c._isUTC = isUTC;\n          c._l = locale;\n          c._i = input;\n          c._f = format;\n          c._strict = strict;\n        return createFromConfig(c);\n      }\n    function local__createLocal (input, format, locale, strict) {\n          return createLocalOrUTC(input, format, locale, strict, false);\n      }\n    var prototypeMin = deprecate(\n           'moment().min is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n           function () {\n               var other = local__createLocal.apply(null, arguments);\n               if (this.isValid() && other.isValid()) {\n                   return other < this ? this : other;\n               } else {\n                   return valid__createInvalid();\n               }\n           }\n       );\n    var prototypeMax = deprecate(\n          'moment().max is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n          function () {\n              var other = local__createLocal.apply(null, arguments);\n              if (this.isValid() && other.isValid()) {\n                  return other > this ? this : other;\n              } else {\n                  return valid__createInvalid();\n              }\n          }\n      );\n    // Pick a moment m from moments so that m[fn](other) is true for all\n      // other. This relies on the function fn to be transitive.\n      //\n      // moments should either be an array of moment objects or an array, whose\n      // first element is an array of moment objects.\n      function pickBy(fn, moments) {\n          var res, i;\n          if (moments.length === 1 && isArray(moments[0])) {\n              moments = moments[0];\n          }\n          if (!moments.length) {\n              return local__createLocal();\n          }\n          res = moments[0];\n          for (i = 1; i < moments.length; ++i) {\n              if (!moments[i].isValid() || moments[i][fn](res)) {\n                  res = moments[i];\n              }\n          }\n          return res;\n      }\n    // TODO: Use [].sort instead?\n      function min () {\n          var args = [].slice.call(arguments, 0);\n        return pickBy('isBefore', args);\n      }\n    function max () {\n          var args = [].slice.call(arguments, 0);\n        return pickBy('isAfter', args);\n      }\n    var now = function () {\n          return Date.now ? Date.now() : +(new Date());\n      };\n    function Duration (duration) {\n          var normalizedInput = normalizeObjectUnits(duration),\n              years = normalizedInput.year || 0,\n              quarters = normalizedInput.quarter || 0,\n              months = normalizedInput.month || 0,\n              weeks = normalizedInput.week || 0,\n              days = normalizedInput.day || 0,\n              hours = normalizedInput.hour || 0,\n              minutes = normalizedInput.minute || 0,\n              seconds = normalizedInput.second || 0,\n              milliseconds = normalizedInput.millisecond || 0;\n        // representation for dateAddRemove\n          this._milliseconds = +milliseconds +\n              seconds * 1e3 + // 1000\n              minutes * 6e4 + // 1000 * 60\n              hours * 36e5; // 1000 * 60 * 60\n          // Because of dateAddRemove treats 24 hours as different from a\n          // day when working around DST, we need to store them separately\n          this._days = +days +\n              weeks * 7;\n          // It is impossible translate months into days without knowing\n          // which months you are are talking about, so we have to store\n          // it separately.\n          this._months = +months +\n              quarters * 3 +\n              years * 12;\n        this._data = {};\n        this._locale = locale_locales__getLocale();\n        this._bubble();\n      }\n    function isDuration (obj) {\n          return obj instanceof Duration;\n      }\n    // FORMATTING\n    function offset (token, separator) {\n          addFormatToken(token, 0, 0, function () {\n              var offset = this.utcOffset();\n              var sign = '+';\n              if (offset < 0) {\n                  offset = -offset;\n                  sign = '-';\n              }\n              return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n          });\n      }\n    offset('Z', ':');\n      offset('ZZ', '');\n    // PARSING\n    addRegexToken('Z',  matchShortOffset);\n      addRegexToken('ZZ', matchShortOffset);\n      addParseToken(['Z', 'ZZ'], function (input, array, config) {\n          config._useUTC = true;\n          config._tzm = offsetFromString(matchShortOffset, input);\n      });\n    // HELPERS\n    // timezone chunker\n      // '+10:00' > ['10',  '00']\n      // '-1530'  > ['-15', '30']\n      var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n    function offsetFromString(matcher, string) {\n          var matches = ((string || '').match(matcher) || []);\n          var chunk   = matches[matches.length - 1] || [];\n          var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n          var minutes = +(parts[1] * 60) + toInt(parts[2]);\n        return parts[0] === '+' ? minutes : -minutes;\n      }\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n      function cloneWithOffset(input, model) {\n          var res, diff;\n          if (model._isUTC) {\n              res = model.clone();\n              diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);\n              // Use low-level api, because this fn is low-level api.\n              res._d.setTime(+res._d + diff);\n              utils_hooks__hooks.updateOffset(res, false);\n              return res;\n          } else {\n              return local__createLocal(input).local();\n          }\n      }\n    function getDateOffset (m) {\n          // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n          // https://github.com/moment/moment/pull/1871\n          return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n      }\n    // HOOKS\n    // This function will be called whenever a moment is mutated.\n      // It is intended to keep the offset in sync with the timezone.\n      utils_hooks__hooks.updateOffset = function () {};\n    // MOMENTS\n    // keepLocalTime = true means only change the timezone, without\n      // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n      // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n      // +0200, so we adjust the time as needed, to be valid.\n      //\n      // Keeping the time actually adds/subtracts (one hour)\n      // from the actual represented time. That is why we call updateOffset\n      // a second time. In case it wants us to change the offset again\n      // _changeInProgress == true case, then we have to adjust, because\n      // there is no such time in the given timezone.\n      function getSetOffset (input, keepLocalTime) {\n          var offset = this._offset || 0,\n              localAdjust;\n          if (!this.isValid()) {\n              return input != null ? this : NaN;\n          }\n          if (input != null) {\n              if (typeof input === 'string') {\n                  input = offsetFromString(matchShortOffset, input);\n              } else if (Math.abs(input) < 16) {\n                  input = input * 60;\n              }\n              if (!this._isUTC && keepLocalTime) {\n                  localAdjust = getDateOffset(this);\n              }\n              this._offset = input;\n              this._isUTC = true;\n              if (localAdjust != null) {\n                  this.add(localAdjust, 'm');\n              }\n              if (offset !== input) {\n                  if (!keepLocalTime || this._changeInProgress) {\n                      add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);\n                  } else if (!this._changeInProgress) {\n                      this._changeInProgress = true;\n                      utils_hooks__hooks.updateOffset(this, true);\n                      this._changeInProgress = null;\n                  }\n              }\n              return this;\n          } else {\n              return this._isUTC ? offset : getDateOffset(this);\n          }\n      }\n    function getSetZone (input, keepLocalTime) {\n          if (input != null) {\n              if (typeof input !== 'string') {\n                  input = -input;\n              }\n            this.utcOffset(input, keepLocalTime);\n            return this;\n          } else {\n              return -this.utcOffset();\n          }\n      }\n    function setOffsetToUTC (keepLocalTime) {\n          return this.utcOffset(0, keepLocalTime);\n      }\n    function setOffsetToLocal (keepLocalTime) {\n          if (this._isUTC) {\n              this.utcOffset(0, keepLocalTime);\n              this._isUTC = false;\n            if (keepLocalTime) {\n                  this.subtract(getDateOffset(this), 'm');\n              }\n          }\n          return this;\n      }\n    function setOffsetToParsedOffset () {\n          if (this._tzm) {\n              this.utcOffset(this._tzm);\n          } else if (typeof this._i === 'string') {\n              this.utcOffset(offsetFromString(matchOffset, this._i));\n          }\n          return this;\n      }\n    function hasAlignedHourOffset (input) {\n          if (!this.isValid()) {\n              return false;\n          }\n          input = input ? local__createLocal(input).utcOffset() : 0;\n        return (this.utcOffset() - input) % 60 === 0;\n      }\n    function isDaylightSavingTime () {\n          return (\n              this.utcOffset() > this.clone().month(0).utcOffset() ||\n              this.utcOffset() > this.clone().month(5).utcOffset()\n          );\n      }\n    function isDaylightSavingTimeShifted () {\n          if (!isUndefined(this._isDSTShifted)) {\n              return this._isDSTShifted;\n          }\n        var c = {};\n        copyConfig(c, this);\n          c = prepareConfig(c);\n        if (c._a) {\n              var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);\n              this._isDSTShifted = this.isValid() &&\n                  compareArrays(c._a, other.toArray()) > 0;\n          } else {\n              this._isDSTShifted = false;\n          }\n        return this._isDSTShifted;\n      }\n    function isLocal () {\n          return this.isValid() ? !this._isUTC : false;\n      }\n    function isUtcOffset () {\n          return this.isValid() ? this._isUTC : false;\n      }\n    function isUtc () {\n          return this.isValid() ? this._isUTC && this._offset === 0 : false;\n      }\n    // ASP.NET json date format regex\n      var aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?\\d*)?$/;\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n      // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n      // and further modified to allow for strings containing both week and day\n      var isoRegex = /^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$/;\n    function create__createDuration (input, key) {\n          var duration = input,\n              // matching against regexp is expensive, do it on demand\n              match = null,\n              sign,\n              ret,\n              diffRes;\n        if (isDuration(input)) {\n              duration = {\n                  ms : input._milliseconds,\n                  d  : input._days,\n                  M  : input._months\n              };\n          } else if (typeof input === 'number') {\n              duration = {};\n              if (key) {\n                  duration[key] = input;\n              } else {\n                  duration.milliseconds = input;\n              }\n          } else if (!!(match = aspNetRegex.exec(input))) {\n              sign = (match[1] === '-') ? -1 : 1;\n              duration = {\n                  y  : 0,\n                  d  : toInt(match[DATE])        * sign,\n                  h  : toInt(match[HOUR])        * sign,\n                  m  : toInt(match[MINUTE])      * sign,\n                  s  : toInt(match[SECOND])      * sign,\n                  ms : toInt(match[MILLISECOND]) * sign\n              };\n          } else if (!!(match = isoRegex.exec(input))) {\n              sign = (match[1] === '-') ? -1 : 1;\n              duration = {\n                  y : parseIso(match[2], sign),\n                  M : parseIso(match[3], sign),\n                  w : parseIso(match[4], sign),\n                  d : parseIso(match[5], sign),\n                  h : parseIso(match[6], sign),\n                  m : parseIso(match[7], sign),\n                  s : parseIso(match[8], sign)\n              };\n          } else if (duration == null) {// checks for null or undefined\n              duration = {};\n          } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n              diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));\n            duration = {};\n              duration.ms = diffRes.milliseconds;\n              duration.M = diffRes.months;\n          }\n        ret = new Duration(duration);\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n              ret._locale = input._locale;\n          }\n        return ret;\n      }\n    create__createDuration.fn = Duration.prototype;\n    function parseIso (inp, sign) {\n          // We'd normally use ~~inp for this, but unfortunately it also\n          // converts floats to ints.\n          // inp may be undefined, so careful calling replace on it.\n          var res = inp && parseFloat(inp.replace(',', '.'));\n          // apply sign while we're at it\n          return (isNaN(res) ? 0 : res) * sign;\n      }\n    function positiveMomentsDifference(base, other) {\n          var res = {milliseconds: 0, months: 0};\n        res.months = other.month() - base.month() +\n              (other.year() - base.year()) * 12;\n          if (base.clone().add(res.months, 'M').isAfter(other)) {\n              --res.months;\n          }\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n        return res;\n      }\n    function momentsDifference(base, other) {\n          var res;\n          if (!(base.isValid() && other.isValid())) {\n              return {milliseconds: 0, months: 0};\n          }\n        other = cloneWithOffset(other, base);\n          if (base.isBefore(other)) {\n              res = positiveMomentsDifference(base, other);\n          } else {\n              res = positiveMomentsDifference(other, base);\n              res.milliseconds = -res.milliseconds;\n              res.months = -res.months;\n          }\n        return res;\n      }\n    function absRound (number) {\n          if (number < 0) {\n              return Math.round(-1 * number) * -1;\n          } else {\n              return Math.round(number);\n          }\n      }\n    // TODO: remove 'name' arg after deprecation is removed\n      function createAdder(direction, name) {\n          return function (val, period) {\n              var dur, tmp;\n              //invert the arguments, but complain about it\n              if (period !== null && !isNaN(+period)) {\n                  deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                  tmp = val; val = period; period = tmp;\n              }\n            val = typeof val === 'string' ? +val : val;\n              dur = create__createDuration(val, period);\n              add_subtract__addSubtract(this, dur, direction);\n              return this;\n          };\n      }\n    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {\n          var milliseconds = duration._milliseconds,\n              days = absRound(duration._days),\n              months = absRound(duration._months);\n        if (!mom.isValid()) {\n              // No op\n              return;\n          }\n        updateOffset = updateOffset == null ? true : updateOffset;\n        if (milliseconds) {\n              mom._d.setTime(+mom._d + milliseconds * isAdding);\n          }\n          if (days) {\n              get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);\n          }\n          if (months) {\n              setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);\n          }\n          if (updateOffset) {\n              utils_hooks__hooks.updateOffset(mom, days || months);\n          }\n      }\n    var add_subtract__add      = createAdder(1, 'add');\n      var add_subtract__subtract = createAdder(-1, 'subtract');\n    function moment_calendar__calendar (time, formats) {\n          // We want to compare the start of today, vs this.\n          // Getting start-of-today depends on whether we're local/utc/offset or not.\n          var now = time || local__createLocal(),\n              sod = cloneWithOffset(now, this).startOf('day'),\n              diff = this.diff(sod, 'days', true),\n              format = diff < -6 ? 'sameElse' :\n                  diff < -1 ? 'lastWeek' :\n                  diff < 0 ? 'lastDay' :\n                  diff < 1 ? 'sameDay' :\n                  diff < 2 ? 'nextDay' :\n                  diff < 7 ? 'nextWeek' : 'sameElse';\n        var output = formats && (isFunction(formats[format]) ? formats[format]() : formats[format]);\n        return this.format(output || this.localeData().calendar(format, this, local__createLocal(now)));\n      }\n    function clone () {\n          return new Moment(this);\n      }\n    function isAfter (input, units) {\n          var localInput = isMoment(input) ? input : local__createLocal(input);\n          if (!(this.isValid() && localInput.isValid())) {\n              return false;\n          }\n          units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n          if (units === 'millisecond') {\n              return +this > +localInput;\n          } else {\n              return +localInput < +this.clone().startOf(units);\n          }\n      }\n    function isBefore (input, units) {\n          var localInput = isMoment(input) ? input : local__createLocal(input);\n          if (!(this.isValid() && localInput.isValid())) {\n              return false;\n          }\n          units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n          if (units === 'millisecond') {\n              return +this < +localInput;\n          } else {\n              return +this.clone().endOf(units) < +localInput;\n          }\n      }\n    function isBetween (from, to, units) {\n          return this.isAfter(from, units) && this.isBefore(to, units);\n      }\n    function isSame (input, units) {\n          var localInput = isMoment(input) ? input : local__createLocal(input),\n              inputMs;\n          if (!(this.isValid() && localInput.isValid())) {\n              return false;\n          }\n          units = normalizeUnits(units || 'millisecond');\n          if (units === 'millisecond') {\n              return +this === +localInput;\n          } else {\n              inputMs = +localInput;\n              return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n          }\n      }\n    function isSameOrAfter (input, units) {\n          return this.isSame(input, units) || this.isAfter(input,units);\n      }\n    function isSameOrBefore (input, units) {\n          return this.isSame(input, units) || this.isBefore(input,units);\n      }\n    function diff (input, units, asFloat) {\n          var that,\n              zoneDelta,\n              delta, output;\n        if (!this.isValid()) {\n              return NaN;\n          }\n        that = cloneWithOffset(input, this);\n        if (!that.isValid()) {\n              return NaN;\n          }\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n        units = normalizeUnits(units);\n        if (units === 'year' || units === 'month' || units === 'quarter') {\n              output = monthDiff(this, that);\n              if (units === 'quarter') {\n                  output = output / 3;\n              } else if (units === 'year') {\n                  output = output / 12;\n              }\n          } else {\n              delta = this - that;\n              output = units === 'second' ? delta / 1e3 : // 1000\n                  units === 'minute' ? delta / 6e4 : // 1000 * 60\n                  units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n                  units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                  units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                  delta;\n          }\n          return asFloat ? output : absFloor(output);\n      }\n    function monthDiff (a, b) {\n          // difference in months\n          var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n              // b is in (anchor - 1 month, anchor + 1 month)\n              anchor = a.clone().add(wholeMonthDiff, 'months'),\n              anchor2, adjust;\n        if (b - anchor < 0) {\n              anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n              // linear across the month\n              adjust = (b - anchor) / (anchor - anchor2);\n          } else {\n              anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n              // linear across the month\n              adjust = (b - anchor) / (anchor2 - anchor);\n          }\n        return -(wholeMonthDiff + adjust);\n      }\n    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    function toString () {\n          return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n      }\n    function moment_format__toISOString () {\n          var m = this.clone().utc();\n          if (0 < m.year() && m.year() <= 9999) {\n              if (isFunction(Date.prototype.toISOString)) {\n                  // native implementation is ~50x faster, use it when we can\n                  return this.toDate().toISOString();\n              } else {\n                  return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n              }\n          } else {\n              return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n          }\n      }\n    function format (inputString) {\n          var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);\n          return this.localeData().postformat(output);\n      }\n    function from (time, withoutSuffix) {\n          if (this.isValid() &&\n                  ((isMoment(time) && time.isValid()) ||\n                   local__createLocal(time).isValid())) {\n              return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n          } else {\n              return this.localeData().invalidDate();\n          }\n      }\n    function fromNow (withoutSuffix) {\n          return this.from(local__createLocal(), withoutSuffix);\n      }\n    function to (time, withoutSuffix) {\n          if (this.isValid() &&\n                  ((isMoment(time) && time.isValid()) ||\n                   local__createLocal(time).isValid())) {\n              return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n          } else {\n              return this.localeData().invalidDate();\n          }\n      }\n    function toNow (withoutSuffix) {\n          return this.to(local__createLocal(), withoutSuffix);\n      }\n    // If passed a locale key, it will set the locale for this\n      // instance.  Otherwise, it will return the locale configuration\n      // variables for this instance.\n      function locale (key) {\n          var newLocaleData;\n        if (key === undefined) {\n              return this._locale._abbr;\n          } else {\n              newLocaleData = locale_locales__getLocale(key);\n              if (newLocaleData != null) {\n                  this._locale = newLocaleData;\n              }\n              return this;\n          }\n      }\n    var lang = deprecate(\n          'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n          function (key) {\n              if (key === undefined) {\n                  return this.localeData();\n              } else {\n                  return this.locale(key);\n              }\n          }\n      );\n    function localeData () {\n          return this._locale;\n      }\n    function startOf (units) {\n          units = normalizeUnits(units);\n          // the following switch intentionally omits break keywords\n          // to utilize falling through the cases.\n          switch (units) {\n          case 'year':\n              this.month(0);",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5276,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5278,
            "description": "module.exports = function(module) {\n  \tif(!module.webpackPolyfill) {\n  \t\tmodule.deprecate = function() {};\n  \t\tmodule.paths = [];\n  \t\t// module.parent = undefined by default\n  \t\tmodule.children = [];\n  \t\tmodule.webpackPolyfill = 1;\n  \t}\n  \treturn module;\n  }\n\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5294,
            "description": "function webpackContext(req) {\n  \tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n  }\n  webpackContext.keys = function() { return []; };\n  webpackContext.resolve = webpackContext;\n  module.exports = webpackContext;\n  webpackContext.id = 5;\n\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5307,
            "description": "/* WEBPACK VAR INJECTION */(function(global) {'use strict';\nvar _rng;\nvar globalVar = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : null;\nif (globalVar && globalVar.crypto && crypto.getRandomValues) {\n    // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n    // Moderately fast, high quality\n    var _rnds8 = new Uint8Array(16);\n    _rng = function whatwgRNG() {\n      crypto.getRandomValues(_rnds8);\n      return _rnds8;\n    };\n  }\nif (!_rng) {\n    // Math.random()-based (RNG)\n    //\n    // If all else fails, use Math.random().  It's fast, but is of unspecified\n    // quality.\n    var _rnds = new Array(16);\n    _rng = function _rng() {\n      for (var i = 0, r; i < 16; i++) {\n        if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n        _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n      }\n    return _rnds;\n    };\n  }\n//     uuid.js\n  //\n  //     Copyright (c) 2010-2012 Robert Kieffer\n  //     MIT License - http://opensource.org/licenses/mit-license.php\n// Unique ID creation requires a high quality random # generator.  We feature\n  // detect to determine the best RNG source, normalizing to a function that\n  // returns 128-bits of randomness, since that's what's usually required\n//var _rng = require('./rng');\n// Maps for number <-> hex string conversion\n  var _byteToHex = [];\n  var _hexToByte = {};\n  for (var i = 0; i < 256; i++) {\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    _hexToByte[_byteToHex[i]] = i;\n  }\n// **`parse()` - Parse a UUID into it's component bytes**\n  function parse(s, buf, offset) {\n    var i = buf && offset || 0,\n        ii = 0;\n  buf = buf || [];\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, function (oct) {\n      if (ii < 16) {\n        // Don't overflow!\n        buf[i + ii++] = _hexToByte[oct];\n      }\n    });\n  // Zero out remaining bytes if string was short\n    while (ii < 16) {\n      buf[i + ii++] = 0;\n    }\n  return buf;\n  }\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n  function unparse(buf, offset) {\n    var i = offset || 0,\n        bth = _byteToHex;\n    return bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]];\n  }\n// **`v1()` - Generate time-based UUID**\n  //\n  // Inspired by https://github.com/LiosK/UUID.js\n  // and http://docs.python.org/library/uuid.html\n// random #'s we need to init node and clockseq\n  var _seedBytes = _rng();\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n  var _nodeId = [_seedBytes[0] | 0x01, _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]];\n// Per 4.2.2, randomize (14 bit) clockseq\n  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n// Previous uuid creation time\n  var _lastMSecs = 0,\n      _lastNSecs = 0;\n// See https://github.com/broofa/node-uuid for API details\n  function v1(options, buf, offset) {\n    var i = buf && offset || 0;\n    var b = buf || [];\n  options = options || {};\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n    var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n    var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n  // Time since last uuid creation (in msecs)\n    var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n  // Per 4.2.1.2, Bump clockseq on clock regression\n    if (dt < 0 && options.clockseq === undefined) {\n      clockseq = clockseq + 1 & 0x3fff;\n    }\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n      nsecs = 0;\n    }\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n    if (nsecs >= 10000) {\n      throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n    }\n  _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq;\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n    msecs += 12219292800000;\n  // `time_low`\n    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff;\n  // `time_mid`\n    var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff;\n  // `time_high_and_version`\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n    b[i++] = tmh >>> 16 & 0xff;\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n    b[i++] = clockseq >>> 8 | 0x80;\n  // `clock_seq_low`\n    b[i++] = clockseq & 0xff;\n  // `node`\n    var node = options.node || _nodeId;\n    for (var n = 0; n < 6; n++) {\n      b[i + n] = node[n];\n    }\n  return buf ? buf : unparse(b);\n  }\n// **`v4()` - Generate random UUID**\n// See https://github.com/broofa/node-uuid for API details\n  function v4(options, buf, offset) {\n    // Deprecated - 'format' argument, as supported in v1.2\n    var i = buf && offset || 0;\n  if (typeof options == 'string') {\n      buf = options == 'binary' ? new Array(16) : null;\n      options = null;\n    }\n    options = options || {};\n  var rnds = options.random || (options.rng || _rng)();\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = rnds[6] & 0x0f | 0x40;\n    rnds[8] = rnds[8] & 0x3f | 0x80;\n  // Copy bytes to buffer, if provided\n    if (buf) {\n      for (var ii = 0; ii < 16; ii++) {\n        buf[i + ii] = rnds[ii];\n      }\n    }\n  return buf || unparse(rnds);\n  }\n// Export public API\n  var uuid = v4;\n  uuid.v1 = v1;\n  uuid.v4 = v4;\n  uuid.parse = parse;\n  uuid.unparse = unparse;\nmodule.exports = uuid;\n  /* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5523,
            "description": "'use strict';\n// DOM utility methods\n/**\n   * this prepares the JSON container for allocating SVG elements\n   * @param JSONcontainer\n   * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5544,
            "description": "this cleans up all the unused SVG elements. By asking for the parentNode, we only need to supply the JSON container from\nwhich to remove the redundant elements.",
            "params": [
                {
                    "name": "JSONcontainer",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5565,
            "description": "Ensures that all elements are removed first up so they can be recreated cleanly",
            "params": [
                {
                    "name": "JSONcontainer",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5575,
            "description": "Allocate or generate an SVG element if needed. Store a reference to it in the JSON container and draw it in the svgContainer\nthe JSON container and the SVG container have to be supplied so other svg containers (like the legend) can use this.",
            "params": [
                {
                    "name": "elementType",
                    "description": ""
                },
                {
                    "name": "JSONcontainer",
                    "description": ""
                },
                {
                    "name": "svgContainer",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5609,
            "description": "Allocate or generate an SVG element if needed. Store a reference to it in the JSON container and draw it in the svgContainer\nthe JSON container and the SVG container have to be supplied so other svg containers (like the legend) can use this.",
            "params": [
                {
                    "name": "elementType",
                    "description": ""
                },
                {
                    "name": "JSONcontainer",
                    "description": ""
                },
                {
                    "name": "DOMContainer",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5651,
            "description": "Draw a point object. This is a separate function because it can also be called by the legend.\nThe reason the JSONcontainer and the target SVG svgContainer have to be supplied is so the legend can use these functions\nas well.",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "groupTemplate:",
                    "description": "A template containing the necessary information to draw the datapoint e.g.,",
                    "type": "Style: 'circle', size: 5, className: 'className'"
                },
                {
                    "name": "JSONcontainer",
                    "description": ""
                },
                {
                    "name": "svgContainer",
                    "description": ""
                },
                {
                    "name": "labelObj",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5708,
            "description": "draw a bar SVG element centered on the X coordinate",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "className",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5733,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5735,
            "description": "'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar util = __webpack_require__(1);\n  var Queue = __webpack_require__(9);\n/**\n   * DataSet\n   *\n   * Usage:\n   *     var dataSet = new DataSet({\n   *         fieldId: '_id',\n   *         type: {\n   *             // ...\n   *         }\n   *     });\n   *\n   *     dataSet.add(item);\n   *     dataSet.add(data);\n   *     dataSet.update(item);\n   *     dataSet.update(data);\n   *     dataSet.remove(id);\n   *     dataSet.remove(ids);\n   *     var data = dataSet.get();\n   *     var data = dataSet.get(id);\n   *     var data = dataSet.get(ids);\n   *     var data = dataSet.get(ids, options, data);\n   *     dataSet.clear();\n   *\n   * A data set can:\n   * - add/remove/update data\n   * - gives triggers upon changes in the data\n   * - can  import/export data in various data formats\n   *\n   * @param {Array} [data]    Optional array with initial data\n   * @param {Object} [options]   Available options:\n   *                             {String} fieldId Field name of the id in the\n   *                                              items, 'id' by default.\n   *                             {Object.<String, String} type\n   *                                              A map with field names as key,\n   *                                              and the field type as value.\n   *                             {Object} queue   Queue changes to the DataSet,\n   *                                              flush them all at once.\n   *                                              Queue options:\n   *                                              - {number} delay  Delay in ms, null by default\n   *                                              - {number} max    Maximum number of entries in the queue, Infinity by default\n   * @constructor DataSet",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5830,
            "params": [
                {
                    "name": "options",
                    "description": "Available options:\n                            {Object} queue   Queue changes to the DataSet,\n                                             flush them all at once.\n                                             Queue options:\n                                             - {number} delay  Delay in ms, null by default\n                                             - {number} max    Maximum number of entries in the queue, Infinity by default",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5862,
            "description": "Subscribe to an event, add an event listener",
            "params": [
                {
                    "name": "event",
                    "description": "Event name. Available events: 'put', 'update',\n                             'remove'",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback method. Called with three parameters:\n                                 {String} event\n                                 {Object | null} params\n                                 {String | Number} senderId",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5888,
            "description": "Unsubscribe from an event, remove an event listener",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5907,
            "description": "Trigger an event",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "",
                    "type": "Object | null"
                },
                {
                    "name": "senderId",
                    "description": "Optional id of the sender.",
                    "type": "String",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5935,
            "description": "Add data.\nAdding an item will fail when there already is an item with the same id.",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object | Array"
                },
                {
                    "name": "senderId",
                    "description": "Optional sender id",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "addedIds      Array with the ids of the added items",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 5968,
            "description": "Update existing items. When an item does not exist, it will be created",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object | Array"
                },
                {
                    "name": "senderId",
                    "description": "Optional sender id",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "updatedIds     The ids of the added or updated items",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6032,
            "description": "Get a data item or multiple items.\n\nUsage:\n\n    get()\n    get(options: Object)\n\n    get(id: Number | String)\n    get(id: Number | String, options: Object)\n\n    get(ids: Number[] | String[])\n    get(ids: Number[] | String[], options: Object)\n\nWhere:\n\n{Number | String} id         The id of an item\n{Number[] | String{}} ids    An array with ids of items\n{Object} options             An Object with options. Available options:\n{String} [returnType]        Type of data to be returned.\n                             Can be 'Array' (default) or 'Object'.\n{Object.<String, String>} [type]\n{String[]} [fields]          field names to be returned\n{function} [filter]          filter items\n{String | function} [order]  Order the items by a field name or custom sort function.",
            "throws": {
                "description": "Error"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6161,
            "description": "Get ids of all items or from a filtered set of items.",
            "params": [
                {
                    "name": "[options]    An Object with options. Available options:\n                             {function} [filter] filter items\n                             {String | function} [order]",
                    "description": "Order the items by\n                                 a field name or custom sort function.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "ids",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6238,
            "description": "Returns the DataSet itself. Is overwritten for example by the DataView,\nwhich returns the DataSet it is connected to instead.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6246,
            "description": "Execute a callback function for every item in the dataset.",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "[options]    Available options:\n                             {Object.<String, String>} [type]\n                             {String[]} [fields] filter fields\n                             {function} [filter] filter items\n                             {String | function} [order]",
                    "description": "Order the items by\n                                 a field name or custom sort function.",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6287,
            "description": "Map every item in the dataset.",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "[options]    Available options:\n                             {Object.<String, String>} [type]\n                             {String[]} [fields] filter fields\n                             {function} [filter] filter items\n                             {String | function} [order]",
                    "description": "Order the items by\n                                 a field name or custom sort function.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "mappedItems",
                "type": "Object[]"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6326,
            "description": "Filter the fields of an item",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object | null"
                },
                {
                    "name": "fields",
                    "description": "Field names",
                    "type": "String[]"
                }
            ],
            "return": {
                "description": "filteredItem or null if no item is provided",
                "type": "Object | null"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6364,
            "description": "Sort the provided array with items",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "Object[]"
                },
                {
                    "name": "order",
                    "description": "A field name or custom sort function.",
                    "type": "String | function"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6390,
            "description": "Remove an object by pointer or by id",
            "params": [
                {
                    "name": "id",
                    "description": "Object or id, or an array with\n                                             objects or ids to be removed",
                    "type": "String | Number | Object | Array"
                },
                {
                    "name": "senderId",
                    "description": "Optional sender id",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "removedIds",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6424,
            "description": "Remove an item by its id",
            "params": [
                {
                    "name": "id",
                    "description": "id or item",
                    "type": "Number | String | Object"
                }
            ],
            "return": {
                "description": "id",
                "type": "Number | String | null"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6448,
            "description": "Clear the data",
            "params": [
                {
                    "name": "senderId",
                    "description": "Optional sender id",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "removedIds    The ids of all removed items",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6464,
            "description": "Find the item with maximum value of a specified field",
            "params": [
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "item  Item containing max value, or null if no items",
                "type": "Object | null"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6490,
            "description": "Find the item with minimum value of a specified field",
            "params": [
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "item  Item containing max value, or null if no items",
                "type": "Object | null"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6516,
            "description": "Find all distinct values of a specified field",
            "params": [
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "values  Array containing all distinct values. If data items\n                        do not contain the specified field are ignored.\n                        The returned array is unordered.",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6557,
            "description": "Add a single item. Will fail when an item with the same id already exists.",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "id",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6593,
            "description": "Get an item. Fields can be converted to a specific type",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "types",
                    "description": "field types to convert",
                    "type": "Object.<String, String>",
                    "optional": true
                }
            ],
            "return": {
                "description": "item",
                "type": "Object | null"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6630,
            "description": "Update a single item: merge with existing item.\nWill fail when the item has no id, or when there does not exist an item\nwith the same id.",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "id",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6662,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6664,
            "description": "'use strict';\n/**\n   * A queue\n   * @param {Object} options\n   *            Available options:\n   *            - delay: number    When provided, the queue will be flushed\n   *                               automatically after an inactivity of this delay\n   *                               in milliseconds.\n   *                               Default value is null.\n   *            - max: number      When the queue exceeds the given maximum number\n   *                               of entries, the queue is flushed automatically.\n   *                               Default value of max is Infinity.\n   * @constructor",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6694,
            "description": "Update the configuration of the queue",
            "params": [
                {
                    "name": "options",
                    "description": "Available options:\n           - delay: number    When provided, the queue will be flushed\n                              automatically after an inactivity of this delay\n                              in milliseconds.\n                              Default value is null.\n           - max: number      When the queue exceeds the given maximum number\n                              of entries, the queue is flushed automatically.\n                              Default value of max is Infinity.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6718,
            "description": "Extend an object with queuing functionality.\nThe object will be extended with a function flush, and the methods provided\nin options.replace will be replaced with queued ones.",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Available options:\n           - replace: Array.<string>\n                              A list with method names of the methods\n                              on the object to be replaced with queued ones.\n           - delay: number    When provided, the queue will be flushed\n                              automatically after an inactivity of this delay\n                              in milliseconds.\n                              Default value is null.\n           - max: number      When the queue exceeds the given maximum number\n                              of entries, the queue is flushed automatically.\n                              Default value of max is Infinity.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the created queue",
                "type": "Queue"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6771,
            "description": "Destroy the queue. The queue will first flush all queued actions, and in\ncase it has extended an object, will restore the original object.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6793,
            "description": "Replace a method on an object with a queued version",
            "params": [
                {
                    "name": "object",
                    "description": "Object having the method",
                    "type": "Object"
                },
                {
                    "name": "method",
                    "description": "The method name",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6821,
            "description": "Queue a call",
            "params": [
                {
                    "name": "|",
                    "description": "{fn: function, args: Array, context: Object}} entry",
                    "type": "Function | fn: function, args: Array"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6835,
            "description": "Check whether the queue needs to be flushed",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6855,
            "description": "Flush all queued calls",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6867,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6869,
            "description": "'use strict';\nvar util = __webpack_require__(1);\n  var DataSet = __webpack_require__(8);\n/**\n   * DataView\n   *\n   * a dataview offers a filtered view on a dataset or an other dataview.\n   *\n   * @param {DataSet | DataView} data\n   * @param {Object} [options]   Available options: see method get\n   *\n   * @constructor DataView",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6905,
            "description": "Set a data source for the view",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "DataSet | DataView"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6947,
            "description": "Refresh the DataView. Useful when the DataView has a filter function\ncontaining a variable parameter.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 6989,
            "description": "Get data from the data view\n\nUsage:\n\n    get()\n    get(options: Object)\n    get(options: Object, data: Array | DataTable)\n\n    get(id: Number)\n    get(id: Number, options: Object)\n    get(id: Number, options: Object, data: Array | DataTable)\n\n    get(ids: Number[])\n    get(ids: Number[], options: Object)\n    get(ids: Number[], options: Object, data: Array | DataTable)\n\nWhere:\n\n{Number | String} id         The id of an item\n{Number[] | String{}} ids    An array with ids of items\n{Object} options             An Object with options. Available options:\n                             {String} [type] Type of data to be returned. Can\n                                             be 'DataTable' or 'Array' (default)\n                             {Object.<String, String>} [convert]\n                             {String[]} [fields] field names to be returned\n                             {function} [filter] filter items\n                             {String | function} [order] Order the items by\n                                 a field name or custom sort function.\n{Array | DataTable} [data]   If provided, items will be appended to this\n                             array or table. Required in case of Google\n                             DataTable.",
            "params": [
                {
                    "name": "args",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7061,
            "description": "Get ids of all items or from a filtered set of items.",
            "params": [
                {
                    "name": "[options]    An Object with options. Available options:\n                             {function} [filter] filter items\n                             {String | function} [order]",
                    "description": "Order the items by\n                                 a field name or custom sort function.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "ids",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7099,
            "description": "Map every item in the dataset.",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "[options]    Available options:\n                             {Object.<String, String>} [type]\n                             {String[]} [fields] filter fields\n                             {function} [filter] filter items\n                             {String | function} [order]",
                    "description": "Order the items by\n                                 a field name or custom sort function.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "mappedItems",
                "type": "Object[]"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7139,
            "description": "Get the DataSet to which this DataView is connected. In case there is a chain\nof multiple DataViews, the root DataSet of this chain is returned.",
            "return": {
                "description": "dataSet",
                "type": "DataSet"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7152,
            "description": "Event listener. Will propagate all events from the connected data set to\nthe subscribers of the DataView, but will filter the items and only trigger\nwhen there are changes in the filtered data set.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "",
                    "type": "Object | null"
                },
                {
                    "name": "senderId",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7250,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7252,
            "description": "'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar Emitter = __webpack_require__(12);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\n  var util = __webpack_require__(1);\n  var Point3d = __webpack_require__(13);\n  var Point2d = __webpack_require__(14);\n  var Camera = __webpack_require__(15);\n  var Filter = __webpack_require__(16);\n  var Slider = __webpack_require__(17);\n  var StepNumber = __webpack_require__(18);\n/**\n   * @constructor Graph3d\n   * Graph3d displays data in 3d.\n   *\n   * Graph3d is developed in javascript as a Google Visualization Chart.\n   *\n   * @param {Element} container   The DOM element in which the Graph3d will\n   *                              be created. Normally a div element.\n   * @param {DataSet | DataView | Array} [data]\n   * @param {Object} [options]",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7375,
            "description": "Calculate the scaling values, dependent on the range in x, y, and z direction",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7406,
            "description": "Convert a 3D location to a 2D location on screen\nhttp://en.wikipedia.org/wiki/3D_projection",
            "params": [
                {
                    "name": "point3d",
                    "description": "A 3D point with parameters x, y, z",
                    "type": "Point3d"
                }
            ],
            "return": {
                "description": "point2d  A 2D point with parameters x, y",
                "type": "Point2d"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7417,
            "description": "Convert a 3D location its translation seen from the camera\nhttp://en.wikipedia.org/wiki/3D_projection",
            "params": [
                {
                    "name": "point3d",
                    "description": "A 3D point with parameters x, y, z",
                    "type": "Point3d"
                }
            ],
            "return": {
                "description": "translation A 3D point with parameters x, y, z This is\n                  the translation of the point, seen from the\n                  camera",
                "type": "Point3d"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7451,
            "description": "Convert a translation point to a point on the screen",
            "params": [
                {
                    "name": "translation",
                    "description": "A 3D point with parameters x, y, z This is\n                   the translation of the point, seen from the\n                   camera",
                    "type": "Point3d"
                }
            ],
            "return": {
                "description": "point2d    A 2D point with parameters x, y",
                "type": "Point2d"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7482,
            "description": "Set the background styling for the graph",
            "params": [
                {
                    "name": "}",
                    "description": "backgroundColor",
                    "type": "String | fill: string, stroke: string, strokeWidth: string"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7525,
            "description": "Retrieve the style index from given styleName",
            "params": [
                {
                    "name": "styleName",
                    "description": "Style name such as 'dot', 'grid', 'dot-line'",
                    "type": "String"
                }
            ],
            "return": {
                "description": "styleNumber Enumeration value representing the style, or -1\n               when not found",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7558,
            "description": "Determine the indexes of the data columns, based on the given style and data",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "DataSet"
                },
                {
                    "name": "style",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7626,
            "description": "Initialize the data from the data table. Calculate minimum and maximum values\nand column index values",
            "params": [
                {
                    "name": "rawData",
                    "description": "The data containing the items for the Graph.",
                    "type": "Array | DataSet | DataView"
                },
                {
                    "name": "style",
                    "description": "Style Number",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7744,
            "description": "Filter the data based on the current filter",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "dataPoints   Array with point objects which can be drawn on screen",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7846,
            "description": "Create the main frame for the Graph3d.\nThis function is executed once when a Graph3d object is created. The frame\ncontains a canvas, and this canvas contains all objects like the axis and\nnodes.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7909,
            "description": "Set a new size for the graph",
            "params": [
                {
                    "name": "width",
                    "description": "Width in pixels or percentage (for example '800px'\n            or '50%')",
                    "type": "String"
                },
                {
                    "name": "height",
                    "description": "Height in pixels or percentage  (for example '400px'\n            or '30%')",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7923,
            "description": "Resize the canvas to the current size of the frame",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7937,
            "description": "Start animation",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7946,
            "description": "Stop animation",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7955,
            "description": "Resize the center position based on the current values in this.defaultXCenter\nand this.defaultYCenter (which are strings with a percentage or a value\nin pixels). The center positions are the variables this.xCenter\nand this.yCenter",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 7977,
            "description": "Set the rotation and distance of the camera",
            "params": [
                {
                    "name": "pos",
                    "description": "An object with the camera position. The object\n            contains three parameters:\n            - horizontal {Number}\n            The horizontal rotation, between 0 and 2*PI.\n            Optional, can be left undefined.\n            - vertical {Number}\n            The vertical rotation, between 0 and 0.5*PI\n            if vertical=0.5*PI, the graph is shown from the\n            top. Optional, can be left undefined.\n            - distance {Number}\n            The (normalized) distance of the camera to the\n            center of the graph, a value between 0.71 and 5.0.\n            Optional, can be left undefined.",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 8009,
            "description": "Retrieve the current camera rotation",
            "return": {
                "description": "An object with parameters horizontal, vertical, and\n         distance",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 8020,
            "description": "Load data into the 3D Graph",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 8039,
            "description": "Replace the dataset of the Graph3d",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Array | DataSet | DataView"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 8053,
            "description": "Update the options. Options will be merged with current options",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 8157,
            "description": "Redraw the Graph.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 8186,
            "description": "Clear the canvas before redrawing",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 8196,
            "description": "Redraw the legend showing the colors",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 8294,
            "description": "Redraw the filter",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 8330,
            "description": "Redraw the slider",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 8339,
            "description": "Redraw common information",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 8359,
            "description": "Redraw the axis",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 8629,
            "description": "Calculate the color based on the given value.",
            "params": [
                {
                    "name": "H",
                    "description": "Hue, a value be between 0 and 360",
                    "type": "Number"
                },
                {
                    "name": "S",
                    "description": "Saturation, a value between 0 and 1",
                    "type": "Number"
                },
                {
                    "name": "V",
                    "description": "Value, a value between 0 and 1",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 8663,
            "description": "Draw all datapoints as a grid\nThis function can be used when the style is 'grid'",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 8814,
            "description": "Draw all datapoints as dots.\nThis function can be used when the style is 'dot' or 'dot-line'",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 8905,
            "description": "Draw all datapoints as bars.\nThis function can be used when the style is 'bar', 'bar-color', or 'bar-size'",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9027,
            "description": "Draw a line through all datapoints.\nThis function can be used when the style is 'line'",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9070,
            "description": "Start a moving operation inside the provided parent element",
            "params": [
                {
                    "name": "event",
                    "description": "The event that occurred (required for\n                 retrieving the  mouse position)",
                    "type": "Event"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9113,
            "description": "Perform moving operating.\nThis function activated from within the funcion Graph.mouseDown().",
            "params": [
                {
                    "name": "event",
                    "description": "Well, eehh, the event",
                    "type": "Event"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9158,
            "description": "Stop moving operating.\nThis function activated from within the funcion Graph.mouseDown().",
            "params": [
                {
                    "name": "event",
                    "description": "The event",
                    "type": "Event"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9173,
            "description": "After having moved the mouse, a tooltip should pop up when the mouse is resting on a data point",
            "params": [
                {
                    "name": "event",
                    "description": "A mouse move event",
                    "type": "Event"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9223,
            "description": "Event handler for touchstart event on mobile devices",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9242,
            "description": "Event handler for touchmove event on mobile devices",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9249,
            "description": "Event handler for touchend event on mobile devices",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9261,
            "description": "Event handler for mouse wheel event, used to zoom the graph\nCode from http://adomas.org/javascript-mouse-wheel/",
            "params": [
                {
                    "name": "event",
                    "description": "The event",
                    "type": "Event"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9305,
            "description": "Test whether a point lies inside given 2D triangle",
            "params": [
                {
                    "name": "point",
                    "description": "",
                    "type": "Point2d"
                },
                {
                    "name": "triangle",
                    "description": "",
                    "type": "Point2d[]"
                }
            ],
            "return": {
                "description": "Returns true if given point lies inside or on the edge of the triangle",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9329,
            "description": "Find a data point close to given screen position (x, y)",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The closest data point or null if not close to any data point",
                "type": "Object | null"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9385,
            "description": "Display a tooltip for given data point",
            "params": [
                {
                    "name": "dataPoint",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9463,
            "description": "Hide the tooltip when displayed",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9482,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9484,
            "description": "Get the horizontal mouse position from a mouse event",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "mouse x",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9494,
            "description": "Get the vertical mouse position from a mouse event",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "mouse y",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9506,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9508,
            "description": "/**\n   * Expose `Emitter`.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9517,
            "description": "Initialize a new `Emitter`.",
            "api": "public",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9527,
            "description": "Mixin the emitter properties.",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "api": "private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9542,
            "description": "Listen on the given `event` with `fn`.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Emitter"
            },
            "api": "public",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9559,
            "description": "Adds an `event` listener that will be invoked a single\ntime then automatically removed.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Emitter"
            },
            "api": "public",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9583,
            "description": "Remove the given callback for `event` or all\nregistered callbacks.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Emitter"
            },
            "api": "public",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9627,
            "description": "Emit `event` with the given args.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "",
                    "description": "",
                    "type": "Mixed",
                    "multiple": true
                }
            ],
            "return": {
                "description": "",
                "type": "Emitter"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9650,
            "description": "Return array of callbacks for `event`.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "public",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9663,
            "description": "Check if this emitter has `event` handlers.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "public",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9676,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9678,
            "description": "\"use strict\";\n/**\n   * @prototype Point3d\n   * @param {Number} [x]\n   * @param {Number} [y]\n   * @param {Number} [z]",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9694,
            "description": "Subtract the two provided points, returns a-b",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Point3d"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Point3d"
                }
            ],
            "return": {
                "description": "a-b",
                "type": "Point3d"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9708,
            "description": "Add the two provided points, returns a+b",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Point3d"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Point3d"
                }
            ],
            "return": {
                "description": "a+b",
                "type": "Point3d"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9722,
            "description": "Calculate the average of two 3d points",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Point3d"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Point3d"
                }
            ],
            "return": {
                "description": "The average, (a+b)/2",
                "type": "Point3d"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9732,
            "description": "Calculate the cross product of the two provided points, returns axb\nDocumentation: http://en.wikipedia.org/wiki/Cross_product",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Point3d"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Point3d"
                }
            ],
            "return": {
                "description": "cross product axb",
                "type": "Point3d"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9749,
            "description": "Rtrieve the length of the vector (or the distance from this point to the origin",
            "return": {
                "description": "length",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9759,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9761,
            "description": "\"use strict\";\n/**\n   * @prototype Point2d\n   * @param {Number} [x]\n   * @param {Number} [y]",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9777,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9779,
            "description": "'use strict';\nvar Point3d = __webpack_require__(13);\n/**\n   * @class Camera\n   * The camera is mounted on a (virtual) camera arm. The camera arm can rotate\n   * The camera is always looking in the direction of the origin of the arm.\n   * This way, the camera always rotates around one fixed point, the location\n   * of the camera arm.\n   *\n   * Documentation:\n   *   http://en.wikipedia.org/wiki/3D_projection",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9808,
            "description": "Set the location (origin) of the arm",
            "params": [
                {
                    "name": "x",
                    "description": "Normalized value of x",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Normalized value of y",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "Normalized value of z",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9822,
            "description": "Set the rotation of the camera arm",
            "params": [
                {
                    "name": "horizontal",
                    "description": "The horizontal rotation, between 0 and 2*PI.\n               Optional, can be left undefined.",
                    "type": "Number"
                },
                {
                    "name": "vertical",
                    "description": "The vertical rotation, between 0 and 0.5*PI\n               if vertical=0.5*PI, the graph is shown from the\n               top. Optional, can be left undefined.",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9846,
            "description": "Retrieve the current arm rotation",
            "return": {
                "description": "An object with parameters horizontal and vertical",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9858,
            "description": "Set the (normalized) length of the camera arm.",
            "params": [
                {
                    "name": "length",
                    "description": "A length between 0.71 and 5.0",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9876,
            "description": "Retrieve the arm length",
            "return": {
                "description": "length",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9884,
            "description": "Retrieve the camera location",
            "return": {
                "description": "cameraLocation",
                "type": "Point3d"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9892,
            "description": "Retrieve the camera rotation",
            "return": {
                "description": "cameraRotation",
                "type": "Point3d"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9900,
            "description": "Calculate the location and rotation of the camera based on the\nposition and orientation of the camera arm",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9918,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9920,
            "description": "'use strict';\nvar DataView = __webpack_require__(10);\n/**\n   * @class Filter\n   *\n   * @param {DataSet} data The google data table\n   * @param {Number}  column             The index of the column to be filtered\n   * @param {Graph} graph           The graph",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9967,
            "description": "Return the label",
            "return": {
                "description": "label",
                "type": "String"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9975,
            "description": "Return the loaded progress",
            "return": {
                "description": "percentage between 0 and 100",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9990,
            "description": "Return the label",
            "return": {
                "description": "label",
                "type": "String"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 9998,
            "description": "Return the columnIndex of the filter",
            "return": {
                "description": "columnIndex",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10006,
            "description": "Return the currently selected value. Returns undefined if there is no selection",
            "return": {
                "description": "value",
                "type": "*"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10016,
            "description": "Retrieve all values of the filter",
            "return": {
                "description": "values",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10024,
            "description": "Retrieve one value of the filter",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "value",
                "type": "*"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10035,
            "description": "Retrieve the (filtered) dataPoints for the currently selected filter index",
            "params": [
                {
                    "name": "index",
                    "description": "(optional)",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "dataPoints",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10064,
            "description": "Set a callback function when the filter is fully loaded.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10071,
            "description": "Add a value to the list with available values for this filter\nNo double entries will be created.",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10083,
            "description": "Load all filtered rows in the background one by one\nStart this method without providing an index!",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10129,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10131,
            "description": "'use strict';\nvar util = __webpack_require__(1);\n/**\n   * @constructor Slider\n   *\n   * An html slider control with start/stop/prev/next buttons\n   * @param {Element} container  The element where the slider will be created\n   * @param {Object} options   Available options:\n   *                 {boolean} visible   If true (default) the\n   *                           slider is visible.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10221,
            "description": "Select the previous index",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10232,
            "description": "Select the next index",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10243,
            "description": "Select the next index",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10273,
            "description": "Toggle start or stop playing",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10284,
            "description": "Start playing",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10298,
            "description": "Stop playing",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10310,
            "description": "Set a callback function which will be triggered when the value of the\nslider bar has changed.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10318,
            "description": "Set the interval for playing the list",
            "params": [
                {
                    "name": "interval",
                    "description": "The interval in milliseconds",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10326,
            "description": "Retrieve the current play interval",
            "return": {
                "description": "interval   The interval in milliseconds",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10334,
            "description": "Set looping on or off",
            "pararm": "{boolean} doLoop  If true, the slider will jump to the start when\n              the end is passed, and will jump to the end\n              when the start is passed.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10344,
            "description": "Execute the onchange callback function",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10353,
            "description": "redraw the slider on the correct place",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10368,
            "description": "Set the list with values for the slider",
            "params": [
                {
                    "name": "values",
                    "description": "A javascript array with values (any type)",
                    "type": "Array"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10378,
            "description": "Select a value by its index",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10393,
            "description": "retrieve the index of the currently selected vaue",
            "return": {
                "description": "index",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10401,
            "description": "retrieve the currently selected value",
            "return": {
                "description": "value",
                "type": "*"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10477,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10479,
            "description": "\"use strict\";\n/**\n   * @prototype StepNumber\n   * The class StepNumber is an iterator for Numbers. You provide a start and end\n   * value, and a best step size. StepNumber itself rounds to fixed values and\n   * a finds the step that best fits the provided step.\n   *\n   * If prettyStep is true, the step size is chosen as close as possible to the\n   * provided step, but being a round value like 1, 2, 5, 10, 20, 50, ....\n   *\n   * Example usage:\n   *   var step = new StepNumber(0, 10, 2.5, true);\n   *   step.start();\n   *   while (!step.end()) {\n   *   alert(step.getCurrent());\n   *   step.next();\n   *   }\n   *\n   * Version: 1.0\n   *\n   * @param {Number} start     The start value\n   * @param {Number} end     The end value\n   * @param {Number} step    Optional. Step size. Must be a positive value.\n   * @param {boolean} prettyStep Optional. If true, the step size is rounded\n   *               To a pretty step size (like 1, 2, 5, 10, 20, 50, ...)",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10520,
            "description": "Set a new range: start, end and step.",
            "params": [
                {
                    "name": "start",
                    "description": "The start value",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "The end value",
                    "type": "Number"
                },
                {
                    "name": "step",
                    "description": "Optional. Step size. Must be a positive value.",
                    "type": "Number"
                },
                {
                    "name": "prettyStep",
                    "description": "Optional. If true, the step size is rounded\n              To a pretty step size (like 1, 2, 5, 10, 20, 50, ...)",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10536,
            "description": "Set a new step size",
            "params": [
                {
                    "name": "step",
                    "description": "New step size. Must be a positive value",
                    "type": "Number"
                },
                {
                    "name": "prettyStep",
                    "description": "Optional. If true, the provided step is rounded\n              to a pretty step size (like 1, 2, 5, 10, 20, 50, ...)",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10550,
            "description": "Calculate a nice step size, closest to the desired step size.\nReturns a value in one of the ranges 1*10^n, 2*10^n, or 5*10^n, where n is an\ninteger Number. For example 1, 2, 5, 10, 20, 50, etc...",
            "params": [
                {
                    "name": "step",
                    "description": "Desired step size",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Nice step size",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10580,
            "description": "returns the current value of the step",
            "return": {
                "description": "current value",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10588,
            "description": "returns the current step size",
            "return": {
                "description": "current step size",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10596,
            "description": "Set the current value to the largest value smaller than start, which\nis a multiple of the step size",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10604,
            "description": "Do a step, add the step size to the current value",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10611,
            "description": "Returns true whether the end is reached",
            "return": {
                "description": "True if the current value has passed the end value.",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10621,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10623,
            "description": "'use strict';\nvar _Configurator = __webpack_require__(20);\nvar _Configurator2 = _interopRequireDefault(_Configurator);\nvar _Validator = __webpack_require__(26);\nvar _Validator2 = _interopRequireDefault(_Validator);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar Emitter = __webpack_require__(12);\n  var Hammer = __webpack_require__(22);\n  var moment = __webpack_require__(2);\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\n  var Range = __webpack_require__(27);\n  var Core = __webpack_require__(30);\n  var TimeAxis = __webpack_require__(41);\n  var CurrentTime = __webpack_require__(46);\n  var CustomTime = __webpack_require__(44);\n  var ItemSet = __webpack_require__(31);\nvar printStyle = __webpack_require__(26).printStyle;\n  var allOptions = __webpack_require__(47).allOptions;\n  var configureOptions = __webpack_require__(47).configureOptions;\n/**\n   * Create a timeline visualization\n   * @param {HTMLElement} container\n   * @param {vis.DataSet | vis.DataView | Array} [items]\n   * @param {vis.DataSet | vis.DataView | Array} [groups]\n   * @param {Object} [options]  See Timeline.setOptions for the available options.\n   * @constructor\n   * @extends Core",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10801,
            "description": "Load a configurator",
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10810,
            "description": "Force a redraw. The size of all items will be recalculated.\nCan be useful to manually redraw when option autoResize=false and the window\nhas been resized, or when the items CSS has been changed.\n\nNote: this function will be overridden on construction with a trottled version",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10847,
            "description": "Set items",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "vis.DataSet | Array | null"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10873,
            "description": "Set groups",
            "params": [
                {
                    "name": "groups",
                    "description": "",
                    "type": "vis.DataSet | Array"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10893,
            "description": "Set both items and groups in one go",
            "params": [
                {
                    "name": "}",
                    "description": "data",
                    "type": "{items: Array | vis.DataSet, groups: Array | vis.DataSet"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10907,
            "description": "Set selected items by their id. Replaces the current selection\nUnknown id's are silently ignored.",
            "params": [
                {
                    "name": "ids",
                    "description": "An array with zero or more id's of the items to be\n                               selected. If ids is an empty array, all items will be\n                               unselected.",
                    "type": "String[] | string",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "Available options:\n                               `focus: boolean`\n                                   If true, focus will be set to the selected item(s)\n                               `animation: boolean | {duration: number, easingFunction: string}`\n                                   If true (default), the range is animated\n                                   smoothly to the new window. An object can be\n                                   provided to specify duration and easing function.\n                                   Default duration is 500 ms, and default easing\n                                   function is 'easeInOutQuad'.\n                                   Only applicable when option focus is true.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10932,
            "description": "Get the selected items by their id",
            "return": {
                "description": "ids  The ids of the selected items",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10940,
            "description": "Adjust the visible window such that the selected item (or multiple items)\nare centered on screen.",
            "params": [
                {
                    "name": "id",
                    "description": "An item id or array with item ids",
                    "type": "String | String[]"
                },
                {
                    "name": "options",
                    "description": "Available options:\n                               `animation: boolean | {duration: number, easingFunction: string}`\n                                   If true (default), the range is animated\n                                   smoothly to the new window. An object can be\n                                   provided to specify duration and easing function.\n                                   Default duration is 500 ms, and default easing\n                                   function is 'easeInOutQuad'.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 10991,
            "description": "Set Timeline window such that it fits all items",
            "params": [
                {
                    "name": "options",
                    "description": "Available options:\n                               `animation: boolean | {duration: number, easingFunction: string}`\n                                   If true (default), the range is animated\n                                   smoothly to the new window. An object can be\n                                   provided to specify duration and easing function.\n                                   Default duration is 500 ms, and default easing\n                                   function is 'easeInOutQuad'.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11007,
            "description": "Determine the range of the items, taking into account their actual width\nand a margin of 10 pixels on both sides.",
            "return": {
                "description": "}",
                "type": "Min: Date | null, max: Date | null"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11087,
            "description": "Calculate the data range of the items start and end dates",
            "return": {
                "description": "}",
                "type": "Min: Date | null, max: Date | null"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11115,
            "description": "Generate Timeline related information from an event",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "An object with related information, like on which area\n                 The event happened, whether clicked on an item, etc.",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11171,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11173,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _ColorPicker = __webpack_require__(21);\nvar _ColorPicker2 = _interopRequireDefault(_ColorPicker);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\n/**\n   * The way this works is for all properties of this.possible options, you can supply the property name in any form to list the options.\n   * Boolean options are recognised as Boolean\n   * Number options should be written as array: [default value, min value, max value, stepsize]\n   * Colors should be written as array: ['color', '#ffffff']\n   * Strings with should be written as array: [option1, option2, option3, ..]\n   *\n   * The options are matched with their counterparts in each of the modules and the values used in the configuration are\n   *\n   * @param parentModule        | the location where parentModule.setOptions() can be called\n   * @param defaultContainer    | the default container of the module\n   * @param configureOptions    | the fully configured and predefined options set found in allOptions.js\n   * @param pixelRatio          | canvas pixel ratio",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11242,
            "description": "refresh all options.\nBecause all modules parse their options by themselves, we just use their options. We copy them here.",
            "params": [
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11304,
            "description": "Create all DOM elements",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11375,
            "description": "draw all DOM elements on the screen",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11393,
            "description": "delete all DOM elements",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11414,
            "description": "get the value from the actualOptions if it exists",
            "params": [
                {
                    "name": "path",
                    "description": "| where to look for the actual option",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11436,
            "description": "all option elements are wrapped in an item",
            "params": [
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "domElements",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11474,
            "description": "header for major subjects",
            "params": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11489,
            "description": "make a label, if it is an object label, it gets different styling.",
            "params": [
                {
                    "name": "name",
                    "description": ""
                },
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "objectLabel",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11513,
            "description": "make a dropdown list for multiple possible string optoins",
            "params": [
                {
                    "name": "arr",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                },
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11552,
            "description": "make a range object for numeric options",
            "params": [
                {
                    "name": "arr",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                },
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11623,
            "description": "prepare the popup",
            "params": [
                {
                    "name": "string",
                    "description": ""
                },
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11648,
            "description": "remove the popup from the dom",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11664,
            "description": "Show the popup if it is needed.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11689,
            "description": "make a checkbox for boolean options.",
            "params": [
                {
                    "name": "defaultValue",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                },
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11726,
            "description": "make a text input field for string options.",
            "params": [
                {
                    "name": "defaultValue",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                },
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11754,
            "description": "make a color field with a color picker for color fields",
            "params": [
                {
                    "name": "arr",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                },
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11787,
            "description": "used by the color buttons to call the color picker.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                },
                {
                    "name": "div",
                    "description": ""
                },
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11822,
            "description": "parse an object and draw the correct items",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11902,
            "description": "handle the array type of option",
            "params": [
                {
                    "name": "optionName",
                    "description": ""
                },
                {
                    "name": "arr",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                },
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11932,
            "description": "called to update the network with the new settings.",
            "params": [
                {
                    "name": "value",
                    "description": ""
                },
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11997,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 11999,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar Hammer = __webpack_require__(22);\n  var hammerUtil = __webpack_require__(25);\n  var util = __webpack_require__(1);\nvar ColorPicker = function () {\n    function ColorPicker() {\n      var pixelRatio = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n    _classCallCheck(this, ColorPicker);\n    this.pixelRatio = pixelRatio;\n      this.generated = false;\n      this.centerCoordinates = { x: 289 / 2, y: 289 / 2 };\n      this.r = 289 * 0.49;\n      this.color = { r: 255, g: 255, b: 255, a: 1.0 };\n      this.hueCircle = undefined;\n      this.initialColor = { r: 255, g: 255, b: 255, a: 1.0 };\n      this.previousColor = undefined;\n      this.applied = false;\n    // bound by\n      this.updateCallback = function () {};\n      this.closeCallback = function () {};\n    // create all DOM elements\n      this._create();\n    }\n  /**\n     * this inserts the colorPicker into a div from the DOM\n     * @param container",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12059,
            "description": "the callback is executed on apply and save. Bind it to the application",
            "params": [
                {
                    "name": "callback",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12074,
            "description": "the callback is executed on apply and save. Bind it to the application",
            "params": [
                {
                    "name": "callback",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12097,
            "description": "Set the color of the colorPicker\nSupported formats:\n'red'                   --> HTML color string\n'#ffffff'               --> hex string\n'rbg(255,255,255)'      --> rgb string\n'rgba(255,255,255,1.0)' --> rgba string\n{r:255,g:255,b:255}     --> rgb object\n{r:255,g:255,b:255,a:1.0} --> rgba object",
            "params": [
                {
                    "name": "color",
                    "description": ""
                },
                {
                    "name": "setInitial",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12156,
            "description": "this shows the color picker.\nThe hue circle is constructed once and stored.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12176,
            "description": "Hide the picker. Is called by the cancel button.\nOptional boolean to store the previous color for easy access later on.",
            "params": [
                {
                    "name": "storePrevious",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12211,
            "description": "bound to the save button. Saves and hides.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12224,
            "description": "Bound to apply button. Saves but does not close. Is undone by the cancel button.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12237,
            "description": "load the color from the previous session.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12252,
            "description": "set the color, place the picker",
            "params": [
                {
                    "name": "rgba",
                    "description": ""
                },
                {
                    "name": "setInitial",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12283,
            "description": "bound to opacity control",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12296,
            "description": "bound to brightness control",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12313,
            "description": "update the color picker. A black circle overlays the hue circle to mimic the brightness decreasing.",
            "params": [
                {
                    "name": "rgba",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12348,
            "description": "used by create to set the size of the canvas.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12363,
            "description": "create all dom elements\nTODO: cleanup, lots of similar dom elements",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12494,
            "description": "bind hammer to the color picker",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12526,
            "description": "generate the hue circle. This is relatively heavy (200ms) and is done only once on the first time it is shown.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12575,
            "description": "move the selector. This is called by hammer functions.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12626,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12628,
            "description": "'use strict';\n// Only load hammer.js when in a browser environment\n  // (loading hammer.js in a node.js environment gives errors)\n  if (typeof window !== 'undefined') {\n    var propagating = __webpack_require__(23);\n    var Hammer = window['Hammer'] || __webpack_require__(24);\n    module.exports = propagating(Hammer, {\n      preventDefault: 'mouse'\n    });\n  } else {\n    module.exports = function () {\n      throw Error('hammer.js is only available in a browser, not in node.js.');\n    };\n  }\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12648,
            "description": "var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n(function (factory) {\n    if (true) {\n      // AMD. Register as an anonymous module.\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports === 'object') {\n      // Node. Does not work with strict CommonJS, but\n      // only CommonJS-like environments that support module.exports,\n      // like Node.\n      module.exports = factory();\n    } else {\n      // Browser globals (root is window)\n      window.propagating = factory();\n    }\n  }(function () {\n    var _firstTarget = null; // singleton, will contain the target element where the touch event started\n  /**\n     * Extend an Hammer.js instance with event propagation.\n     *\n     * Features:\n     * - Events emitted by hammer will propagate in order from child to parent\n     *   elements.\n     * - Events are extended with a function `event.stopPropagation()` to stop\n     *   propagation to parent elements.\n     * - An option `preventDefault` to stop all default browser behavior.\n     *\n     * Usage:\n     *   var hammer = propagatingHammer(new Hammer(element));\n     *   var hammer = propagatingHammer(new Hammer(element), {preventDefault: true});\n     *\n     * @param {Hammer.Manager} hammer   An hammer instance.\n     * @param {Object} [options]        Available options:\n     *                                  - `preventDefault: true | false | 'mouse' | 'touch' | 'pen'`.\n     *                                    Enforce preventing the default browser behavior.\n     *                                    Cannot be set to `false`.\n     * @return {Hammer.Manager} Returns the same hammer instance with extended\n     *                          functionality",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12737,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12740,
            "description": "Register a handler for one or multiple events",
            "params": [
                {
                    "name": "events",
                    "description": "A space separated string with events",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "A callback function, called as handler(event)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the hammer instance",
                "type": "Hammer.Manager"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12762,
            "description": "Unregister a handler for one or multiple events",
            "params": [
                {
                    "name": "events",
                    "description": "A space separated string with events",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "Optional. The registered handler. If not\n                            provided, all handlers for given events\n                            are removed.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the hammer instance",
                "type": "Hammer.Manager"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12793,
            "description": "Emit to the event listeners",
            "params": [
                {
                    "name": "eventType",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12822,
            "description": "A static event handler, applying event propagation.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12883,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12885,
            "description": "var __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.6 - 2015-12-23\n   * http://hammerjs.github.io/\n   *\n   * Copyright (c) 2015 Jorik Tangelder;",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12904,
            "description": "set a timeout with a given scope",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "timeout",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12915,
            "description": "if the argument is an array, we want to execute the fn on each entry\nif it aint an array we don't want to do a thing.\nthis is used by all the methods that accept a single and array argument.",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "*|Array"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12932,
            "description": "walk objects and arrays",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "iterator",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12960,
            "description": "wrap a method with a deprecation warning and stack trace",
            "params": [
                {
                    "name": "method",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A new function wrapping the supplied method.",
                "type": "Function"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 12983,
            "description": "extend object.\nmeans that properties in dest will be overwritten by the ones in src.",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "objects_to_assign",
                    "description": "",
                    "type": "...Object"
                }
            ],
            "return": {
                "description": "target",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13014,
            "description": "extend object.\nmeans that properties in dest will be overwritten by the ones in src.",
            "params": [
                {
                    "name": "dest",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "src",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "merge",
                    "description": "",
                    "type": "Boolean=false",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13034,
            "description": "merge the values from src in the dest.\nmeans that properties that exist in dest will not be overwritten by src",
            "params": [
                {
                    "name": "dest",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "src",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "dest",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13045,
            "description": "simple class inheritance",
            "params": [
                {
                    "name": "child",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "base",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "properties",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13064,
            "description": "simple function bind",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13076,
            "description": "let a boolean value also be a function that must return a boolean\nthis first item in args will be used as the context",
            "params": [
                {
                    "name": "val",
                    "description": "",
                    "type": "Boolean|Function"
                },
                {
                    "name": "args",
                    "description": "",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13090,
            "description": "use the val2 when val1 is undefined",
            "params": [
                {
                    "name": "val1",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "val2",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13100,
            "description": "addEventListener with multiple events at once",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "EventTarget"
                },
                {
                    "name": "types",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13112,
            "description": "removeEventListener with multiple events at once",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "EventTarget"
                },
                {
                    "name": "types",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13124,
            "description": "find if a node is in the given parent",
            "itemtype": "method",
            "name": "hasParent",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "parent",
                    "description": "",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "found",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13141,
            "description": "small indexOf wrapper",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "find",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "found",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13151,
            "description": "split string on whitespace",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "words",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13160,
            "description": "find if a array contains the object using indexOf or a simple polyFill",
            "params": [
                {
                    "name": "src",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "find",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "findByKey",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "false when not found, or the index",
                "type": "Boolean|Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13182,
            "description": "convert array-like objects to real arrays",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13191,
            "description": "unique array with objects based on a key (like 'id') or just by the array's value",
            "params": [
                {
                    "name": "src",
                    "description": "[{id:1},{id:2},{id:1}]",
                    "type": "Array"
                },
                {
                    "name": "key",
                    "description": "",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "sort",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "False"
                }
            ],
            "return": {
                "description": "[{id:1},{id:2}]",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13225,
            "description": "get the prefixed property",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "property",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "prefixed",
                "type": "String|Undefined"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13248,
            "description": "get a unique id",
            "return": {
                "description": "uniqueId",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13257,
            "description": "get the window object of an element",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "",
                "type": "DocumentView|Window"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13298,
            "description": "create new input type manager",
            "params": [
                {
                    "name": "manager",
                    "description": "",
                    "type": "Manager"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Input"
            },
            "is_constructor": 1,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13325,
            "description": "should handle the inputEvent data and trigger the callback",
            "virtual": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13331,
            "description": "bind the events",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13340,
            "description": "unbind the events",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13350,
            "description": "create new input type manager\ncalled by the Manager constructor",
            "params": [
                {
                    "name": "manager",
                    "description": "",
                    "type": "Hammer"
                }
            ],
            "return": {
                "description": "",
                "type": "Input"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13374,
            "description": "handle input events",
            "params": [
                {
                    "name": "manager",
                    "description": "",
                    "type": "Manager"
                },
                {
                    "name": "eventType",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "input",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13407,
            "description": "extend the data with some usable properties like scale, rotate, velocity etc",
            "params": [
                {
                    "name": "manager",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "input",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13486,
            "description": "velocity is calculated every x ms",
            "params": [
                {
                    "name": "session",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "input",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13521,
            "description": "create a simple clone from the input used for storage of firstInput and firstMultiple",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "clonedInputData",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13548,
            "description": "get the center of all the pointers",
            "params": [
                {
                    "name": "pointers",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "center contains `x` and `y` properties",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13577,
            "description": "calculate the velocity between two points. unit is in px per ms.",
            "params": [
                {
                    "name": "deltaTime",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "velocity `x` and `y`",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13591,
            "description": "get the direction between two points",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "direction",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13608,
            "description": "calculate the absolute distance between two points",
            "params": [
                {
                    "name": "p1",
                    "description": "{x, y}",
                    "type": "Object"
                },
                {
                    "name": "p2",
                    "description": "{x, y}",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "containing x and y keys",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "distance",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13625,
            "description": "calculate the angle between two coordinates",
            "params": [
                {
                    "name": "p1",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "p2",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "containing x and y keys",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "angle",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13641,
            "description": "calculate the rotation degrees between two pointersets",
            "params": [
                {
                    "name": "start",
                    "description": "array of pointers",
                    "type": "Array"
                },
                {
                    "name": "end",
                    "description": "array of pointers",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "rotation",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13651,
            "description": "calculate the scale factor between two pointersets\nno scale is 1, and goes down to 0 when pinched together, and bigger when pinched out",
            "params": [
                {
                    "name": "start",
                    "description": "array of pointers",
                    "type": "Array"
                },
                {
                    "name": "end",
                    "description": "array of pointers",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "scale",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13671,
            "description": "Mouse events input",
            "is_constructor": 1,
            "extends": "Input",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13687,
            "description": "handle mouse events",
            "params": [
                {
                    "name": "ev",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13746,
            "description": "Pointer events input",
            "is_constructor": 1,
            "extends": "Input",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13761,
            "description": "handle mouse events",
            "params": [
                {
                    "name": "ev",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13820,
            "description": "Touch events input",
            "is_constructor": 1,
            "extends": "Input",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13862,
            "this": "{TouchInput}",
            "params": [
                {
                    "name": "ev",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "flag",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "[all, changed]",
                "type": "Undefined|Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13888,
            "description": "Multi-user touch events input",
            "is_constructor": 1,
            "extends": "Input",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13917,
            "this": "{TouchInput}",
            "params": [
                {
                    "name": "ev",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "flag",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "[all, changed]",
                "type": "Undefined|Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13978,
            "description": "Combined touch and mouse input\n\nTouch has a higher priority then mouse, and while touching no mouse events are allowed.\nThis because touch devices also emit mouse events while doing a touch.",
            "is_constructor": 1,
            "extends": "Input",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 13996,
            "description": "handle mouse and touch events",
            "params": [
                {
                    "name": "manager",
                    "description": "",
                    "type": "Hammer"
                },
                {
                    "name": "inputEvent",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "inputData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14022,
            "description": "remove the event listeners",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14042,
            "description": "Touch Action\nsets the touchAction property or uses the js alternative",
            "params": [
                {
                    "name": "manager",
                    "description": "",
                    "type": "Manager"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "is_constructor": 1,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14055,
            "description": "set the touchAction value on the element or enable the polyfill",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14071,
            "description": "just re-set the touchAction value",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14078,
            "description": "compute the value for the touchAction property based on the recognizer's settings",
            "return": {
                "description": "value",
                "type": "String"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14092,
            "description": "this method is called on each input cycle and provides the preventing of the browser behavior",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14140,
            "description": "call preventDefault to prevent the browser's default behavior (scrolling in most cases)",
            "params": [
                {
                    "name": "srcEvent",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14150,
            "description": "when the touchActions are collected they are not a valid value, so we need to clean things up. *",
            "params": [
                {
                    "name": "actions",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14185,
            "description": "Recognizer flow explained; *\nAll recognizers have the initial state of POSSIBLE when a input session starts.\nThe definition of a input session is from the first input until the last input, with all it's movement in it. *\nExample session for mouse-input: mousedown -> mousemove -> mouseup\n\nOn each recognizing cycle (see Manager.recognize) the .recognize() method is executed\nwhich determines with state it should be.\n\nIf the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\nPOSSIBLE to give it another change on the next cycle.\n\n              Possible\n                 |\n           +-----+---------------+\n           |                     |\n     +-----+-----+               |\n     |           |               |\n  Failed      Cancelled          |\n                         +-------+------+\n                         |              |\n                     Recognized       Began\n                                        |\n                                     Changed\n                                        |\n                                 Ended/Recognized",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14220,
            "description": "Recognizer\nEvery recognizer needs to extend from this class.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14243,
            "virtual": "",
            "type": "{Object}",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14249,
            "description": "set options",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Recognizer"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14262,
            "description": "recognize simultaneous with an other recognizer.",
            "params": [
                {
                    "name": "otherRecognizer",
                    "description": "",
                    "type": "Recognizer"
                }
            ],
            "return": {
                "description": "this",
                "type": "Recognizer"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14281,
            "description": "drop the simultaneous link. it doesnt remove the link on the other recognizer.",
            "params": [
                {
                    "name": "otherRecognizer",
                    "description": "",
                    "type": "Recognizer"
                }
            ],
            "return": {
                "description": "this",
                "type": "Recognizer"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14296,
            "description": "recognizer can only run when an other is failing",
            "params": [
                {
                    "name": "otherRecognizer",
                    "description": "",
                    "type": "Recognizer"
                }
            ],
            "return": {
                "description": "this",
                "type": "Recognizer"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14315,
            "description": "drop the requireFailure link. it does not remove the link on the other recognizer.",
            "params": [
                {
                    "name": "otherRecognizer",
                    "description": "",
                    "type": "Recognizer"
                }
            ],
            "return": {
                "description": "this",
                "type": "Recognizer"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14333,
            "description": "has require failures boolean",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14341,
            "description": "if the recognizer can recognize simultaneous with an other recognizer",
            "params": [
                {
                    "name": "otherRecognizer",
                    "description": "",
                    "type": "Recognizer"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14350,
            "description": "You should use `tryEmit` instead of `emit` directly to check\nthat all the needed recognizers has failed before emitting.",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14380,
            "description": "Check that all the require failure recognizers has failed,\nif true, it emits a gesture event,\notherwise, setup the state to FAILED.",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14394,
            "description": "can we emit?",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14409,
            "description": "update the recognizer",
            "params": [
                {
                    "name": "inputData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14439,
            "description": "return the state of the recognizer\nthe actual recognizing happens in this method",
            "virtual": "",
            "params": [
                {
                    "name": "inputData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "STATE",
                "type": "Const"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14448,
            "description": "return the preferred touch-action",
            "virtual": "",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14455,
            "description": "called when the gesture isn't allowed to recognize\nlike when another is being recognized or it is disabled",
            "virtual": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14463,
            "description": "get a usable string, used as event postfix",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Const"
                }
            ],
            "return": {
                "description": "state",
                "type": "String"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14481,
            "description": "direction cons to string",
            "params": [
                {
                    "name": "direction",
                    "description": "",
                    "type": "Const"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14499,
            "description": "get a recognizer by name if it is bound to a manager",
            "params": [
                {
                    "name": "otherRecognizer",
                    "description": "",
                    "type": "Recognizer|String"
                },
                {
                    "name": "recognizer",
                    "description": "",
                    "type": "Recognizer"
                }
            ],
            "return": {
                "description": "",
                "type": "Recognizer"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14513,
            "description": "This recognizer is just used as a base for the simple attribute recognizers.",
            "is_constructor": 1,
            "extends": "Recognizer",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14523,
            "memberof": "AttrRecognizer",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14528,
            "type": "{Number}",
            "default": "1",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14535,
            "description": "Used to check if it the recognizer receives valid input, like input.distance > 10.",
            "memberof": "AttrRecognizer",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "recognized",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14546,
            "description": "Process the input and return the state for the recognizer",
            "memberof": "AttrRecognizer",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "State",
                "type": "*"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14574,
            "description": "Pan\nRecognized when the pointer is down and moved in the allowed direction.",
            "is_constructor": 1,
            "extends": "AttrRecognizer",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14588,
            "memberof": "PanRecognizer",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14654,
            "description": "Pinch\nRecognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).",
            "is_constructor": 1,
            "extends": "AttrRecognizer",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14665,
            "memberof": "PinchRecognizer",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14693,
            "description": "Press\nRecognized when the pointer is down for x ms without any movement.",
            "is_constructor": 1,
            "extends": "Recognizer",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14707,
            "memberof": "PressRecognizer",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14764,
            "description": "Rotate\nRecognized when two or more pointer are moving in a circular motion.",
            "is_constructor": 1,
            "extends": "AttrRecognizer",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14775,
            "memberof": "RotateRecognizer",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14795,
            "description": "Swipe\nRecognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.",
            "is_constructor": 1,
            "extends": "AttrRecognizer",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14806,
            "memberof": "SwipeRecognizer",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14851,
            "description": "A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\nbetween the given interval and position. The delay option can be used to recognize multi-taps without firing\na single tap.\n\nThe eventData from the emitted event contains the property `tapCount`, which contains the amount of\nmulti-taps being recognized.",
            "is_constructor": 1,
            "extends": "Recognizer",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14875,
            "memberof": "PinchRecognizer",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14966,
            "description": "Simple way to create a manager with a default set of recognizers.",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14978,
            "itemtype": "property",
            "name": "{string}",
            "final": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14983,
            "description": "default settings",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14988,
            "description": "set if DOM events are being triggered.\nBut this is slower and unused by simple implementations, so disabled by default.",
            "type": "{Boolean}",
            "default": "false",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 14996,
            "description": "The value for the touchAction property/fallback.\nWhen set to `compute` it will magically set the correct value based on the added recognizers.",
            "type": "{String}",
            "default": "compute",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15004,
            "type": "{Boolean}",
            "default": "true",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15010,
            "description": "EXPERIMENTAL FEATURE -- can be removed/changed\nChange the parent input target element.\nIf Null, then it is being set the to main element.",
            "type": "{Null|EventTarget}",
            "default": "null",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15019,
            "description": "force an input class",
            "type": "{Null|Function}",
            "default": "null",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15026,
            "description": "Default recognizer setup when calling `Hammer()`\nWhen creating a new Manager these will be skipped.",
            "type": "{Array}",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15042,
            "description": "Some CSS properties can be used to improve the working of Hammer.\nAdd them to this method and they will be set when creating a new Manager.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15048,
            "description": "Disables text selection to improve the dragging gesture. Mainly for desktop browsers.",
            "type": "{String}",
            "default": "'none'",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15055,
            "description": "Disable the Windows Phone grippers when pressing an element.",
            "type": "{String}",
            "default": "'none'",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15062,
            "description": "Disables the default callout shown when you touch and hold a touch target.\nOn iOS, when you touch and hold a touch target such as a link, Safari displays\na callout containing information about the link. This property allows you to disable that callout.",
            "type": "{String}",
            "default": "'none'",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15071,
            "description": "Specifies whether zooming is enabled. Used by IE10>",
            "type": "{String}",
            "default": "'none'",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15078,
            "description": "Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.",
            "type": "{String}",
            "default": "'none'",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15085,
            "description": "Overrides the highlight color shown when the user taps a link or a JavaScript\nclickable element in iOS. This property obeys the alpha value, if specified.",
            "type": "{String}",
            "default": "'rgba(0,0,0,0)'",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15098,
            "description": "Manager",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15127,
            "description": "set options",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Manager"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15148,
            "description": "stop recognizing for this session.\nThis session will be discarded, when a new [input]start event is fired.\nWhen forced, the recognizer cycle is stopped immediately.",
            "params": [
                {
                    "name": "force",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15158,
            "description": "run the recognizers!\ncalled by the inputHandler function on every movement of the pointers (touches)\nit walks through all the recognizers and tries to detect the gesture that is being made",
            "params": [
                {
                    "name": "inputData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15214,
            "description": "get a recognizer by its event name.",
            "params": [
                {
                    "name": "recognizer",
                    "description": "",
                    "type": "Recognizer|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Recognizer|Null"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15233,
            "description": "add a recognizer to the manager\nexisting recognizers with the same event name will be removed",
            "params": [
                {
                    "name": "recognizer",
                    "description": "",
                    "type": "Recognizer"
                }
            ],
            "return": {
                "description": "",
                "type": "Recognizer|Manager"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15257,
            "description": "remove a recognizer by name or instance",
            "params": [
                {
                    "name": "recognizer",
                    "description": "",
                    "type": "Recognizer|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Manager"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15283,
            "description": "bind event",
            "params": [
                {
                    "name": "events",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "this",
                "type": "EventEmitter"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15298,
            "description": "unbind event, leave emit blank to remove all handlers",
            "params": [
                {
                    "name": "events",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "this",
                "type": "EventEmitter"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15316,
            "description": "emit event to the listeners",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15345,
            "description": "destroy the manager and unbinds all events\nit doesn't unbind dom events, that is the user own responsibility",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15359,
            "description": "add/remove the css properties as defined in manager.options.cssProps",
            "params": [
                {
                    "name": "manager",
                    "description": "",
                    "type": "Manager"
                },
                {
                    "name": "add",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15374,
            "description": "trigger dom event",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15457,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15459,
            "description": "'use strict';\nvar Hammer = __webpack_require__(22);\n/**\n   * Register a touch event, taking place before a gesture\n   * @param {Hammer} hammer       A hammer instance\n   * @param {function} callback   Callback, called as callback(event)",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15480,
            "description": "Register a release event, taking place after a gesture",
            "params": [
                {
                    "name": "hammer",
                    "description": "A hammer instance",
                    "type": "Hammer"
                },
                {
                    "name": "callback",
                    "description": "Callback, called as callback(event)",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15495,
            "description": "Unregister a touch event, taking place before a gesture",
            "params": [
                {
                    "name": "hammer",
                    "description": "A hammer instance",
                    "type": "Hammer"
                },
                {
                    "name": "callback",
                    "description": "Callback, called as callback(event)",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15504,
            "description": "Unregister a release event, taking place before a gesture",
            "params": [
                {
                    "name": "hammer",
                    "description": "A hammer instance",
                    "type": "Hammer"
                },
                {
                    "name": "callback",
                    "description": "Callback, called as callback(event)",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15511,
            "description": "Hack the PinchRecognizer such that it doesn't prevent default behavior\nfor vertical panning.\n\nYeah ... this is quite a hack ... see https://github.com/hammerjs/hammer.js/issues/932",
            "params": [
                {
                    "name": "pinchRecognizer",
                    "description": "",
                    "type": "Hammer.Pinch"
                }
            ],
            "return": {
                "description": "returns the pinchRecognizer",
                "type": "Hammer.Pinch"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15531,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15533,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar errorFound = false;\n  var allOptions = void 0;\n  var printStyle = 'background: #FFeeee; color: #dd0000';\n  /**\n   *  Used to validate options.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15561,
            "description": "Main function to be called",
            "params": [
                {
                    "name": "options",
                    "description": ""
                },
                {
                    "name": "subObject",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15582,
            "description": "Will traverse an object recursively and check every value",
            "params": [
                {
                    "name": "options",
                    "description": ""
                },
                {
                    "name": "referenceOptions",
                    "description": ""
                },
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15599,
            "description": "Check every value. If the value is an object, call the parse function on that object.",
            "params": [
                {
                    "name": "option",
                    "description": ""
                },
                {
                    "name": "options",
                    "description": ""
                },
                {
                    "name": "referenceOptions",
                    "description": ""
                },
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15631,
            "params": [
                {
                    "name": "option",
                    "description": "| the option property",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "| The supplied options object",
                    "type": "Object"
                },
                {
                    "name": "referenceOptions",
                    "description": "| The reference options containing all options and their allowed formats",
                    "type": "Object"
                },
                {
                    "name": "referenceOption",
                    "description": "| Usually this is the same as option, except when handling an __any__ tag.",
                    "type": "String"
                },
                {
                    "name": "refOptionType",
                    "description": "| This is the type object from the reference options",
                    "type": "String"
                },
                {
                    "name": "path",
                    "description": "| where in the object is the option",
                    "type": "Array"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15730,
            "description": "traverse the options in search for a match.",
            "params": [
                {
                    "name": "option",
                    "description": ""
                },
                {
                    "name": "options",
                    "description": ""
                },
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "recursive",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "ClosestMatch: string, path: Array, distance: number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15855,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15857,
            "description": "'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar util = __webpack_require__(1);\n  var hammerUtil = __webpack_require__(25);\n  var moment = __webpack_require__(2);\n  var Component = __webpack_require__(28);\n  var DateUtil = __webpack_require__(29);\n/**\n   * @constructor Range\n   * A Range controls a numeric range with a start and end value.\n   * The Range adjusts the range based on mouse events or programmatic changes,\n   * and triggers events when the range is changing or has been changed.\n   * @param {{dom: Object, domProps: Object, emitter: Emitter}} body\n   * @param {Object} [options]    See description at Range.setOptions",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15925,
            "description": "Set options for the range controller",
            "params": [
                {
                    "name": "options",
                    "description": "Available options:\n                             {Number | Date | String} start  Start date for the range\n                             {Number | Date | String} end    End date for the range\n                             {Number} min    Minimum value for start\n                             {Number} max    Maximum value for end\n                             {Number} zoomMin    Set a minimum value for\n                                                 (end - start).\n                             {Number} zoomMax    Set a maximum value for\n                                                 (end - start).\n                             {Boolean} moveable Enable moving of the range\n                                                by dragging. True by default\n                             {Boolean} zoomable Enable zooming of the range\n                                                by pinching/scrolling. True by default",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15954,
            "description": "Test whether direction has a valid value",
            "params": [
                {
                    "name": "direction",
                    "description": "'horizontal' or 'vertical'",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 15964,
            "description": "Set a new start and end range",
            "params": [
                {
                    "name": "start",
                    "description": "",
                    "type": "Date | Number | String",
                    "optional": true
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Date | Number | String",
                    "optional": true
                },
                {
                    "name": "}",
                    "description": "[animation=false]\n                                   If true (default), the range is animated\n                                   smoothly to the new window. An object can be\n                                   provided to specify duration and easing function.\n                                   Default duration is 500 ms, and default easing\n                                   function is 'easeInOutQuad'.",
                    "type": "Boolean | duration: number, easingFunction: string"
                },
                {
                    "name": "byUser",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16040,
            "description": "Stop an animation",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16051,
            "description": "Set a new start and end range. This method is the same as setRange, but\ndoes not trigger a range change and range changed event, and it returns\ntrue when the range is changed",
            "params": [
                {
                    "name": "start",
                    "description": "",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "changed",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16165,
            "description": "Retrieve the current range.",
            "return": {
                "description": "An object with start and end properties",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16176,
            "description": "Calculate the conversion offset and scale for current range, based on\nthe provided width",
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "} conversion",
                "type": "Offset: number, scale: number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16186,
            "description": "Static method to calculate the conversion offset and scale for a range,\nbased on the provided start, end, and width",
            "params": [
                {
                    "name": "start",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "} conversion",
                "type": "Offset: number, scale: number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16211,
            "description": "Start dragging horizontally or vertically",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16239,
            "description": "Perform dragging operation",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16295,
            "description": "Stop dragging operation",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16324,
            "description": "Event handler for mouse wheel event, used to zoom\nCode from http://adomas.org/javascript-mouse-wheel/",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16379,
            "description": "Start of a touch gesture",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16392,
            "description": "Handle pinch event",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16438,
            "description": "Test whether the mouse from a mouse event is inside the visible window,\nbetween the current start and end date",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns true when inside the visible window",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16455,
            "description": "Helper function to calculate the center date for zooming",
            "params": [
                {
                    "name": "}",
                    "description": "pointer",
                    "type": "X: Number, y: Number"
                }
            ],
            "return": {
                "description": "date",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16476,
            "description": "Get the pointer location relative to the location of the dom element",
            "params": [
                {
                    "name": "}",
                    "description": "touch",
                    "type": "X: Number, y: Number"
                },
                {
                    "name": "element",
                    "description": "HTML DOM element",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "} pointer",
                "type": "X: Number, y: Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16490,
            "description": "Zoom the range the given scale in or out. Start and end date will\nbe adjusted, and the timeline will be redrawn. You can optionally give a\ndate around which to zoom.\nFor example, try scale = 0.9 or 1.1",
            "params": [
                {
                    "name": "scale",
                    "description": "Scaling factor. Values above 1 will zoom out,\n                           values below 1 will zoom in.",
                    "type": "Number"
                },
                {
                    "name": "center",
                    "description": "Value representing a date around which will\n                           be zoomed.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16530,
            "description": "Move the range with a given delta to the left or right. Start and end\nvalue will be adjusted. For example, try delta = 0.1 or -0.1",
            "params": [
                {
                    "name": "delta",
                    "description": "Moving amount. Positive value will move right,\n                           negative value will move left",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16550,
            "description": "Move the range to a new center point",
            "params": [
                {
                    "name": "moveTo",
                    "description": "New center point of the range",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16568,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16570,
            "description": "\"use strict\";\n/**\n   * Prototype for visual components\n   * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} [body]\n   * @param {Object} [options]",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16584,
            "description": "Set options for the component. The new options will be merged into the\ncurrent options.",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16595,
            "description": "Repaint the component",
            "return": {
                "description": "Returns true if the component is resized",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16604,
            "description": "Destroy the component. Cleanup DOM and event listeners",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16611,
            "description": "Test whether the component is resized since the last time _isResized() was\ncalled.",
            "return": {
                "description": "Returns true if the component is resized",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16628,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16630,
            "description": "\"use strict\";\n/**\n   * used in Core to convert the options into a volatile variable\n   * \n   * @param {function} moment\n   * @param {Object} body\n   * @param {Array | Object} hiddenDates",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16664,
            "description": "create new entrees for the repeating hidden dates",
            "params": [
                {
                    "name": "moment",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "body",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "hiddenDates",
                    "description": "",
                    "type": "Array | Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16815,
            "description": "remove duplicates from the hidden dates list. Duplicates are evil. They mess everything up.\nScales with N^2",
            "params": [
                {
                    "name": "body",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16862,
            "description": "Used in TimeStep to avoid the hidden times.",
            "params": [
                {
                    "name": "moment",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "timeStep",
                    "description": "",
                    "type": "TimeStep"
                },
                {
                    "name": "previousTime",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16919,
            "description": "replaces the Core toScreen methods",
            "params": [
                {
                    "name": "Core",
                    "description": ""
                },
                {
                    "name": "time",
                    "description": ""
                },
                {
                    "name": "width",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16944,
            "description": "Replaces the core toTime methods",
            "params": [
                {
                    "name": "body",
                    "description": ""
                },
                {
                    "name": "range",
                    "description": ""
                },
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "width",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16967,
            "description": "Support function",
            "params": [
                {
                    "name": "hiddenDates",
                    "description": ""
                },
                {
                    "name": "range",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 16987,
            "description": "Support function",
            "params": [
                {
                    "name": "moment",
                    "description": ""
                },
                {
                    "name": "hiddenDates",
                    "description": ""
                },
                {
                    "name": "range",
                    "description": ""
                },
                {
                    "name": "time",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "Duration: number, time: *, offset: number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17018,
            "description": "sum the duration from start to finish, including the hidden duration,\nuntil the required amount has been reached, return the accumulated hidden duration",
            "params": [
                {
                    "name": "hiddenDates",
                    "description": ""
                },
                {
                    "name": "range",
                    "description": ""
                },
                {
                    "name": "time",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "Duration: number, time: *, offset: number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17049,
            "description": "used to step over to either side of a hidden block. Correction is disabled on tablets, might be set to true",
            "params": [
                {
                    "name": "hiddenDates",
                    "description": ""
                },
                {
                    "name": "time",
                    "description": ""
                },
                {
                    "name": "direction",
                    "description": ""
                },
                {
                    "name": "correctionEnabled",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17078,
            "description": "Check if a time is hidden",
            "params": [
                {
                    "name": "time",
                    "description": ""
                },
                {
                    "name": "hiddenDates",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "{hidden: boolean, startDate: Window.start, endDate: *"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17099,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17101,
            "description": "'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar Emitter = __webpack_require__(12);\n  var Hammer = __webpack_require__(22);\n  var hammerUtil = __webpack_require__(25);\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\n  var Range = __webpack_require__(27);\n  var ItemSet = __webpack_require__(31);\n  var TimeAxis = __webpack_require__(41);\n  var Activator = __webpack_require__(42);\n  var DateUtil = __webpack_require__(29);\n  var CustomTime = __webpack_require__(44);\n/**\n   * Create a timeline visualization\n   * @constructor",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17129,
            "description": "Create the main DOM for the Core: a root panel containing left, right,\ntop, bottom, content, and background panel.",
            "params": [
                {
                    "name": "container",
                    "description": "The container element where the Core will\n                            be attached.",
                    "type": "Element"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17296,
            "description": "Set options. Options will be passed to all components loaded in the Timeline.",
            "params": [
                {
                    "name": "options",
                    "description": "\n                          {String} orientation\n                             Vertical orientation for the Timeline,\n                             can be 'bottom' (default) or 'top'.\n                          {String | Number} width\n                             Width for the timeline, a number in pixels or\n                             a css string like '1000px' or '75%'. '100%' by default.\n                          {String | Number} height\n                             Fixed height for the Timeline, a number in pixels or\n                             a css string like '400px' or '75%'. If undefined,\n                             The Timeline will automatically size such that\n                             its contents fit.\n                          {String | Number} minHeight\n                             Minimum height for the Timeline, a number in pixels or\n                             a css string like '400px' or '75%'.\n                          {String | Number} maxHeight\n                             Maximum height for the Timeline, a number in pixels or\n                             a css string like '400px' or '75%'.\n                          {Number | Date | String} start\n                             Start date for the visible window\n                          {Number | Date | String} end\n                             End date for the visible window",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17428,
            "description": "Returns true when the Timeline is active.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17436,
            "description": "Destroy the Core, clean up all DOM elements and event listeners.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17479,
            "description": "Set a custom time bar",
            "params": [
                {
                    "name": "time",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "id",
                    "description": "Optional id of the custom time bar to be adjusted.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "undefined"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17498,
            "description": "Retrieve the current custom time.",
            "params": [
                {
                    "name": "id",
                    "description": "Id of the custom time bar.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "undefined"
                }
            ],
            "return": {
                "description": "customTime",
                "type": "Date | undefined"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17514,
            "description": "Set a custom title for the custom time bar.",
            "params": [
                {
                    "name": "title",
                    "description": "Custom title",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "id",
                    "description": "Id of the custom time bar.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "undefined"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17532,
            "description": "Retrieve meta information from an event.\nShould be overridden by classes extending Core",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "An object with related information.",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17542,
            "description": "Add custom vertical bar",
            "params": [
                {
                    "name": "time",
                    "description": "A Date, unix timestamp, or\n                                        ISO date string. Time point where\n                                        the new bar should be placed.\n                                        If not provided, `new Date()` will\n                                        be used.",
                    "type": "Date | String | Number",
                    "optional": true
                },
                {
                    "name": "id",
                    "description": "Id of the new bar. Optional",
                    "type": "Number | String",
                    "optional": true,
                    "optdefault": "undefined"
                }
            ],
            "return": {
                "description": "Returns the id of the new bar",
                "type": "Number | String"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17574,
            "description": "Remove previously added custom bar",
            "params": [
                {
                    "name": "id",
                    "description": "ID of the custom bar to be removed",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "True if the bar exists and is removed, false otherwise",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17595,
            "description": "Get the id's of the currently visible items.",
            "return": {
                "description": "The ids of the visible items",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17603,
            "description": "Set Core window such that it fits all items",
            "params": [
                {
                    "name": "options",
                    "description": "Available options:\n                               `animation: boolean | {duration: number, easingFunction: string}`\n                                   If true (default), the range is animated\n                                   smoothly to the new window. An object can be\n                                   provided to specify duration and easing function.\n                                   Default duration is 500 ms, and default easing\n                                   function is 'easeInOutQuad'.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17630,
            "description": "Calculate the data range of the items start and end dates",
            "return": {
                "description": "}",
                "type": "Min: Date | null, max: Date | null"
            },
            "access": "protected",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17640,
            "description": "Set the visible window. Both parameters are optional, you can change only\nstart or only end. Syntax:\n\n    TimeLine.setWindow(start, end)\n    TimeLine.setWindow(start, end, options)\n    TimeLine.setWindow(range)\n\nWhere start and end can be a Date, number, or string, and range is an\nobject with properties start and end.",
            "params": [
                {
                    "name": "start",
                    "description": "Start date of visible window",
                    "type": "Date | Number | String | Object",
                    "optional": true
                },
                {
                    "name": "end",
                    "description": "End date of visible window",
                    "type": "Date | Number | String",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "Available options:\n                               `animation: boolean | {duration: number, easingFunction: string}`\n                                   If true (default), the range is animated\n                                   smoothly to the new window. An object can be\n                                   provided to specify duration and easing function.\n                                   Default duration is 500 ms, and default easing\n                                   function is 'easeInOutQuad'.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17673,
            "description": "Move the window such that given time is centered on screen.",
            "params": [
                {
                    "name": "time",
                    "description": "",
                    "type": "Date | Number | String"
                },
                {
                    "name": "options",
                    "description": "Available options:\n                               `animation: boolean | {duration: number, easingFunction: string}`\n                                   If true (default), the range is animated\n                                   smoothly to the new window. An object can be\n                                   provided to specify duration and easing function.\n                                   Default duration is 500 ms, and default easing\n                                   function is 'easeInOutQuad'.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17695,
            "description": "Get the visible window",
            "return": {
                "description": "}   Visible range",
                "type": "Start: Date, end: Date"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17707,
            "description": "Force a redraw. Can be overridden by implementations of Core\n\nNote: this function will be overridden on construction with a trottled version",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17716,
            "description": "Redraw for internal use. Redraws all components. See also the public\nmethod redraw.",
            "access": "protected",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17892,
            "description": "Set a current time. This can be used for example to ensure that a client's\ntime is synchronized with a shared server time.\nOnly applicable when option `showCurrentTime` is true.",
            "params": [
                {
                    "name": "time",
                    "description": "A Date, unix timestamp, or\n                                         ISO date string.",
                    "type": "Date | String | Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17907,
            "description": "Get the current time.\nOnly applicable when option `showCurrentTime` is true.",
            "return": {
                "description": "Returns the current time.",
                "type": "Date"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17920,
            "description": "Convert a position on screen (pixels) to a datetime",
            "params": [
                {
                    "name": "x",
                    "description": "Position on the screen in pixels",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "time The datetime the corresponds with given position x",
                "type": "Date"
            },
            "access": "protected",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17931,
            "description": "Convert a position on the global screen (pixels) to a datetime",
            "params": [
                {
                    "name": "x",
                    "description": "Position on the screen in pixels",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "time The datetime the corresponds with given position x",
                "type": "Date"
            },
            "access": "protected",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17944,
            "description": "Convert a datetime (Date object) into a position on the screen",
            "params": [
                {
                    "name": "time",
                    "description": "A date",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "x    The position on the screen in pixels which corresponds\n                     with the given date.",
                "type": "Int"
            },
            "access": "protected",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17956,
            "description": "Convert a datetime (Date object) into a position on the root\nThis is used to get the pixel density estimate for the screen, not the center panel",
            "params": [
                {
                    "name": "time",
                    "description": "A date",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "x    The position on root in pixels which corresponds\n                     with the given date.",
                "type": "Int"
            },
            "access": "protected",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17971,
            "description": "Initialize watching when option autoResize is true",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 17983,
            "description": "Watch for changes in the size of the container. On resize, the Panel will\nautomatically redraw itself.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18026,
            "description": "Stop watching for a resize of the frame.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18043,
            "description": "Start moving the timeline vertically",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18053,
            "description": "Start moving the timeline vertically",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18062,
            "description": "Move the timeline vertically",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18082,
            "description": "Apply a scrollTop",
            "params": [
                {
                    "name": "scrollTop",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "scrollTop  Returns the applied scrollTop",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18094,
            "description": "Update the current scrollTop when the height of  the containers has been changed",
            "return": {
                "description": "scrollTop  Returns the applied scrollTop",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18118,
            "description": "Get the current scrollTop",
            "return": {
                "description": "scrollTop",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18127,
            "description": "Load a configurator",
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18138,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18140,
            "description": "'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar Hammer = __webpack_require__(22);\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\n  var TimeStep = __webpack_require__(32);\n  var Component = __webpack_require__(28);\n  var Group = __webpack_require__(33);\n  var BackgroundGroup = __webpack_require__(37);\n  var BoxItem = __webpack_require__(38);\n  var PointItem = __webpack_require__(39);\n  var RangeItem = __webpack_require__(35);\n  var BackgroundItem = __webpack_require__(40);\nvar UNGROUPED = '__ungrouped__'; // reserved group id for ungrouped items\n  var BACKGROUND = '__background__'; // reserved group id for background items without group\n/**\n   * An ItemSet holds a set of items and ranges which can be displayed in a\n   * range. The width is determined by the parent of the ItemSet, and the height\n   * is determined by the size of the items.\n   * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} body\n   * @param {Object} [options]      See ItemSet.setOptions for the available options.\n   * @constructor ItemSet\n   * @extends Component",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18313,
            "description": "Create the HTML DOM for the ItemSet",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18388,
            "description": "Set options for the ItemSet. Existing options will be extended/overwritten.",
            "params": [
                {
                    "name": "options",
                    "description": "The following options are available:\n                          {String} type\n                             Default type for the items. Choose from 'box'\n                             (default), 'point', 'range', or 'background'.\n                             The default style can be overwritten by\n                             individual items.\n                          {String} align\n                             Alignment for the items, only applicable for\n                             BoxItem. Choose 'center' (default), 'left', or\n                             'right'.\n                          {String} orientation.item\n                             Orientation of the item set. Choose 'top' or\n                             'bottom' (default).\n                          {Function} groupOrder\n                             A sorting function for ordering groups\n                          {Boolean} stack\n                             If true (default), items will be stacked on\n                             top of each other.\n                          {Number} margin.axis\n                             Margin between the axis and the items in pixels.\n                             Default is 20.\n                          {Number} margin.item.horizontal\n                             Horizontal margin between items in pixels.\n                             Default is 10.\n                          {Number} margin.item.vertical\n                             Vertical Margin between items in pixels.\n                             Default is 10.\n                          {Number} margin.item\n                             Margin between items in pixels in both horizontal\n                             and vertical direction. Default is 10.\n                          {Number} margin\n                             Set margin for both axis and items in pixels.\n                          {Boolean} selectable\n                             If true (default), items can be selected.\n                          {Boolean} multiselect\n                             If true, multiple items can be selected.\n                             False by default.\n                          {Boolean} editable\n                             Set all editable options to true or false\n                          {Boolean} editable.updateTime\n                             Allow dragging an item to an other moment in time\n                          {Boolean} editable.updateGroup\n                             Allow dragging an item to an other group\n                          {Boolean} editable.add\n                             Allow creating new items on double tap\n                          {Boolean} editable.remove\n                             Allow removing items by clicking the delete button\n                             top right of a selected item.\n                          {Function(item: Item, callback: Function)} onAdd\n                             Callback function triggered when an item is about to be added:\n                             when the user double taps an empty space in the Timeline.\n                          {Function(item: Item, callback: Function)} onUpdate\n                             Callback function fired when an item is about to be updated.\n                             This function typically has to show a dialog where the user\n                             change the item. If not implemented, nothing happens.\n                          {Function(item: Item, callback: Function)} onMove\n                             Fired when an item has been moved. If not implemented,\n                             the move action will be accepted.\n                          {Function(item: Item, callback: Function)} onRemove\n                             Fired when an item is about to be deleted.\n                             If not implemented, the item will be always removed.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18522,
            "description": "Mark the ItemSet dirty so it will refresh everything with next redraw.\nOptionally, all items can be marked as dirty and be refreshed.",
            "params": [
                {
                    "name": "}",
                    "description": "[options]",
                    "type": "RefreshItems: boolean"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18539,
            "description": "Destroy the ItemSet",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18553,
            "description": "Hide the component from the DOM",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18573,
            "description": "Show the component in the DOM (when not already visible).",
            "return": {
                "description": "changed",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18594,
            "description": "Set selected items by their id. Replaces the current selection\nUnknown id's are silently ignored.",
            "params": [
                {
                    "name": "ids",
                    "description": "An array with zero or more id's of the items to be\n                                 selected, or a single item id. If ids is undefined\n                                 or an empty array, all items will be unselected.",
                    "type": "String[] | string",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18626,
            "description": "Get the selected items by their id",
            "return": {
                "description": "ids  The ids of the selected items",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18634,
            "description": "Get the id's of the currently visible items.",
            "return": {
                "description": "The ids of the visible items",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18664,
            "description": "Deselect a selected item",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String | Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18680,
            "description": "Repaint the component",
            "return": {
                "description": "Returns true if the component is resized",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18754,
            "description": "Get the first group, aligned with the axis",
            "return": {
                "description": "firstGroup",
                "type": "Group | null"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18767,
            "description": "Create or delete the group holding all ungrouped items. This group is used when\nthere are no groups specified.",
            "access": "protected",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18813,
            "description": "Get the element for the labelset",
            "return": {
                "description": "labelSet",
                "type": "HTMLElement"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18821,
            "description": "Set items",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "vis.DataSet | null"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18868,
            "description": "Get the current items",
            "return": {
                "description": "",
                "type": "vis.DataSet | null"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18876,
            "description": "Set groups",
            "params": [
                {
                    "name": "groups",
                    "description": "",
                    "type": "vis.DataSet"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18926,
            "description": "Get the current groups",
            "return": {
                "description": "groups",
                "type": "vis.DataSet | null"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18934,
            "description": "Remove an item by its id",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String | Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18954,
            "description": "Get the time of an item based on it's data and options.type",
            "params": [
                {
                    "name": "itemData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the type",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18964,
            "description": "Get the group id for an item",
            "params": [
                {
                    "name": "itemData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the groupId",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 18979,
            "description": "Handle updated items",
            "params": [
                {
                    "name": "ids",
                    "description": "",
                    "type": "Number[]"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19031,
            "description": "Handle added items",
            "params": [
                {
                    "name": "ids",
                    "description": "",
                    "type": "Number[]"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19038,
            "description": "Handle removed items",
            "params": [
                {
                    "name": "ids",
                    "description": "",
                    "type": "Number[]"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19062,
            "description": "Update the order of item in all groups",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19074,
            "description": "Handle updated groups",
            "params": [
                {
                    "name": "ids",
                    "description": "",
                    "type": "Number[]"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19083,
            "description": "Handle changed groups (added or updated)",
            "params": [
                {
                    "name": "ids",
                    "description": "",
                    "type": "Number[]"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19130,
            "description": "Handle removed groups",
            "params": [
                {
                    "name": "ids",
                    "description": "",
                    "type": "Number[]"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19151,
            "description": "Reorder the groups if needed",
            "return": {
                "description": "changed",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19185,
            "description": "Add a new item",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Item"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19199,
            "description": "Update an existing item",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Item"
                },
                {
                    "name": "itemData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19223,
            "description": "Delete an item from the ItemSet: remove it from the DOM, from the map\nwith items, and from the map with visible items, and from the selection",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Item"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19244,
            "description": "Create an array containing all items being a range (having an end date)",
            "params": [
                {
                    "name": "array",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19261,
            "description": "Register the clicked item on touch, before dragStart is initiated.\n\ndragStart is initiated from a mousemove event, AFTER the mouse/touch is\nalready moving. Therefore, the mouse/touch can sometimes be above an other\nDOM element than the item itself.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19279,
            "description": "Given an group id, returns the index it has.",
            "params": [
                {
                    "name": "groupID",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19291,
            "description": "Start dragging the selected events",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19359,
            "description": "Start creating a new range item by dragging.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19405,
            "description": "Drag selected items",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19515,
            "description": "Move an item to another group",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Item"
                },
                {
                    "name": "groupId",
                    "description": "",
                    "type": "String | Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19534,
            "description": "End of dragging selected items",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19756,
            "description": "Handle selecting/deselecting an item when tapping it",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19789,
            "description": "Handle creation and updates of an item on double tap",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19849,
            "description": "Handle selecting/deselecting multiple items when holding an item",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19921,
            "description": "Calculate the time range of a list of items",
            "params": [
                {
                    "name": "itemsData",
                    "description": "",
                    "type": "Array.<Object>"
                }
            ],
            "return": {
                "description": "} Returns the range of the provided items",
                "type": "Min: Date, max: Date"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19953,
            "description": "Find an item from an event target:\nsearches for the attribute 'timeline-item' in the event target's element tree",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "item",
                "type": "Item | null"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 19971,
            "description": "Find the Group from an event target:\nsearches for the attribute 'timeline-group' in the event target's element tree",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "group",
                "type": "Group | null"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20002,
            "description": "Find the ItemSet from an event target:\nsearches for the attribute 'timeline-itemset' in the event target's element tree",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "item",
                "type": "ItemSet | null"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20020,
            "description": "Clone the data of an item, and \"normalize\" it: convert the start and end date\nto the type (Date, Moment, ...) configured in the DataSet. If not configured,\nstart and end are converted to Date.",
            "params": [
                {
                    "name": "itemData,",
                    "description": "typically `item.data`",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "Optional Date type. If not provided, the type from the DataSet is taken",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The cloned object",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20049,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20051,
            "description": "'use strict';\nvar moment = __webpack_require__(2);\n  var DateUtil = __webpack_require__(29);\n  var util = __webpack_require__(1);\n/**\n   * @constructor  TimeStep\n   * The class TimeStep is an iterator for dates. You provide a start date and an\n   * end date. The class itself determines the best scale (step size) based on the\n   * provided start Date, end Date, and minimumStep.\n   *\n   * If minimumStep is provided, the step size is chosen as close as possible\n   * to the minimumStep but larger than minimumStep. If minimumStep is not\n   * provided, the scale is set to 1 DAY.\n   * The minimumStep should correspond with the onscreen size of about 6 characters\n   *\n   * Alternatively, you can set a scale by hand.\n   * After creation, you can initialize the class by executing first(). Then you\n   * can iterate from the start date to the end date via next(). You can check if\n   * the end date is reached with the function hasNext(). After each step, you can\n   * retrieve the current date via getCurrent().\n   * The TimeStep has scales ranging from milliseconds, seconds, minutes, hours,\n   * days, to years.\n   *\n   * Version: 1.2\n   *\n   * @param {Date} [start]         The start date, for example new Date(2010, 9, 21)\n   *                               or new Date(2010, 9, 21, 23, 45, 00)\n   * @param {Date} [end]           The end date\n   * @param {Number} [minimumStep] Optional. Minimum step size in milliseconds",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20139,
            "description": "Set custom constructor function for moment. Can be used to set dates\nto UTC or to set a utcOffset.",
            "params": [
                {
                    "name": "moment",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20153,
            "description": "Set custom formatting for the minor an major labels of the TimeStep.\nBoth `minorLabels` and `majorLabels` are an Object with properties:\n'millisecond', 'second', 'minute', 'hour', 'weekday', 'day', 'month', 'year'.",
            "params": [
                {
                    "name": "}",
                    "description": "format",
                    "type": "MinorLabels: Object, majorLabels: Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20164,
            "description": "Set a new range\nIf minimumStep is provided, the step size is chosen as close as possible\nto the minimumStep but larger than minimumStep. If minimumStep is not\nprovided, the scale is set to 1 DAY.\nThe minimumStep should correspond with the onscreen size of about 6 characters",
            "params": [
                {
                    "name": "start",
                    "description": "The start date and time.",
                    "type": "Date",
                    "optional": true
                },
                {
                    "name": "end",
                    "description": "The end date and time.",
                    "type": "Date",
                    "optional": true
                },
                {
                    "name": "minimumStep",
                    "description": "Optional. Minimum step size in milliseconds",
                    "type": "Int",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20187,
            "description": "Set the range iterator to the start date.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20195,
            "description": "Round the current date to the first minor date value\nThis must be executed once when the current date is set to start Date",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20245,
            "description": "Check if the there is a next step",
            "return": {
                "description": "true if the current date has not passed the end date",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20253,
            "description": "Do the next step",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20338,
            "description": "Get the current datetime",
            "return": {
                "description": "current The current date",
                "type": "Moment"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20346,
            "description": "Set a custom scale. Autoscaling will be disabled.\nFor example setScale('minute', 5) will result\nin minor steps of 5 minutes, and major steps of an hour.",
            "params": [
                {
                    "name": "}",
                    "description": "params\n                              An object containing two properties:\n                              - A string 'scale'. Choose from 'millisecond', 'second',\n                                'minute', 'hour', 'weekday', 'day', 'month', 'year'.\n                              - A number 'step'. A step size, by default 1.\n                                Choose for example 1, 2, 5, or 10.",
                    "type": "Scale: string, step: number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20366,
            "description": "Enable or disable autoscaling",
            "params": [
                {
                    "name": "enable",
                    "description": "If true, autoascaling is set true",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20374,
            "description": "Automatically determine the scale that bests fits the provided minimum step",
            "params": [
                {
                    "name": "minimumStep",
                    "description": "The minimum step size in milliseconds",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20483,
            "description": "Snap a date to a rounded value.\nThe snap intervals are dependent on the current scale and step.\nStatic function",
            "params": [
                {
                    "name": "date",
                    "description": "the date to be snapped.",
                    "type": "Date"
                },
                {
                    "name": "scale",
                    "description": "Current scale, can be 'millisecond', 'second',\n                      'minute', 'hour', 'weekday, 'day', 'month', 'year'.",
                    "type": "String"
                },
                {
                    "name": "step",
                    "description": "Current step (1, 2, 4, 5, ...",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "snappedDate",
                "type": "Date"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20586,
            "description": "Check if the current value is a major value (for example when the step\nis DAY, a major value is each first day of the MONTH)",
            "return": {
                "description": "true if current date is major, else false.",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20655,
            "description": "Returns formatted text for the minor axislabel, depending on the current\ndate and the scale. For example when scale is MINUTE, the current time is\nformatted as \"hh:mm\".",
            "params": [
                {
                    "name": "date",
                    "description": "custom date. if not provided, current date is taken",
                    "type": "Date",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20670,
            "description": "Returns formatted text for the major axis label, depending on the current\ndate and the scale. For example when scale is MINUTE, the major scale is\nhours, and the hour will be formatted as \"hh\".",
            "params": [
                {
                    "name": "date",
                    "description": "custom date. if not provided, current date is taken",
                    "type": "Date",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20759,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20761,
            "description": "'use strict';\nvar util = __webpack_require__(1);\n  var stack = __webpack_require__(34);\n  var RangeItem = __webpack_require__(35);\n/**\n   * @constructor Group\n   * @param {Number | String} groupId\n   * @param {Object} data\n   * @param {ItemSet} itemSet",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20808,
            "description": "Create DOM elements for the group",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20846,
            "description": "Set the group data for this group",
            "params": [
                {
                    "name": "data",
                    "description": "Group data, can contain properties content and className",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20907,
            "description": "Get the width of the group label",
            "return": {
                "description": "width",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 20915,
            "description": "Repaint this group",
            "params": [
                {
                    "name": "}",
                    "description": "range",
                    "type": "Start: number, end: number"
                },
                {
                    "name": ",",
                    "description": "axis: number}} margin",
                    "type": "Item: horizontal: number, vertical: number"
                },
                {
                    "name": "restack",
                    "description": "Force restacking of all items",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns true if the group is resized",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21009,
            "description": "recalculate the height of the subgroups",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21028,
            "description": "recalculate the height of the group",
            "params": [
                {
                    "name": ",",
                    "description": "axis: number}} margin",
                    "type": "Item: horizontal: number, vertical: number"
                }
            ],
            "return": {
                "description": "Returns the height",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21062,
            "description": "Show this group: attach to the DOM",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21083,
            "description": "Hide this group: remove from the DOM",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21108,
            "description": "Add an item to the group",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Item"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21165,
            "description": "Remove an item from the group",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Item"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21191,
            "description": "Remove an item from the corresponding DataSet",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Item"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21199,
            "description": "Reorder the items",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21222,
            "description": "Update the visible items",
            "params": [
                {
                    "name": "}",
                    "description": "orderedItems   All items ordered by start date and by end date",
                    "type": "ByStart: Item[], byEnd: Item[]"
                },
                {
                    "name": "visibleItems",
                    "description": "The previously visible items.",
                    "type": "Item[]"
                },
                {
                    "name": "}",
                    "description": "range              Visible range",
                    "type": "Start: number, end: number"
                }
            ],
            "return": {
                "description": "visibleItems                            The new visible items.",
                "type": "Item[]"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21338,
            "description": "this function is very similar to the _checkIfInvisible() but it does not\nreturn booleans, hides the item if it should not be seen and always adds to\nthe visibleItems.\nthis one is for brute forcing and hiding.",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Item"
                },
                {
                    "name": "visibleItems",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "}",
                    "description": "range",
                    "type": "Start:number, end:number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21360,
            "description": "this function is very similar to the _checkIfInvisible() but it does not\nreturn booleans, hides the item if it should not be seen and always adds to\nthe visibleItems.\nthis one is for brute forcing and hiding.",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Item"
                },
                {
                    "name": "visibleItems",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "}",
                    "description": "range",
                    "type": "Start:number, end:number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21384,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21386,
            "description": "'use strict';\n// Utility functions for ordering and stacking of items\n  var EPSILON = 0.001; // used when checking collisions, to prevent round-off errors\n/**\n   * Order items by their start data\n   * @param {Item[]} items",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21403,
            "description": "Order items by their end date. If they have no end date, their start date\nis used.",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "Item[]"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21417,
            "description": "Adjust vertical positions of the items such that they don't overlap each\nother.",
            "params": [
                {
                    "name": "items",
                    "description": "All visible items",
                    "type": "Item[]"
                },
                {
                    "name": ",",
                    "description": "axis: number}} margin\n           Margins between items and between items and the axis.",
                    "type": "Item: horizontal: number, vertical: number"
                },
                {
                    "name": "force",
                    "description": "\n           If true, all items will be repositioned. If false (default), only\n           items having a top===null will be re-stacked",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21466,
            "description": "Adjust vertical positions of the items without stacking them",
            "params": [
                {
                    "name": "items",
                    "description": "All visible items",
                    "type": "Item[]"
                },
                {
                    "name": ",",
                    "description": "axis: number}} margin\n           Margins between items and between items and the axis.",
                    "type": "Item: horizontal: number, vertical: number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21494,
            "description": "Test if the two provided items collide\nThe items must have parameters left, width, top, and height.",
            "params": [
                {
                    "name": "a",
                    "description": "The first item",
                    "type": "Item"
                },
                {
                    "name": "b",
                    "description": "The second item",
                    "type": "Item"
                },
                {
                    "name": "}",
                    "description": "margin\n                         An object containing a horizontal and vertical\n                         minimum required margin.",
                    "type": "Horizontal: number, vertical: number"
                }
            ],
            "return": {
                "description": "true if a and b collide, else false",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21508,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21510,
            "description": "'use strict';\nvar Hammer = __webpack_require__(22);\n  var Item = __webpack_require__(36);\n/**\n   * @constructor RangeItem\n   * @extends Item\n   * @param {Object} data             Object containing parameters start, end\n   *                                  content, className.\n   * @param {{toScreen: function, toTime: function}} conversion\n   *                                  Conversion functions from time to screen and vice versa\n   * @param {Object} [options]        Configuration options\n   *                                  // TODO: describe options",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21552,
            "description": "Check whether this item is visible inside given range",
            "return": {
                "description": "True if visible",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21562,
            "description": "Repaint the item",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21640,
            "description": "Show the item in the DOM (when not already visible). The items DOM will\nbe created when needed.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21650,
            "description": "Hide the item from the DOM (when visible)",
            "return": {
                "description": "changed",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21666,
            "description": "Reposition the item horizontally",
            "params": [
                {
                    "name": "limitSize",
                    "description": "If true (default), the width of the range\n                                  item will be limited, as the browser cannot\n                                  display very wide divs. This means though\n                                  that the applied left and width may\n                                  not correspond to the ranges start and end",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "override": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21743,
            "description": "Reposition the item vertically",
            "override": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21758,
            "description": "Repaint a drag area on the left side of the range when the range is selected",
            "access": "protected",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21780,
            "description": "Repaint a drag area on the right side of the range when the range is selected",
            "access": "protected",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21804,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21806,
            "description": "'use strict';\nvar Hammer = __webpack_require__(22);\n  var util = __webpack_require__(1);\n/**\n   * @constructor Item\n   * @param {Object} data             Object containing (optional) parameters type,\n   *                                  start, end, content, group, className.\n   * @param {{toScreen: function, toTime: function}} conversion\n   *                                  Conversion functions from time to screen and vice versa\n   * @param {Object} options          Configuration options\n   *                                  // TODO: describe available options",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21847,
            "description": "Select current item",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21856,
            "description": "Unselect current item",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21865,
            "description": "Set data for the item. Existing data will be updated. The id should not\nbe changed. When the item is displayed, it will be redrawn immediately.",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21885,
            "description": "Set a parent for the item",
            "params": [
                {
                    "name": "parent",
                    "description": "",
                    "type": "ItemSet | Group"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21901,
            "description": "Check whether this item is visible inside given range",
            "return": {
                "description": "True if visible",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21911,
            "description": "Show the Item in the DOM (when not already visible)",
            "return": {
                "description": "changed",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21919,
            "description": "Hide the Item from the DOM (when visible)",
            "return": {
                "description": "changed",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21927,
            "description": "Repaint the item",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21934,
            "description": "Reposition the Item horizontally",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21941,
            "description": "Reposition the Item vertically",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21948,
            "description": "Repaint a delete button on the top right of the item when the item is selected",
            "params": [
                {
                    "name": "anchor",
                    "description": "",
                    "type": "HTMLElement"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 21981,
            "description": "Set HTML contents for the item",
            "params": [
                {
                    "name": "element",
                    "description": "HTML element to fill with the contents",
                    "type": "Element"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22013,
            "description": "Set HTML contents for the item",
            "params": [
                {
                    "name": "element",
                    "description": "HTML element to fill with the contents",
                    "type": "Element"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22026,
            "description": "Process dataAttributes timeline option and set as data- attributes on dom.content",
            "params": [
                {
                    "name": "element",
                    "description": "HTML element to which the attributes will be attached",
                    "type": "Element"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22056,
            "description": "Update custom styles of the element",
            "params": [
                {
                    "name": "element",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22075,
            "description": "Stringify the items contents",
            "params": [
                {
                    "name": "content",
                    "description": "",
                    "type": "String | Element | undefined"
                }
            ],
            "return": {
                "description": "",
                "type": "String | undefined"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22087,
            "description": "Return the width of the item left from its start date",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22095,
            "description": "Return the width of the item right from the max of its start and end date",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22105,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22107,
            "description": "'use strict';\nvar util = __webpack_require__(1);\n  var Group = __webpack_require__(33);\n/**\n   * @constructor BackgroundGroup\n   * @param {Number | String} groupId\n   * @param {Object} data\n   * @param {ItemSet} itemSet",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22131,
            "description": "Repaint this group",
            "params": [
                {
                    "name": "}",
                    "description": "range",
                    "type": "Start: number, end: number"
                },
                {
                    "name": ",",
                    "description": "axis: number}} margin",
                    "type": "Item: horizontal: number, vertical: number"
                },
                {
                    "name": "restack",
                    "description": "Force restacking of all items",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns true if the group is resized",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22158,
            "description": "Show this group: attach to the DOM",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22169,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22171,
            "description": "'use strict';\nvar Item = __webpack_require__(36);\n  var util = __webpack_require__(1);\n/**\n   * @constructor BoxItem\n   * @extends Item\n   * @param {Object} data             Object containing parameters start\n   *                                  content, className.\n   * @param {{toScreen: function, toTime: function}} conversion\n   *                                  Conversion functions from time to screen and vice versa\n   * @param {Object} [options]        Configuration options\n   *                                  // TODO: describe available options",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22212,
            "description": "Check whether this item is visible inside given range",
            "return": {
                "description": "True if visible",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22224,
            "description": "Repaint the item",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22308,
            "description": "Show the item in the DOM (when not already displayed). The items DOM will\nbe created when needed.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22318,
            "description": "Hide the item from the DOM (when visible)",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22333,
            "description": "Reposition the item horizontally",
            "override": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22367,
            "description": "Reposition the item vertically",
            "override": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22396,
            "description": "Return the width of the item left from its start date",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22404,
            "description": "Return the width of the item right from its start date",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22414,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22416,
            "description": "'use strict';\nvar Item = __webpack_require__(36);\n/**\n   * @constructor PointItem\n   * @extends Item\n   * @param {Object} data             Object containing parameters start\n   *                                  content, className.\n   * @param {{toScreen: function, toTime: function}} conversion\n   *                                  Conversion functions from time to screen and vice versa\n   * @param {Object} [options]        Configuration options\n   *                                  // TODO: describe available options",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22457,
            "description": "Check whether this item is visible inside given range",
            "return": {
                "description": "True if visible",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22469,
            "description": "Repaint the item",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22551,
            "description": "Show the item in the DOM (when not already visible). The items DOM will\nbe created when needed.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22561,
            "description": "Hide the item from the DOM (when visible)",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22574,
            "description": "Reposition the item horizontally",
            "override": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22587,
            "description": "Reposition the item vertically",
            "override": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22602,
            "description": "Return the width of the item left from its start date",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22610,
            "description": "Return the width of the item right from  its start date",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22620,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22622,
            "description": "'use strict';\nvar Hammer = __webpack_require__(22);\n  var Item = __webpack_require__(36);\n  var BackgroundGroup = __webpack_require__(37);\n  var RangeItem = __webpack_require__(35);\n/**\n   * @constructor BackgroundItem\n   * @extends Item\n   * @param {Object} data             Object containing parameters start, end\n   *                                  content, className.\n   * @param {{toScreen: function, toTime: function}} conversion\n   *                                  Conversion functions from time to screen and vice versa\n   * @param {Object} [options]        Configuration options\n   *                                  // TODO: describe options",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22668,
            "description": "Check whether this item is visible inside given range",
            "return": {
                "description": "True if visible",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22678,
            "description": "Repaint the item",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22747,
            "description": "Show the item in the DOM (when not already visible). The items DOM will\nbe created when needed.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22753,
            "description": "Hide the item from the DOM (when visible)",
            "return": {
                "description": "changed",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22759,
            "description": "Reposition the item horizontally",
            "override": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22765,
            "description": "Reposition the item vertically",
            "override": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22841,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22843,
            "description": "'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar util = __webpack_require__(1);\n  var Component = __webpack_require__(28);\n  var TimeStep = __webpack_require__(32);\n  var DateUtil = __webpack_require__(29);\n  var moment = __webpack_require__(2);\n/**\n   * A horizontal time axis\n   * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} body\n   * @param {Object} [options]        See TimeAxis.setOptions for the available\n   *                                  options.\n   * @constructor TimeAxis\n   * @extends Component",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22907,
            "description": "Set options for the TimeAxis.\nParameters will be merged in current options.",
            "params": [
                {
                    "name": "options",
                    "description": "Available options:\n                         {string} [orientation.axis]\n                         {boolean} [showMinorLabels]\n                         {boolean} [showMajorLabels]",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22944,
            "description": "Create the HTML DOM for the TimeAxis",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22955,
            "description": "Destroy the TimeAxis",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 22970,
            "description": "Repaint the component",
            "return": {
                "description": "Returns true if the component is resized",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23026,
            "description": "Repaint major and minor text labels and vertical grid lines",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23150,
            "description": "Create a minor label for the axis at position x",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "orientation",
                    "description": "\"top\" or \"bottom\" (default)",
                    "type": "String"
                },
                {
                    "name": "className",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the HTML element of the created label",
                "type": "Element"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23182,
            "description": "Create a Major label for the axis at position x",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "orientation",
                    "description": "\"top\" or \"bottom\" (default)",
                    "type": "String"
                },
                {
                    "name": "className",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the HTML element of the created label",
                "type": "Element"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23214,
            "description": "Create a minor line for the axis at position x",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "orientation",
                    "description": "\"top\" or \"bottom\" (default)",
                    "type": "String"
                },
                {
                    "name": "className",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the created line",
                "type": "Element"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23248,
            "description": "Create a Major line for the axis at position x",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "orientation",
                    "description": "\"top\" or \"bottom\" (default)",
                    "type": "String"
                },
                {
                    "name": "className",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the created line",
                "type": "Element"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23282,
            "description": "Determine the size of text on the axis (both major and minor axis).\nThe size is calculated only once and then cached in this.props.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23320,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23322,
            "description": "'use strict';\nvar keycharm = __webpack_require__(43);\n  var Emitter = __webpack_require__(12);\n  var Hammer = __webpack_require__(22);\n  var util = __webpack_require__(1);\n/**\n   * Turn an element into an clickToUse element.\n   * When not active, the element has a transparent overlay. When the overlay is\n   * clicked, the mode is changed to active.\n   * When active, the element is displayed with a blue border around it, and\n   * the interactive contents of the element can be used. When clicked outside\n   * the element, the elements mode is changed to inactive.\n   * @param {Element} container\n   * @constructor",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23390,
            "description": "Destroy the activator. Cleans up all created DOM and event listeners",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23410,
            "description": "Activate the element\nOverlay is hidden, element is decorated with a blue shadow border",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23433,
            "description": "Deactivate the element\nOverlay is displayed on top of the element",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23447,
            "description": "Handle a tap event: activate the container",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23458,
            "description": "Test whether the element has the requested parent element somewhere in\nits chain of parent nodes.",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "parent",
                    "description": "",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "Returns true when the parent is found somewhere in the\n                   chain of parent nodes.",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23479,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23481,
            "description": "var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n  /**\n   * Created by Alex on 11/6/2014.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23678,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23680,
            "description": "'use strict';\nvar Hammer = __webpack_require__(22);\n  var util = __webpack_require__(1);\n  var Component = __webpack_require__(28);\n  var moment = __webpack_require__(2);\n  var locales = __webpack_require__(45);\n/**\n   * A custom time bar\n   * @param {{range: Range, dom: Object}} body\n   * @param {Object} [options]        Available parameters:\n   *                                  {number | string} id\n   *                                  {string} locales\n   *                                  {string} locale\n   * @constructor CustomTime\n   * @extends Component",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23730,
            "description": "Set options for the component. Options will be merged in current options.",
            "params": [
                {
                    "name": "options",
                    "description": "Available parameters:\n                                 {number | string} id\n                                 {string} locales\n                                 {string} locale",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23744,
            "description": "Create the DOM for the custom time",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23773,
            "description": "Destroy the CustomTime bar",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23785,
            "description": "Repaint the component",
            "return": {
                "description": "Returns true if the component is resized",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23823,
            "description": "Remove the CustomTime from the DOM",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23833,
            "description": "Set custom time.",
            "params": [
                {
                    "name": "time",
                    "description": "",
                    "type": "Date | number | string"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23842,
            "description": "Retrieve the current custom time.",
            "return": {
                "description": "customTime",
                "type": "Date"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23850,
            "description": "Set custom title.",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "Date | number | string"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23858,
            "description": "Start moving horizontally",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23870,
            "description": "Perform moving operating.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23892,
            "description": "Stop moving operating.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23909,
            "description": "Find a custom time from an event target:\nsearches for the attribute 'custom-time' in the event target's element tree",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "customTime",
                "type": "CustomTime | null"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23929,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23931,
            "description": "'use strict';\n// English\n  exports['en'] = {\n    current: 'current',\n    time: 'time'\n  };\n  exports['en_EN'] = exports['en'];\n  exports['en_US'] = exports['en'];\n// Dutch\n  exports['nl'] = {\n    current: 'huidige',\n    time: 'tijd'\n  };\n  exports['nl_NL'] = exports['nl'];\n  exports['nl_BE'] = exports['nl'];\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23953,
            "description": "'use strict';\nvar util = __webpack_require__(1);\n  var Component = __webpack_require__(28);\n  var moment = __webpack_require__(2);\n  var locales = __webpack_require__(45);\n/**\n   * A current time bar\n   * @param {{range: Range, dom: Object, domProps: Object}} body\n   * @param {Object} [options]        Available parameters:\n   *                                  {Boolean} [showCurrentTime]\n   * @constructor CurrentTime\n   * @extends Component",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 23991,
            "description": "Create the HTML DOM for the current time bar",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24005,
            "description": "Destroy the CurrentTime bar",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24015,
            "description": "Set options for the component. Options will be merged in current options.",
            "params": [
                {
                    "name": "options",
                    "description": "Available parameters:\n                         {boolean} [showCurrentTime]",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24027,
            "description": "Repaint the component",
            "return": {
                "description": "Returns true if the component is resized",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24071,
            "description": "Start auto refreshing the current time bar",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24096,
            "description": "Stop auto refreshing the current time bar",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24106,
            "description": "Set a current time. This can be used for example to ensure that a client's\ntime is synchronized with a shared server time.",
            "params": [
                {
                    "name": "time",
                    "description": "A Date, unix timestamp, or\n                                         ISO date string.",
                    "type": "Date | String | Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24119,
            "description": "Get the current time.",
            "return": {
                "description": "Returns the current time.",
                "type": "Date"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24129,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24131,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * This object contains all possible options. It will check if the types are correct, if required if the option is one\n   * of the allowed values.\n   *\n   * __any__ means that the name of the property does not matter.\n   * __type__ is a required field for all objects and contains the allowed types of all objects",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24370,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24372,
            "description": "'use strict';\nvar _Configurator = __webpack_require__(20);\nvar _Configurator2 = _interopRequireDefault(_Configurator);\nvar _Validator = __webpack_require__(26);\nvar _Validator2 = _interopRequireDefault(_Validator);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar Emitter = __webpack_require__(12);\n  var Hammer = __webpack_require__(22);\n  var moment = __webpack_require__(2);\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\n  var Range = __webpack_require__(27);\n  var Core = __webpack_require__(30);\n  var TimeAxis = __webpack_require__(41);\n  var CurrentTime = __webpack_require__(46);\n  var CustomTime = __webpack_require__(44);\n  var LineGraph = __webpack_require__(49);\nvar printStyle = __webpack_require__(26).printStyle;\n  var allOptions = __webpack_require__(57).allOptions;\n  var configureOptions = __webpack_require__(57).configureOptions;\n/**\n   * Create a timeline visualization\n   * @param {HTMLElement} container\n   * @param {vis.DataSet | Array} [items]\n   * @param {Object} [options]  See Graph2d.setOptions for the available options.\n   * @constructor\n   * @extends Core",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24527,
            "description": "Set items",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "vis.DataSet | Array | null"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24565,
            "description": "Set groups",
            "params": [
                {
                    "name": "groups",
                    "description": "",
                    "type": "vis.DataSet | Array"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24585,
            "description": "Returns an object containing an SVG element with the icon of the group (size determined by iconWidth and iconHeight), the label of the group (content) and the yAxisOrientation of the group (left or right).",
            "params": [
                {
                    "name": "groupId",
                    "description": ""
                },
                {
                    "name": "width",
                    "description": ""
                },
                {
                    "name": "height",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24605,
            "description": "This checks if the visible option of the supplied group (by ID) is true or false.",
            "params": [
                {
                    "name": "groupId",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24618,
            "description": "Get the data range of the item set.",
            "return": {
                "description": "} range  A range with a start and end Date.\n                                         When no minimum is found, min==null\n                                         When no maximum is found, max==null",
                "type": "Min: Date, max: Date"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24648,
            "description": "Generate Timeline related information from an event",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "An object with related information, like on which area\n                 The event happened, whether clicked on an item, etc.",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24707,
            "description": "Load a configurator",
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24718,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24720,
            "description": "'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar util = __webpack_require__(1);\n  var DOMutil = __webpack_require__(7);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\n  var Component = __webpack_require__(28);\n  var DataAxis = __webpack_require__(50);\n  var GraphGroup = __webpack_require__(52);\n  var Legend = __webpack_require__(56);\n  var Bars = __webpack_require__(53);\n  var Lines = __webpack_require__(55);\n  var Points = __webpack_require__(54);\nvar UNGROUPED = '__ungrouped__'; // reserved group id for ungrouped items\n/**\n   * This is the constructor of the LineGraph. It requires a Timeline body and options.\n   *\n   * @param body\n   * @param options\n   * @constructor",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24850,
            "description": "Create the HTML DOM for the ItemSet",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24880,
            "description": "set the options of the LineGraph. the mergeOptions is used for subObjects that have an enabled element.",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24943,
            "description": "Hide the component from the DOM",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24953,
            "description": "Show the component in the DOM (when not already visible).",
            "return": {
                "description": "changed",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 24964,
            "description": "Set items",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "vis.DataSet | null"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25006,
            "description": "Set groups",
            "params": [
                {
                    "name": "groups",
                    "description": "",
                    "type": "vis.DataSet"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25066,
            "description": "this cleans the group out off the legends and the dataaxis, updates the ungrouped and updates the graph",
            "params": [
                {
                    "name": "groupIds",
                    "description": "",
                    "type": "Array"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25079,
            "description": "this cleans the group out off the legends and the dataaxis",
            "params": [
                {
                    "name": "groupId",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25099,
            "description": "update a group object with the group dataset entree",
            "params": [
                {
                    "name": "group",
                    "description": ""
                },
                {
                    "name": "groupId",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25136,
            "description": "this updates all groups, it is used when there is an update the the itemset.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25209,
            "description": "Redraw the component, mandatory function",
            "return": {
                "description": "Returns true if the component is resized",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25297,
            "description": "Update and redraw the graph.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25473,
            "description": "first select and preprocess the data from the datasets.\nthe groups have their preselection of data, we now loop over this data to see\nwhat data we need to draw. Sorted data is much faster.\nmore optimization is possible by doing the sampling before and using the binary search\nto find the end date to determine the increment.",
            "params": [
                {
                    "name": "groupIds",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "groupsData",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "minDate",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "maxDate",
                    "description": "",
                    "type": "Date"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25516,
            "params": [
                {
                    "name": "groupIds",
                    "description": ""
                },
                {
                    "name": "groupsData",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25551,
            "params": [
                {
                    "name": "groupIds",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "groupsData",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "groupRanges",
                    "description": "| this is being filled here",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25589,
            "description": "this sets the Y ranges for the Y axis. It also determines which of the axis should be shown or hidden.",
            "params": [
                {
                    "name": "groupIds",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "groupRanges",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25685,
            "description": "This shows or hides the Y axis if needed. If there is a change, the changed event is emitted by the updateYAxis function",
            "params": [
                {
                    "name": "axisUsed",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "axis",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25709,
            "description": "This uses the DataAxis object to generate the correct X coordinate on the SVG window. It uses the\nutil function toScreen to get the x coordinate from the timestamp. It also pre-filters the data and get the minMax ranges for\nthe yAxis.",
            "params": [
                {
                    "name": "datapoints",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25726,
            "description": "This uses the DataAxis object to generate the correct X coordinate on the SVG window. It uses the\nutil function toScreen to get the x coordinate from the timestamp. It also pre-filters the data and get the minMax ranges for\nthe yAxis.",
            "params": [
                {
                    "name": "datapoints",
                    "description": ""
                },
                {
                    "name": "group",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25750,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25752,
            "description": "'use strict';\nvar util = __webpack_require__(1);\n  var DOMutil = __webpack_require__(7);\n  var Component = __webpack_require__(28);\n  var DataScale = __webpack_require__(51);\n  /**\n   * A horizontal time axis\n   * @param {Object} [options]        See DataAxis.setOptions for the available\n   *                                  options.\n   * @constructor DataAxis\n   * @extends Component\n   * @param body",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25886,
            "description": "Create the HTML DOM for the DataAxis",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25949,
            "description": "Create the HTML DOM for the DataAxis",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25967,
            "description": "Create the HTML DOM for the DataAxis",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25981,
            "description": "Set a range (start and end)",
            "params": [
                {
                    "name": "end",
                    "description": ""
                },
                {
                    "name": "start",
                    "description": ""
                },
                {
                    "name": "end",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 25992,
            "description": "Repaint the component",
            "return": {
                "description": "Returns true if the component is resized",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26076,
            "description": "Repaint major and minor text labels and vertical grid lines",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26172,
            "description": "Create a label for the axis at position x",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "text",
                    "description": ""
                },
                {
                    "name": "orientation",
                    "description": ""
                },
                {
                    "name": "className",
                    "description": ""
                },
                {
                    "name": "characterHeight",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26204,
            "description": "Create a minor line for the axis at position y",
            "params": [
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "orientation",
                    "description": ""
                },
                {
                    "name": "className",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                },
                {
                    "name": "width",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26229,
            "description": "Create a title for the axis",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "orientation",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26261,
            "description": "Determine the size of text on the axis (both major and minor axis).\nThe size is calculated only once and then cached in this.props.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26310,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26312,
            "description": "'use strict';\n/**\n   * Created by ludo on 25-1-16.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26552,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26554,
            "description": "'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar util = __webpack_require__(1);\n  var DOMutil = __webpack_require__(7);\n  var Bars = __webpack_require__(53);\n  var Lines = __webpack_require__(55);\n  var Points = __webpack_require__(54);\n/**\n   * /**\n   * @param {object} group            | the object of the group from the dataset\n   * @param {string} groupId          | ID of the group\n   * @param {object} options          | the default options\n   * @param {array} groupsUsingDefaultStyles  | this array has one entree.\n   *                                            It is passed as an array so it is passed by reference.\n   *                                            It enumerates through the default styles\n   * @constructor",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26591,
            "description": "this loads a reference to all items in this group into this group.",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26612,
            "description": "this is used for barcharts and shading, this way, we only have to calculate it once.",
            "params": [
                {
                    "name": "pos",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26620,
            "description": "set the options of the graph group over the default options.",
            "params": [
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26657,
            "description": "this updates the current group class with the latest group dataset entree, used in _updateGroup in linegraph",
            "params": [
                {
                    "name": "group",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26670,
            "description": "return the legend entree for this group.",
            "params": [
                {
                    "name": "iconWidth",
                    "description": ""
                },
                {
                    "name": "iconHeight",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "{icon: HTMLElement, label: (group.content|*|string), orientation: (.options.yAxisOrientation|*)"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26715,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26717,
            "description": "'use strict';\nvar DOMutil = __webpack_require__(7);\n  var Points = __webpack_require__(54);\nfunction Bargraph(groupId, options) {}\nBargraph.drawIcon = function (group, x, y, iconWidth, iconHeight, framework) {\n    var fillHeight = iconHeight * 0.5;\n    var path, fillPath;\n  var outline = DOMutil.getSVGElement(\"rect\", framework.svgElements, framework.svg);\n    outline.setAttributeNS(null, \"x\", x);\n    outline.setAttributeNS(null, \"y\", y - fillHeight);\n    outline.setAttributeNS(null, \"width\", iconWidth);\n    outline.setAttributeNS(null, \"height\", 2 * fillHeight);\n    outline.setAttributeNS(null, \"class\", \"vis-outline\");\n  var barWidth = Math.round(0.3 * iconWidth);\n    var originalWidth = group.options.barChart.width;\n    var scale = originalWidth / barWidth;\n    var bar1Height = Math.round(0.4 * iconHeight);\n    var bar2Height = Math.round(0.75 * iconHeight);\n  var offset = Math.round((iconWidth - 2 * barWidth) / 3);\n  DOMutil.drawBar(x + 0.5 * barWidth + offset, y + fillHeight - bar1Height - 1, barWidth, bar1Height, group.className + ' vis-bar', framework.svgElements, framework.svg, group.style);\n    DOMutil.drawBar(x + 1.5 * barWidth + offset + 2, y + fillHeight - bar2Height - 1, barWidth, bar2Height, group.className + ' vis-bar', framework.svgElements, framework.svg, group.style);\n  if (group.options.drawPoints.enabled == true) {\n      var groupTemplate = {\n        style: group.options.drawPoints.style,\n        styles: group.options.drawPoints.styles,\n        size: group.options.drawPoints.size / scale,\n        className: group.className\n      };\n      DOMutil.drawPoint(x + 0.5 * barWidth + offset, y + fillHeight - bar1Height - 1, groupTemplate, framework.svgElements, framework.svg);\n      DOMutil.drawPoint(x + 1.5 * barWidth + offset + 2, y + fillHeight - bar2Height - 1, groupTemplate, framework.svgElements, framework.svg);\n    }\n  };\n/**\n   * draw a bar graph\n   *\n   * @param groupIds\n   * @param processedGroupData",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26862,
            "description": "Fill the intersections object with counters of how many datapoints share the same x coordinates",
            "params": [
                {
                    "name": "intersections",
                    "description": ""
                },
                {
                    "name": "combinedData",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26892,
            "description": "Get the width and offset for bargraphs based on the coredistance between datapoints",
            "params": [
                {
                    "name": "coreDistance",
                    "description": ""
                },
                {
                    "name": "group",
                    "description": ""
                },
                {
                    "name": "minWidth",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "Width: Number, offset: Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26976,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 26978,
            "description": "'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar DOMutil = __webpack_require__(7);\nfunction Points(groupId, options) {}\n/**\n   * draw the data points\n   *\n   * @param {Array} dataset\n   * @param {Object} JSONcontainer\n   * @param {Object} svg            | SVG DOM element\n   * @param {GraphGroup} group\n   * @param {Number} [offset]",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 27055,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 27057,
            "description": "\"use strict\";\nvar DOMutil = __webpack_require__(7);\nfunction Line(groupId, options) {}\nLine.calcPath = function (dataset, group) {\n      if (dataset != null) {\n          if (dataset.length > 0) {\n              var d = [];\n            // construct path from dataset\n              if (group.options.interpolation.enabled == true) {\n                  d = Line._catmullRom(dataset, group);\n              } else {\n                  d = Line._linear(dataset);\n              }\n              return d;\n          }\n      }\n  };\nLine.drawIcon = function (group, x, y, iconWidth, iconHeight, framework) {\n      var fillHeight = iconHeight * 0.5;\n      var path, fillPath;\n    var outline = DOMutil.getSVGElement(\"rect\", framework.svgElements, framework.svg);\n      outline.setAttributeNS(null, \"x\", x);\n      outline.setAttributeNS(null, \"y\", y - fillHeight);\n      outline.setAttributeNS(null, \"width\", iconWidth);\n      outline.setAttributeNS(null, \"height\", 2 * fillHeight);\n      outline.setAttributeNS(null, \"class\", \"vis-outline\");\n    path = DOMutil.getSVGElement(\"path\", framework.svgElements, framework.svg);\n      path.setAttributeNS(null, \"class\", group.className);\n      if (group.style !== undefined) {\n          path.setAttributeNS(null, \"style\", group.style);\n      }\n    path.setAttributeNS(null, \"d\", \"M\" + x + \",\" + y + \" L\" + (x + iconWidth) + \",\" + y + \"\");\n      if (group.options.shaded.enabled == true) {\n          fillPath = DOMutil.getSVGElement(\"path\", framework.svgElements, framework.svg);\n          if (group.options.shaded.orientation == 'top') {\n              fillPath.setAttributeNS(null, \"d\", \"M\" + x + \", \" + (y - fillHeight) + \"L\" + x + \",\" + y + \" L\" + (x + iconWidth) + \",\" + y + \" L\" + (x + iconWidth) + \",\" + (y - fillHeight));\n          } else {\n              fillPath.setAttributeNS(null, \"d\", \"M\" + x + \",\" + y + \" \" + \"L\" + x + \",\" + (y + fillHeight) + \" \" + \"L\" + (x + iconWidth) + \",\" + (y + fillHeight) + \"L\" + (x + iconWidth) + \",\" + y);\n          }\n          fillPath.setAttributeNS(null, \"class\", group.className + \" vis-icon-fill\");\n          if (group.options.shaded.style !== undefined && group.options.shaded.style !== \"\") {\n              fillPath.setAttributeNS(null, \"style\", group.options.shaded.style);\n          }\n      }\n    if (group.options.drawPoints.enabled == true) {\n          var groupTemplate = {\n              style: group.options.drawPoints.style,\n              styles: group.options.drawPoints.styles,\n              size: group.options.drawPoints.size,\n              className: group.className\n          };\n          DOMutil.drawPoint(x + 0.5 * iconWidth, y, groupTemplate, framework.svgElements, framework.svg);\n      }\n  };\nLine.drawShading = function (pathArray, group, subPathArray, framework) {\n      // append shading to the path\n      if (group.options.shaded.enabled == true) {\n          var svgHeight = Number(framework.svg.style.height.replace('px', ''));\n          var fillPath = DOMutil.getSVGElement('path', framework.svgElements, framework.svg);\n          var type = \"L\";\n          if (group.options.interpolation.enabled == true) {\n              type = \"C\";\n          }\n          var dFill;\n          var zero = 0;\n          if (group.options.shaded.orientation == 'top') {\n              zero = 0;\n          } else if (group.options.shaded.orientation == 'bottom') {\n              zero = svgHeight;\n          } else {\n              zero = Math.min(Math.max(0, group.zeroPosition), svgHeight);\n          }\n          if (group.options.shaded.orientation == 'group' && subPathArray != null && subPathArray != undefined) {\n              dFill = 'M' + pathArray[0][0] + \",\" + pathArray[0][1] + \" \" + this.serializePath(pathArray, type, false) + ' L' + subPathArray[subPathArray.length - 1][0] + \",\" + subPathArray[subPathArray.length - 1][1] + \" \" + this.serializePath(subPathArray, type, true) + subPathArray[0][0] + \",\" + subPathArray[0][1] + \" Z\";\n          } else {\n              dFill = 'M' + pathArray[0][0] + \",\" + pathArray[0][1] + \" \" + this.serializePath(pathArray, type, false) + ' V' + zero + ' H' + pathArray[0][0] + \" Z\";\n          }\n        fillPath.setAttributeNS(null, 'class', group.className + ' vis-fill');\n          if (group.options.shaded.style !== undefined) {\n              fillPath.setAttributeNS(null, 'style', group.options.shaded.style);\n          }\n          fillPath.setAttributeNS(null, 'd', dFill);\n      }\n  };\n/**\n   * draw a line graph\n   *\n   * @param dataset\n   * @param group",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 27196,
            "description": "This uses an uniform parametrization of the interpolation algorithm:\n'On the Parameterization of Catmull-Rom Curves' by Cem Yuksel et al.",
            "params": [
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 27242,
            "description": "This uses either the chordal or centripetal parameterization of the catmull-rom algorithm.\nBy default, the centripetal parameterization is used because this gives the nicest results.\nThese parameterizations are relatively heavy because the distance between 4 points have to be calculated.\n\nOne optimization can be used to reuse distances since this is a sliding window approach.",
            "params": [
                {
                    "name": "data",
                    "description": ""
                },
                {
                    "name": "group",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 27327,
            "description": "this generates the SVG path for a linear drawing between datapoints.",
            "params": [
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 27344,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 27346,
            "description": "'use strict';\nvar util = __webpack_require__(1);\n  var DOMutil = __webpack_require__(7);\n  var Component = __webpack_require__(28);\n/**\n   * Legend for Graph2d",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 27439,
            "description": "Hide the component from the DOM",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 27449,
            "description": "Show the component in the DOM (when not already visible).",
            "return": {
                "description": "changed",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 27563,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 27565,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * This object contains all possible options. It will check if the types are correct, if required if the option is one\n   * of the allowed values.\n   *\n   * __any__ means that the name of the property does not matter.\n   * __type__ is a required field for all objects and contains the allowed types of all objects",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 27849,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 27851,
            "description": "'use strict';\nvar _Images = __webpack_require__(59);\nvar _Images2 = _interopRequireDefault(_Images);\nvar _Groups = __webpack_require__(60);\nvar _Groups2 = _interopRequireDefault(_Groups);\nvar _NodesHandler = __webpack_require__(61);\nvar _NodesHandler2 = _interopRequireDefault(_NodesHandler);\nvar _EdgesHandler = __webpack_require__(81);\nvar _EdgesHandler2 = _interopRequireDefault(_EdgesHandler);\nvar _PhysicsEngine = __webpack_require__(90);\nvar _PhysicsEngine2 = _interopRequireDefault(_PhysicsEngine);\nvar _Clustering = __webpack_require__(99);\nvar _Clustering2 = _interopRequireDefault(_Clustering);\nvar _CanvasRenderer = __webpack_require__(102);\nvar _CanvasRenderer2 = _interopRequireDefault(_CanvasRenderer);\nvar _Canvas = __webpack_require__(103);\nvar _Canvas2 = _interopRequireDefault(_Canvas);\nvar _View = __webpack_require__(104);\nvar _View2 = _interopRequireDefault(_View);\nvar _InteractionHandler = __webpack_require__(105);\nvar _InteractionHandler2 = _interopRequireDefault(_InteractionHandler);\nvar _SelectionHandler = __webpack_require__(108);\nvar _SelectionHandler2 = _interopRequireDefault(_SelectionHandler);\nvar _LayoutEngine = __webpack_require__(109);\nvar _LayoutEngine2 = _interopRequireDefault(_LayoutEngine);\nvar _ManipulationSystem = __webpack_require__(110);\nvar _ManipulationSystem2 = _interopRequireDefault(_ManipulationSystem);\nvar _Configurator = __webpack_require__(20);\nvar _Configurator2 = _interopRequireDefault(_Configurator);\nvar _Validator = __webpack_require__(26);\nvar _Validator2 = _interopRequireDefault(_Validator);\nvar _options = __webpack_require__(111);\nvar _KamadaKawai = __webpack_require__(112);\nvar _KamadaKawai2 = _interopRequireDefault(_KamadaKawai);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// Load custom shapes into CanvasRenderingContext2D\n  __webpack_require__(114);\nvar Emitter = __webpack_require__(12);\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\n  var dotparser = __webpack_require__(115);\n  var gephiParser = __webpack_require__(116);\n  var Activator = __webpack_require__(42);\n  var locales = __webpack_require__(117);\n/**\n   * @constructor Network\n   * Create a network visualization, displaying nodes and edges.\n   *\n   * @param {Element} container   The DOM element in which the Network will\n   *                                  be created. Normally a div element.\n   * @param {Object} data         An object containing parameters\n   *                              {Array} nodes\n   *                              {Array} edges\n   * @param {Object} options      Options",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28042,
            "description": "Set options",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28138,
            "description": "Update the this.body.nodeIndices with the most recent node index list",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28165,
            "description": "Bind all events",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28191,
            "description": "Set nodes and edges, and optionally options as well.",
            "params": [
                {
                    "name": "data",
                    "description": "Object containing parameters:\n                                  {Array | DataSet | DataView} [nodes] Array with nodes\n                                  {Array | DataSet | DataView} [edges] Array with edges\n                                  {String} [dot] String containing data in DOT format\n                                  {String} [gephi] String containing data in gephi JSON format\n                                  {Options} [options] Object with options",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28243,
            "description": "Cleans up all bindings of the network, removing it fully from the memory IF the variable is set to null after calling this function.\nvar network = new vis.Network(..);\nnetwork.destroy();\nnetwork = null;",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28282,
            "description": "Update the values of all object in the given array according to the current\nvalue range of the objects in the array.",
            "params": [
                {
                    "name": "obj",
                    "description": "An object containing a set of Edges or Nodes\n                       The objects must have a method getValue() and\n                       setValueRange(min, max).",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28318,
            "description": "Returns true when the Network is active.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28484,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28486,
            "description": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n      value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n   * @class Images\n   * This class loads images and keeps them stored.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28512,
            "params": [
                {
                    "name": "url",
                    "description": "The Url to cache the image as",
                    "type": "String"
                }
            ],
            "return": {
                "description": "imageToLoadBrokenUrlOn  The image object",
                "type": "Image"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28532,
            "params": [
                {
                    "name": "url",
                    "description": "The original Url that failed to load, if the broken image is successfully loaded it will be added to the cache using this Url as the key so that subsequent requests for this Url will return the broken image",
                    "type": "String"
                },
                {
                    "name": "brokenUrl",
                    "description": "Url the broken image to try and load",
                    "type": "String"
                }
            ],
            "return": {
                "description": "imageToLoadBrokenUrlOn   The image object",
                "type": "Image"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28557,
            "return": {
                "description": "imageToRedrawWith The images that will be passed to the callback when it is invoked",
                "type": "Image"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28569,
            "params": [
                {
                    "name": "url",
                    "description": "Url of the image",
                    "type": "String"
                },
                {
                    "name": "brokenUrl",
                    "description": "Url of an image to use if the url image is not found",
                    "type": "String"
                }
            ],
            "return": {
                "description": "img          The image object",
                "type": "Image"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28614,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28616,
            "description": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\n/**\n   * @class Groups\n   * This class can store groups and options specific for groups.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28693,
            "description": "Clear all groups",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28704,
            "description": "get group options of a groupname. If groupname is not found, a new group\nis added.",
            "params": [
                {
                    "name": "groupname",
                    "description": "Can be a number, string, Date, etc.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "group      The created group, containing all group options",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28736,
            "description": "Add a custom group style",
            "params": [
                {
                    "name": "groupName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "style",
                    "description": "An object containing borderColor,\n                            backgroundColor, etc.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "group      The created group object",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28758,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 28760,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _Node = __webpack_require__(62);\nvar _Node2 = _interopRequireDefault(_Node);\nvar _Label = __webpack_require__(63);\nvar _Label2 = _interopRequireDefault(_Label);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\nvar NodesHandler = function () {\n    function NodesHandler(body, images, groups, layoutEngine) {\n      var _this = this;\n    _classCallCheck(this, NodesHandler);\n    this.body = body;\n      this.images = images;\n      this.groups = groups;\n      this.layoutEngine = layoutEngine;\n    // create the node API in the body container\n      this.body.functions.createNode = this.create.bind(this);\n    this.nodesListeners = {\n        add: function add(event, params) {\n          _this.add(params.items);\n        },\n        update: function update(event, params) {\n          _this.update(params.items, params.data);\n        },\n        remove: function remove(event, params) {\n          _this.remove(params.items);\n        }\n      };\n    this.options = {};\n      this.defaultOptions = {\n        borderWidth: 1,\n        borderWidthSelected: 2,\n        brokenImage: undefined,\n        color: {\n          border: '#2B7CE9',\n          background: '#97C2FC',\n          highlight: {\n            border: '#2B7CE9',\n            background: '#D2E5FF'\n          },\n          hover: {\n            border: '#2B7CE9',\n            background: '#D2E5FF'\n          }\n        },\n        fixed: {\n          x: false,\n          y: false\n        },\n        font: {\n          color: '#343434',\n          size: 14, // px\n          face: 'arial',\n          background: 'none',\n          strokeWidth: 0, // px\n          strokeColor: '#ffffff',\n          align: 'center'\n        },\n        group: undefined,\n        hidden: false,\n        icon: {\n          face: 'FontAwesome', //'FontAwesome',\n          code: undefined, //'\\uf007',\n          size: 50, //50,\n          color: '#2B7CE9' //'#aa00ff'\n        },\n        image: undefined, // --> URL\n        label: undefined,\n        labelHighlightBold: true,\n        level: undefined,\n        mass: 1,\n        physics: true,\n        scaling: {\n          min: 10,\n          max: 30,\n          label: {\n            enabled: false,\n            min: 14,\n            max: 30,\n            maxVisible: 30,\n            drawThreshold: 5\n          },\n          customScalingFunction: function customScalingFunction(min, max, total, value) {\n            if (max === min) {\n              return 0.5;\n            } else {\n              var scale = 1 / (max - min);\n              return Math.max(0, (value - min) * scale);\n            }\n          }\n        },\n        shadow: {\n          enabled: false,\n          color: 'rgba(0,0,0,0.5)',\n          size: 10,\n          x: 5,\n          y: 5\n        },\n        shape: 'ellipse',\n        shapeProperties: {\n          borderDashes: false, // only for borders\n          borderRadius: 6, // only for box shape\n          interpolation: true, // only for image and circularImage shapes\n          useImageSize: false, // only for image and circularImage shapes\n          useBorderWithImage: false // only for image shape\n        },\n        size: 25,\n        title: undefined,\n        value: undefined,\n        x: undefined,\n        y: undefined\n      };\n      util.extend(this.options, this.defaultOptions);\n    this.bindEventListeners();\n    }\n  _createClass(NodesHandler, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this2 = this;\n      // refresh the nodes. Used when reverting from hierarchical layout\n        this.body.emitter.on('refreshNodes', this.refresh.bind(this));\n        this.body.emitter.on('refresh', this.refresh.bind(this));\n        this.body.emitter.on('destroy', function () {\n          util.forEach(_this2.nodesListeners, function (callback, event) {\n            if (_this2.body.data.nodes) _this2.body.data.nodes.off(event, callback);\n          });\n          delete _this2.body.functions.createNode;\n          delete _this2.nodesListeners.add;\n          delete _this2.nodesListeners.update;\n          delete _this2.nodesListeners.remove;\n          delete _this2.nodesListeners;\n        });\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          _Node2.default.parseOptions(this.options, options);\n        // update the shape in all nodes\n          if (options.shape !== undefined) {\n            for (var nodeId in this.body.nodes) {\n              if (this.body.nodes.hasOwnProperty(nodeId)) {\n                this.body.nodes[nodeId].updateShape();\n              }\n            }\n          }\n        // update the font in all nodes\n          if (options.font !== undefined) {\n            _Label2.default.parseOptions(this.options.font, options);\n            for (var _nodeId in this.body.nodes) {\n              if (this.body.nodes.hasOwnProperty(_nodeId)) {\n                this.body.nodes[_nodeId].updateLabelModule();\n                this.body.nodes[_nodeId]._reset();\n              }\n            }\n          }\n        // update the shape size in all nodes\n          if (options.size !== undefined) {\n            for (var _nodeId2 in this.body.nodes) {\n              if (this.body.nodes.hasOwnProperty(_nodeId2)) {\n                this.body.nodes[_nodeId2]._reset();\n              }\n            }\n          }\n        // update the state of the letiables if needed\n          if (options.hidden !== undefined || options.physics !== undefined) {\n            this.body.emitter.emit('_dataChanged');\n          }\n        }\n      }\n    /**\n       * Set a data set with nodes for the network\n       * @param {Array | DataSet | DataView} nodes         The data containing the nodes.\n       * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29017,
            "description": "Add nodes",
            "params": [
                {
                    "name": "ids",
                    "description": "",
                    "type": "Number[] | String[]"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29045,
            "description": "Update existing nodes, or create them when not yet existing",
            "params": [
                {
                    "name": "ids",
                    "description": "",
                    "type": "Number[] | String[]"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29077,
            "description": "Remove existing nodes. If nodes do not exist, the method will just ignore it.",
            "params": [
                {
                    "name": "ids",
                    "description": "",
                    "type": "Number[] | String[]"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29096,
            "description": "create a node",
            "params": [
                {
                    "name": "properties",
                    "description": ""
                },
                {
                    "name": "constructorClass",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29131,
            "description": "Returns the positions of the nodes.",
            "params": [
                {
                    "name": "ids",
                    "description": "--> optional, can be array of nodeIds, can be string"
                }
            ],
            "return": {
                "description": "}"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29164,
            "description": "Load the XY positions of the nodes into the dataset.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29186,
            "description": "get the bounding box of a node.",
            "params": [
                {
                    "name": "nodeId",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "J|*"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29200,
            "description": "Get the Ids of nodes connected to this node.",
            "params": [
                {
                    "name": "nodeId",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29233,
            "description": "Get the ids of the edges connected to this node.",
            "params": [
                {
                    "name": "nodeId",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29254,
            "description": "Move a node.",
            "params": [
                {
                    "name": "String",
                    "description": "nodeId"
                },
                {
                    "name": "Number",
                    "description": "x"
                },
                {
                    "name": "Number",
                    "description": "y"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29283,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29285,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _Label = __webpack_require__(63);\nvar _Label2 = _interopRequireDefault(_Label);\nvar _Box = __webpack_require__(64);\nvar _Box2 = _interopRequireDefault(_Box);\nvar _Circle = __webpack_require__(66);\nvar _Circle2 = _interopRequireDefault(_Circle);\nvar _CircularImage = __webpack_require__(68);\nvar _CircularImage2 = _interopRequireDefault(_CircularImage);\nvar _Database = __webpack_require__(69);\nvar _Database2 = _interopRequireDefault(_Database);\nvar _Diamond = __webpack_require__(70);\nvar _Diamond2 = _interopRequireDefault(_Diamond);\nvar _Dot = __webpack_require__(72);\nvar _Dot2 = _interopRequireDefault(_Dot);\nvar _Ellipse = __webpack_require__(73);\nvar _Ellipse2 = _interopRequireDefault(_Ellipse);\nvar _Icon = __webpack_require__(74);\nvar _Icon2 = _interopRequireDefault(_Icon);\nvar _Image = __webpack_require__(75);\nvar _Image2 = _interopRequireDefault(_Image);\nvar _Square = __webpack_require__(76);\nvar _Square2 = _interopRequireDefault(_Square);\nvar _Star = __webpack_require__(77);\nvar _Star2 = _interopRequireDefault(_Star);\nvar _Text = __webpack_require__(78);\nvar _Text2 = _interopRequireDefault(_Text);\nvar _Triangle = __webpack_require__(79);\nvar _Triangle2 = _interopRequireDefault(_Triangle);\nvar _TriangleDown = __webpack_require__(80);\nvar _TriangleDown2 = _interopRequireDefault(_TriangleDown);\nvar _Validator = __webpack_require__(26);\nvar _Validator2 = _interopRequireDefault(_Validator);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\n/**\n   * @class Node\n   * A node. A node can be connected to other nodes via one or multiple edges.\n   * @param {object} options An object containing options for the node. All\n   *                            options are optional, except for the id.\n   *                              {number} id     Id of the node. Required\n   *                              {string} label  Text label for the node\n   *                              {number} x      Horizontal position of the node\n   *                              {number} y      Vertical position of the node\n   *                              {string} shape  Node shape, available:\n   *                                              \"database\", \"circle\", \"ellipse\",\n   *                                              \"box\", \"image\", \"text\", \"dot\",\n   *                                              \"star\", \"triangle\", \"triangleDown\",\n   *                                              \"square\", \"icon\"\n   *                              {string} image  An image url\n   *                              {string} title  An title text, can be HTML\n   *                              {anytype} group A group name or number\n   * @param {Network.Images} imagelist    A list with images. Only needed\n   *                                            when the node has an image\n   * @param {Network.Groups} grouplist    A list with groups. Needed for\n   *                                            retrieving group options\n   * @param {Object}               constants    An object with default values for\n   *                                            example for the color\n   *",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29419,
            "description": "Attach a edge to the node",
            "params": [
                {
                    "name": "edge",
                    "description": "",
                    "type": "Edge"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29433,
            "description": "Detach a edge from the node",
            "params": [
                {
                    "name": "edge",
                    "description": "",
                    "type": "Edge"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29447,
            "description": "Set or overwrite options for the node",
            "params": [
                {
                    "name": "options",
                    "description": "an object with options",
                    "type": "Object"
                },
                {
                    "name": "constants",
                    "description": "and object with default, global options",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29521,
            "description": "This process all possible shorthands in the new options and makes sure that the parentOptions are fully defined.\nStatic so it can also be used by the handler.",
            "params": [
                {
                    "name": "parentOptions",
                    "description": ""
                },
                {
                    "name": "newOptions",
                    "description": ""
                },
                {
                    "name": "allowDeletion",
                    "description": ""
                },
                {
                    "name": "globalOptions",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29599,
            "description": "select this node",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29610,
            "description": "unselect this node",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29621,
            "description": "Reset the calculated size of the node, forces it to recalculate its size",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29633,
            "description": "get the title of this node.",
            "return": {
                "description": "title    The title of the node, or undefined when no title\n                          has been set.",
                "type": "String"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29645,
            "description": "Calculate the distance to the border of the Node",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "angle",
                    "description": "Angle in radians",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "distance   Distance to the border in pixels",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29658,
            "description": "Check if this node has a fixed x and y position",
            "return": {
                "description": "true if fixed, false if not",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29669,
            "description": "check if this node is selecte",
            "return": {
                "description": "selected   True if node is selected, else false",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29680,
            "description": "Retrieve the value of the node. Can be undefined",
            "return": {
                "description": "value",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29691,
            "description": "Adjust the value range of the node. The node will adjust it's size\nbased on its value.",
            "params": [
                {
                    "name": "min",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29717,
            "description": "Draw this node in the given canvas\nThe 2d context of a HTML canvas can be retrieved by canvas.getContext(\"2d\");",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29729,
            "description": "Update the bounding box of the shape",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29739,
            "description": "Recalculate the size of this node in the given canvas\nThe 2d context of a HTML canvas can be retrieved by canvas.getContext(\"2d\");",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29751,
            "description": "Check if this object is overlapping with the provided object",
            "params": [
                {
                    "name": "obj",
                    "description": "an object with parameters left, top, right, bottom",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "True if location is located on node",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29763,
            "description": "Check if this object is overlapping with the provided object",
            "params": [
                {
                    "name": "obj",
                    "description": "an object with parameters left, top, right, bottom",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "True if location is located on node",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29828,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29830,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar Label = function () {\n    function Label(body, options) {\n      var edgelabel = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n    _classCallCheck(this, Label);\n    this.body = body;\n    this.pointToSelf = false;\n      this.baseSize = undefined;\n      this.fontOptions = {};\n      this.setOptions(options);\n      this.size = { top: 0, left: 0, width: 0, height: 0, yLine: 0 }; // could be cached\n      this.isEdgeLabel = edgelabel;\n    }\n  _createClass(Label, [{\n      key: 'setOptions',\n      value: function setOptions(options) {\n        var allowDeletion = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n      this.nodeOptions = options;\n      // We want to keep the font options seperated from the node options.\n        // The node options have to mirror the globals when they are not overruled.\n        this.fontOptions = util.deepExtend({}, options.font, true);\n      if (options.label !== undefined) {\n          this.labelDirty = true;\n        }\n      if (options.font !== undefined) {\n          Label.parseOptions(this.fontOptions, options, allowDeletion);\n          if (typeof options.font === 'string') {\n            this.baseSize = this.fontOptions.size;\n          } else if (_typeof(options.font) === 'object') {\n            if (options.font.size !== undefined) {\n              this.baseSize = options.font.size;\n            }\n          }\n        }\n      }\n    }, {\n      key: 'draw',\n\n    /**\n       * Main function. This is called from anything that wants to draw a label.\n       * @param ctx\n       * @param x\n       * @param y\n       * @param selected\n       * @param baseline",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29921,
            "description": "Draws the label background",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 29956,
            "params": [
                {
                    "name": "ctx",
                    "description": ""
                },
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "baseline",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 30046,
            "description": "fade in when relative scale is between threshold and threshold - 1.\nIf the relative scale would be smaller than threshold -1 the draw function would have returned before coming here.",
            "params": [
                {
                    "name": "viewFontSize",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*[]"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 30068,
            "params": [
                {
                    "name": "ctx",
                    "description": ""
                },
                {
                    "name": "selected",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "Width: number, height: number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 30088,
            "params": [
                {
                    "name": "ctx",
                    "description": ""
                },
                {
                    "name": "selected",
                    "description": ""
                },
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "baseline",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 30120,
            "description": "This calculates the width as well as explodes the label string and calculates the amount of lines.",
            "params": [
                {
                    "name": "ctx",
                    "description": ""
                },
                {
                    "name": "selected",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 30171,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 30173,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NodeBase2 = __webpack_require__(65);\nvar _NodeBase3 = _interopRequireDefault(_NodeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Box = function (_NodeBase) {\n    _inherits(Box, _NodeBase);\n  function Box(options, body, labelModule) {\n      _classCallCheck(this, Box);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Box).call(this, options, body, labelModule));\n    }\n  _createClass(Box, [{\n      key: 'resize',\n      value: function resize(ctx, selected) {\n        if (this.width === undefined) {\n          var margin = 5;\n          var textSize = this.labelModule.getTextSize(ctx, selected);\n          this.width = textSize.width + 2 * margin;\n          this.height = textSize.height + 2 * margin;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx, selected);\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      var borderWidth = this.options.borderWidth;\n        var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\n      ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\n        ctx.lineWidth = selected ? selectionLineWidth : borderWidth;\n        ctx.lineWidth /= this.body.view.scale;\n        ctx.lineWidth = Math.min(this.width, ctx.lineWidth);\n      ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\n      var borderRadius = this.options.shapeProperties.borderRadius; // only effective for box\n        ctx.roundRect(this.left, this.top, this.width, this.height, borderRadius);\n      // draw shadow if enabled\n        this.enableShadow(ctx);\n        // draw the background\n        ctx.fill();\n        // disable shadows for other elements.\n        this.disableShadow(ctx);\n      //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\n        ctx.save();\n        // if borders are zero width, they will be drawn with width 1 by default. This prevents that\n        if (borderWidth > 0) {\n          this.enableBorderDashes(ctx);\n          //draw the border\n          ctx.stroke();\n          //disable dashed border for other elements\n          this.disableBorderDashes(ctx);\n        }\n        ctx.restore();\n      this.updateBoundingBox(x, y, ctx, selected);\n        this.labelModule.draw(ctx, x, y, selected);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y, ctx, selected) {\n        this.resize(ctx, selected);\n        this.left = x - this.width * 0.5;\n        this.top = y - this.height * 0.5;\n      var borderRadius = this.options.shapeProperties.borderRadius; // only effective for box\n        this.boundingBox.left = this.left - borderRadius;\n        this.boundingBox.top = this.top - borderRadius;\n        this.boundingBox.bottom = this.top + this.height + borderRadius;\n        this.boundingBox.right = this.left + this.width + borderRadius;\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        this.resize(ctx);\n        var borderWidth = this.options.borderWidth;\n      return Math.min(Math.abs(this.width / 2 / Math.cos(angle)), Math.abs(this.height / 2 / Math.sin(angle))) + borderWidth;\n      }\n    }]);\n  return Box;\n  }(_NodeBase3.default);\nexports.default = Box;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 30287,
            "description": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar NodeBase = function () {\n    function NodeBase(options, body, labelModule) {\n      _classCallCheck(this, NodeBase);\n    this.body = body;\n      this.labelModule = labelModule;\n      this.setOptions(options);\n      this.top = undefined;\n      this.left = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this.radius = undefined;\n      this.boundingBox = { top: 0, left: 0, right: 0, bottom: 0 };\n    }\n  _createClass(NodeBase, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n    }, {\n      key: \"_distanceToBorder\",\n      value: function _distanceToBorder(ctx, angle) {\n        var borderWidth = this.options.borderWidth;\n        this.resize(ctx);\n        return Math.min(Math.abs(this.width / 2 / Math.cos(angle)), Math.abs(this.height / 2 / Math.sin(angle))) + borderWidth;\n      }\n    }, {\n      key: \"enableShadow\",\n      value: function enableShadow(ctx) {\n        if (this.options.shadow.enabled === true) {\n          ctx.shadowColor = this.options.shadow.color;\n          ctx.shadowBlur = this.options.shadow.size;\n          ctx.shadowOffsetX = this.options.shadow.x;\n          ctx.shadowOffsetY = this.options.shadow.y;\n        }\n      }\n    }, {\n      key: \"disableShadow\",\n      value: function disableShadow(ctx) {\n        if (this.options.shadow.enabled === true) {\n          ctx.shadowColor = 'rgba(0,0,0,0)';\n          ctx.shadowBlur = 0;\n          ctx.shadowOffsetX = 0;\n          ctx.shadowOffsetY = 0;\n        }\n      }\n    }, {\n      key: \"enableBorderDashes\",\n      value: function enableBorderDashes(ctx) {\n        if (this.options.shapeProperties.borderDashes !== false) {\n          if (ctx.setLineDash !== undefined) {\n            var dashes = this.options.shapeProperties.borderDashes;\n            if (dashes === true) {\n              dashes = [5, 15];\n            }\n            ctx.setLineDash(dashes);\n          } else {\n            console.warn(\"setLineDash is not supported in this browser. The dashed borders cannot be used.\");\n            this.options.shapeProperties.borderDashes = false;\n          }\n        }\n      }\n    }, {\n      key: \"disableBorderDashes\",\n      value: function disableBorderDashes(ctx) {\n        if (this.options.shapeProperties.borderDashes !== false) {\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash([0]);\n          } else {\n            console.warn(\"setLineDash is not supported in this browser. The dashed borders cannot be used.\");\n            this.options.shapeProperties.borderDashes = false;\n          }\n        }\n      }\n    }]);\n  return NodeBase;\n  }();\nexports.default = NodeBase;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 30383,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _CircleImageBase2 = __webpack_require__(67);\nvar _CircleImageBase3 = _interopRequireDefault(_CircleImageBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Circle = function (_CircleImageBase) {\n    _inherits(Circle, _CircleImageBase);\n  function Circle(options, body, labelModule) {\n      _classCallCheck(this, Circle);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Circle).call(this, options, body, labelModule));\n    }\n  _createClass(Circle, [{\n      key: 'resize',\n      value: function resize(ctx, selected) {\n        if (this.width === undefined) {\n          var margin = 5;\n          var textSize = this.labelModule.getTextSize(ctx, selected);\n          var diameter = Math.max(textSize.width, textSize.height) + 2 * margin;\n          this.options.size = diameter / 2;\n        this.width = diameter;\n          this.height = diameter;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx, selected);\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      this._drawRawCircle(ctx, x, y, selected, hover, this.options.size);\n      this.boundingBox.top = y - this.options.size;\n        this.boundingBox.left = x - this.options.size;\n        this.boundingBox.right = x + this.options.size;\n        this.boundingBox.bottom = y + this.options.size;\n      this.updateBoundingBox(x, y);\n        this.labelModule.draw(ctx, x, y, selected);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y) {\n        this.boundingBox.top = y - this.options.size;\n        this.boundingBox.left = x - this.options.size;\n        this.boundingBox.right = x + this.options.size;\n        this.boundingBox.bottom = y + this.options.size;\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        this.resize(ctx);\n        return this.width * 0.5;\n      }\n    }]);\n  return Circle;\n  }(_CircleImageBase3.default);\nexports.default = Circle;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 30468,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NodeBase2 = __webpack_require__(65);\nvar _NodeBase3 = _interopRequireDefault(_NodeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar CircleImageBase = function (_NodeBase) {\n    _inherits(CircleImageBase, _NodeBase);\n  function CircleImageBase(options, body, labelModule) {\n      _classCallCheck(this, CircleImageBase);\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(CircleImageBase).call(this, options, body, labelModule));\n    _this.labelOffset = 0;\n      _this.imageLoaded = false;\n      return _this;\n    }\n  _createClass(CircleImageBase, [{\n      key: 'setOptions',\n      value: function setOptions(options, imageObj) {\n        this.options = options;\n        if (imageObj) {\n          this.imageObj = imageObj;\n        }\n      }\n    /**\n       * This function resizes the image by the options size when the image has not yet loaded. If the image has loaded, we\n       * force the update of the size again.\n       *\n       * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 30667,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 30669,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _CircleImageBase2 = __webpack_require__(67);\nvar _CircleImageBase3 = _interopRequireDefault(_CircleImageBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar CircularImage = function (_CircleImageBase) {\n    _inherits(CircularImage, _CircleImageBase);\n  function CircularImage(options, body, labelModule, imageObj) {\n      _classCallCheck(this, CircularImage);\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(CircularImage).call(this, options, body, labelModule));\n    _this.imageObj = imageObj;\n      _this._swapToImageResizeWhenImageLoaded = true;\n      return _this;\n    }\n  _createClass(CircularImage, [{\n      key: 'resize',\n      value: function resize() {\n        if (this.imageObj.src === undefined || this.imageObj.width === undefined || this.imageObj.height === undefined) {\n          if (!this.width) {\n            var diameter = this.options.size * 2;\n            this.width = diameter;\n            this.height = diameter;\n            this._swapToImageResizeWhenImageLoaded = true;\n            this.radius = 0.5 * this.width;\n          }\n        } else {\n          if (this._swapToImageResizeWhenImageLoaded) {\n            this.width = undefined;\n            this.height = undefined;\n            this._swapToImageResizeWhenImageLoaded = false;\n          }\n          this._resizeImage();\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize();\n      this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      var size = Math.min(0.5 * this.height, 0.5 * this.width);\n      // draw the background circle. IMPORTANT: the stroke in this method is used by the clip method below.\n        this._drawRawCircle(ctx, x, y, selected, hover, size);\n      // now we draw in the circle, we save so we can revert the clip operation after drawing.\n        ctx.save();\n        // clip is used to use the stroke in drawRawCircle as an area that we can draw in.\n        ctx.clip();\n        // draw the image\n        this._drawImageAtPosition(ctx);\n        // restore so we can again draw on the full canvas\n        ctx.restore();\n      this._drawImageLabel(ctx, x, y, selected);\n      this.updateBoundingBox(x, y);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y) {\n        this.boundingBox.top = y - this.options.size;\n        this.boundingBox.left = x - this.options.size;\n        this.boundingBox.right = x + this.options.size;\n        this.boundingBox.bottom = y + this.options.size;\n        this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left);\n        this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width);\n        this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelOffset);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        this.resize(ctx);\n        return this.width * 0.5;\n      }\n    }]);\n  return CircularImage;\n  }(_CircleImageBase3.default);\nexports.default = CircularImage;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 30776,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NodeBase2 = __webpack_require__(65);\nvar _NodeBase3 = _interopRequireDefault(_NodeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Database = function (_NodeBase) {\n    _inherits(Database, _NodeBase);\n  function Database(options, body, labelModule) {\n      _classCallCheck(this, Database);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Database).call(this, options, body, labelModule));\n    }\n  _createClass(Database, [{\n      key: 'resize',\n      value: function resize(ctx, selected) {\n        if (this.width === undefined) {\n          var margin = 5;\n          var textSize = this.labelModule.getTextSize(ctx, selected);\n          var size = textSize.width + 2 * margin;\n          this.width = size;\n          this.height = size;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx, selected);\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      var neutralborderWidth = this.options.borderWidth;\n        var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\n        var borderWidth = (selected ? selectionLineWidth : neutralborderWidth) / this.body.view.scale;\n        ctx.lineWidth = Math.min(this.width, borderWidth);\n      ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\n      ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\n        ctx.database(x - this.width / 2, y - this.height * 0.5, this.width, this.height);\n      // draw shadow if enabled\n        this.enableShadow(ctx);\n        // draw the background\n        ctx.fill();\n        // disable shadows for other elements.\n        this.disableShadow(ctx);\n      //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\n        ctx.save();\n        // if borders are zero width, they will be drawn with width 1 by default. This prevents that\n        if (borderWidth > 0) {\n          this.enableBorderDashes(ctx);\n          //draw the border\n          ctx.stroke();\n          //disable dashed border for other elements\n          this.disableBorderDashes(ctx);\n        }\n        ctx.restore();\n      this.updateBoundingBox(x, y, ctx, selected);\n        this.labelModule.draw(ctx, x, y, selected);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y, ctx, selected) {\n        this.resize(ctx, selected);\n      this.left = x - this.width * 0.5;\n        this.top = y - this.height * 0.5;\n      this.boundingBox.left = this.left;\n        this.boundingBox.top = this.top;\n        this.boundingBox.bottom = this.top + this.height;\n        this.boundingBox.right = this.left + this.width;\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return Database;\n  }(_NodeBase3.default);\nexports.default = Database;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 30885,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _ShapeBase2 = __webpack_require__(71);\nvar _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Diamond = function (_ShapeBase) {\n    _inherits(Diamond, _ShapeBase);\n  function Diamond(options, body, labelModule) {\n      _classCallCheck(this, Diamond);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Diamond).call(this, options, body, labelModule));\n    }\n  _createClass(Diamond, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'diamond', 4, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return Diamond;\n  }(_ShapeBase3.default);\nexports.default = Diamond;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 30940,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NodeBase2 = __webpack_require__(65);\nvar _NodeBase3 = _interopRequireDefault(_NodeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar ShapeBase = function (_NodeBase) {\n    _inherits(ShapeBase, _NodeBase);\n  function ShapeBase(options, body, labelModule) {\n      _classCallCheck(this, ShapeBase);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(ShapeBase).call(this, options, body, labelModule));\n    }\n  _createClass(ShapeBase, [{\n      key: '_resizeShape',\n      value: function _resizeShape() {\n        if (this.width === undefined) {\n          var size = 2 * this.options.size;\n          this.width = size;\n          this.height = size;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: '_drawShape',\n      value: function _drawShape(ctx, shape, sizeMultiplier, x, y, selected, hover) {\n        this._resizeShape();\n      this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      var neutralborderWidth = this.options.borderWidth;\n        var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\n        var borderWidth = (selected ? selectionLineWidth : neutralborderWidth) / this.body.view.scale;\n        ctx.lineWidth = Math.min(this.width, borderWidth);\n      ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\n        ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\n        ctx[shape](x, y, this.options.size);\n      // draw shadow if enabled\n        this.enableShadow(ctx);\n        // draw the background\n        ctx.fill();\n        // disable shadows for other elements.\n        this.disableShadow(ctx);\n      //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\n        ctx.save();\n        // if borders are zero width, they will be drawn with width 1 by default. This prevents that\n        if (borderWidth > 0) {\n          this.enableBorderDashes(ctx);\n          //draw the border\n          ctx.stroke();\n          //disable dashed border for other elements\n          this.disableBorderDashes(ctx);\n        }\n        ctx.restore();\n      if (this.options.label !== undefined) {\n          var yLabel = y + 0.5 * this.height + 3; // the + 3 is to offset it a bit below the node.\n          this.labelModule.draw(ctx, x, yLabel, selected, 'hanging');\n        }\n      this.updateBoundingBox(x, y);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y) {\n        this.boundingBox.top = y - this.options.size;\n        this.boundingBox.left = x - this.options.size;\n        this.boundingBox.right = x + this.options.size;\n        this.boundingBox.bottom = y + this.options.size;\n      if (this.options.label !== undefined && this.labelModule.size.width > 0) {\n          this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left);\n          this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width);\n          this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelModule.size.height + 3);\n        }\n      }\n    }]);\n  return ShapeBase;\n  }(_NodeBase3.default);\nexports.default = ShapeBase;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 31047,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _ShapeBase2 = __webpack_require__(71);\nvar _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Dot = function (_ShapeBase) {\n    _inherits(Dot, _ShapeBase);\n  function Dot(options, body, labelModule) {\n      _classCallCheck(this, Dot);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Dot).call(this, options, body, labelModule));\n    }\n  _createClass(Dot, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'circle', 2, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        this.resize(ctx);\n        return this.options.size;\n      }\n    }]);\n  return Dot;\n  }(_ShapeBase3.default);\nexports.default = Dot;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 31103,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NodeBase2 = __webpack_require__(65);\nvar _NodeBase3 = _interopRequireDefault(_NodeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Ellipse = function (_NodeBase) {\n    _inherits(Ellipse, _NodeBase);\n  function Ellipse(options, body, labelModule) {\n      _classCallCheck(this, Ellipse);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Ellipse).call(this, options, body, labelModule));\n    }\n  _createClass(Ellipse, [{\n      key: 'resize',\n      value: function resize(ctx, selected) {\n        if (this.width === undefined) {\n          var textSize = this.labelModule.getTextSize(ctx, selected);\n        this.width = textSize.width * 1.5;\n          this.height = textSize.height * 2;\n          if (this.width < this.height) {\n            this.width = this.height;\n          }\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx, selected);\n        this.left = x - this.width * 0.5;\n        this.top = y - this.height * 0.5;\n      var neutralborderWidth = this.options.borderWidth;\n        var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\n        var borderWidth = (selected ? selectionLineWidth : neutralborderWidth) / this.body.view.scale;\n        ctx.lineWidth = Math.min(this.width, borderWidth);\n      ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\n      ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\n        ctx.ellipse(this.left, this.top, this.width, this.height);\n      // draw shadow if enabled\n        this.enableShadow(ctx);\n        // draw the background\n        ctx.fill();\n        // disable shadows for other elements.\n        this.disableShadow(ctx);\n      //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\n        ctx.save();\n      // if borders are zero width, they will be drawn with width 1 by default. This prevents that\n        if (borderWidth > 0) {\n          this.enableBorderDashes(ctx);\n          //draw the border\n          ctx.stroke();\n          //disable dashed border for other elements\n          this.disableBorderDashes(ctx);\n        }\n      ctx.restore();\n      this.updateBoundingBox(x, y, ctx, selected);\n        this.labelModule.draw(ctx, x, y, selected);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y, ctx, selected) {\n        this.resize(ctx, selected); // just in case\n      this.left = x - this.width * 0.5;\n        this.top = y - this.height * 0.5;\n      this.boundingBox.left = this.left;\n        this.boundingBox.top = this.top;\n        this.boundingBox.bottom = this.top + this.height;\n        this.boundingBox.right = this.left + this.width;\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        this.resize(ctx);\n        var a = this.width * 0.5;\n        var b = this.height * 0.5;\n        var w = Math.sin(angle) * a;\n        var h = Math.cos(angle) * b;\n        return a * b / Math.sqrt(w * w + h * h);\n      }\n    }]);\n  return Ellipse;\n  }(_NodeBase3.default);\nexports.default = Ellipse;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 31221,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NodeBase2 = __webpack_require__(65);\nvar _NodeBase3 = _interopRequireDefault(_NodeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Icon = function (_NodeBase) {\n    _inherits(Icon, _NodeBase);\n  function Icon(options, body, labelModule) {\n      _classCallCheck(this, Icon);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Icon).call(this, options, body, labelModule));\n    }\n  _createClass(Icon, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        if (this.width === undefined) {\n          var margin = 5;\n          var iconSize = {\n            width: Number(this.options.icon.size),\n            height: Number(this.options.icon.size)\n          };\n          this.width = iconSize.width + 2 * margin;\n          this.height = iconSize.height + 2 * margin;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx);\n        this.options.icon.size = this.options.icon.size || 50;\n      this.left = x - this.width * 0.5;\n        this.top = y - this.height * 0.5;\n        this._icon(ctx, x, y, selected);\n      if (this.options.label !== undefined) {\n          var iconTextSpacing = 5;\n          this.labelModule.draw(ctx, x, y + this.height * 0.5 + iconTextSpacing, selected);\n        }\n      this.updateBoundingBox(x, y);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y) {\n        this.boundingBox.top = y - this.options.icon.size * 0.5;\n        this.boundingBox.left = x - this.options.icon.size * 0.5;\n        this.boundingBox.right = x + this.options.icon.size * 0.5;\n        this.boundingBox.bottom = y + this.options.icon.size * 0.5;\n      if (this.options.label !== undefined && this.labelModule.size.width > 0) {\n          var iconTextSpacing = 5;\n          this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left);\n          this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width);\n          this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelModule.size.height + iconTextSpacing);\n        }\n      }\n    }, {\n      key: '_icon',\n      value: function _icon(ctx, x, y, selected) {\n        var iconSize = Number(this.options.icon.size);\n      if (this.options.icon.code !== undefined) {\n          ctx.font = (selected ? \"bold \" : \"\") + iconSize + \"px \" + this.options.icon.face;\n        // draw icon\n          ctx.fillStyle = this.options.icon.color || \"black\";\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"middle\";\n        // draw shadow if enabled\n          this.enableShadow(ctx);\n          ctx.fillText(this.options.icon.code, x, y);\n        // disable shadows for other elements.\n          this.disableShadow(ctx);\n        } else {\n          console.error('When using the icon shape, you need to define the code in the icon options object. This can be done per node or globally.');\n        }\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return Icon;\n  }(_NodeBase3.default);\nexports.default = Icon;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 31335,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _CircleImageBase2 = __webpack_require__(67);\nvar _CircleImageBase3 = _interopRequireDefault(_CircleImageBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Image = function (_CircleImageBase) {\n    _inherits(Image, _CircleImageBase);\n  function Image(options, body, labelModule, imageObj) {\n      _classCallCheck(this, Image);\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Image).call(this, options, body, labelModule));\n    _this.imageObj = imageObj;\n      return _this;\n    }\n  _createClass(Image, [{\n      key: 'resize',\n      value: function resize() {\n        this._resizeImage();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize();\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      if (this.options.shapeProperties.useBorderWithImage === true) {\n          var neutralborderWidth = this.options.borderWidth;\n          var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\n          var borderWidth = (selected ? selectionLineWidth : neutralborderWidth) / this.body.view.scale;\n          ctx.lineWidth = Math.min(this.width, borderWidth);\n        ctx.beginPath();\n        // setup the line properties.\n          ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\n        // set a fillstyle\n          ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\n        // draw a rectangle to form the border around. This rectangle is filled so the opacity of a picture (in future vis releases?) can be used to tint the image\n          ctx.rect(this.left - 0.5 * ctx.lineWidth, this.top - 0.5 * ctx.lineWidth, this.width + ctx.lineWidth, this.height + ctx.lineWidth);\n          ctx.fill();\n        //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\n          ctx.save();\n          // if borders are zero width, they will be drawn with width 1 by default. This prevents that\n          if (borderWidth > 0) {\n            this.enableBorderDashes(ctx);\n            //draw the border\n            ctx.stroke();\n            //disable dashed border for other elements\n            this.disableBorderDashes(ctx);\n          }\n          ctx.restore();\n        ctx.closePath();\n        }\n      this._drawImageAtPosition(ctx);\n      this._drawImageLabel(ctx, x, y, selected || hover);\n      this.updateBoundingBox(x, y);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y) {\n        this.resize();\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      this.boundingBox.top = this.top;\n        this.boundingBox.left = this.left;\n        this.boundingBox.right = this.left + this.width;\n        this.boundingBox.bottom = this.top + this.height;\n      if (this.options.label !== undefined && this.labelModule.size.width > 0) {\n          this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left);\n          this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width);\n          this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelOffset);\n        }\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return Image;\n  }(_CircleImageBase3.default);\nexports.default = Image;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 31452,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _ShapeBase2 = __webpack_require__(71);\nvar _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Square = function (_ShapeBase) {\n    _inherits(Square, _ShapeBase);\n  function Square(options, body, labelModule) {\n      _classCallCheck(this, Square);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Square).call(this, options, body, labelModule));\n    }\n  _createClass(Square, [{\n      key: 'resize',\n      value: function resize() {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'square', 2, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return Square;\n  }(_ShapeBase3.default);\nexports.default = Square;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 31507,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _ShapeBase2 = __webpack_require__(71);\nvar _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Star = function (_ShapeBase) {\n    _inherits(Star, _ShapeBase);\n  function Star(options, body, labelModule) {\n      _classCallCheck(this, Star);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Star).call(this, options, body, labelModule));\n    }\n  _createClass(Star, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'star', 4, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return Star;\n  }(_ShapeBase3.default);\nexports.default = Star;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 31562,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NodeBase2 = __webpack_require__(65);\nvar _NodeBase3 = _interopRequireDefault(_NodeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Text = function (_NodeBase) {\n    _inherits(Text, _NodeBase);\n  function Text(options, body, labelModule) {\n      _classCallCheck(this, Text);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Text).call(this, options, body, labelModule));\n    }\n  _createClass(Text, [{\n      key: 'resize',\n      value: function resize(ctx, selected) {\n        if (this.width === undefined) {\n          var margin = 5;\n          var textSize = this.labelModule.getTextSize(ctx, selected);\n          this.width = textSize.width + 2 * margin;\n          this.height = textSize.height + 2 * margin;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx, selected || hover);\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      // draw shadow if enabled\n        this.enableShadow(ctx);\n        this.labelModule.draw(ctx, x, y, selected || hover);\n      // disable shadows for other elements.\n        this.disableShadow(ctx);\n      this.updateBoundingBox(x, y, ctx, selected);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y, ctx, selected) {\n        this.resize(ctx, selected);\n      this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      this.boundingBox.top = this.top;\n        this.boundingBox.left = this.left;\n        this.boundingBox.right = this.left + this.width;\n        this.boundingBox.bottom = this.top + this.height;\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return Text;\n  }(_NodeBase3.default);\nexports.default = Text;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 31647,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _ShapeBase2 = __webpack_require__(71);\nvar _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Triangle = function (_ShapeBase) {\n    _inherits(Triangle, _ShapeBase);\n  function Triangle(options, body, labelModule) {\n      _classCallCheck(this, Triangle);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Triangle).call(this, options, body, labelModule));\n    }\n  _createClass(Triangle, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'triangle', 3, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return Triangle;\n  }(_ShapeBase3.default);\nexports.default = Triangle;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 31702,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _ShapeBase2 = __webpack_require__(71);\nvar _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar TriangleDown = function (_ShapeBase) {\n    _inherits(TriangleDown, _ShapeBase);\n  function TriangleDown(options, body, labelModule) {\n      _classCallCheck(this, TriangleDown);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(TriangleDown).call(this, options, body, labelModule));\n    }\n  _createClass(TriangleDown, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'triangleDown', 3, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return TriangleDown;\n  }(_ShapeBase3.default);\nexports.default = TriangleDown;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 31757,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _Edge = __webpack_require__(82);\nvar _Edge2 = _interopRequireDefault(_Edge);\nvar _Label = __webpack_require__(63);\nvar _Label2 = _interopRequireDefault(_Label);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\nvar EdgesHandler = function () {\n    function EdgesHandler(body, images, groups) {\n      var _this = this;\n    _classCallCheck(this, EdgesHandler);\n    this.body = body;\n      this.images = images;\n      this.groups = groups;\n    // create the edge API in the body container\n      this.body.functions.createEdge = this.create.bind(this);\n    this.edgesListeners = {\n        add: function add(event, params) {\n          _this.add(params.items);\n        },\n        update: function update(event, params) {\n          _this.update(params.items);\n        },\n        remove: function remove(event, params) {\n          _this.remove(params.items);\n        }\n      };\n    this.options = {};\n      this.defaultOptions = {\n        arrows: {\n          to: { enabled: false, scaleFactor: 1 }, // boolean / {arrowScaleFactor:1} / {enabled: false, arrowScaleFactor:1}\n          middle: { enabled: false, scaleFactor: 1 },\n          from: { enabled: false, scaleFactor: 1 }\n        },\n        arrowStrikethrough: true,\n        color: {\n          color: '#848484',\n          highlight: '#848484',\n          hover: '#848484',\n          inherit: 'from',\n          opacity: 1.0\n        },\n        dashes: false,\n        font: {\n          color: '#343434',\n          size: 14, // px\n          face: 'arial',\n          background: 'none',\n          strokeWidth: 2, // px\n          strokeColor: '#ffffff',\n          align: 'horizontal'\n        },\n        hidden: false,\n        hoverWidth: 1.5,\n        label: undefined,\n        labelHighlightBold: true,\n        length: undefined,\n        physics: true,\n        scaling: {\n          min: 1,\n          max: 15,\n          label: {\n            enabled: true,\n            min: 14,\n            max: 30,\n            maxVisible: 30,\n            drawThreshold: 5\n          },\n          customScalingFunction: function customScalingFunction(min, max, total, value) {\n            if (max === min) {\n              return 0.5;\n            } else {\n              var scale = 1 / (max - min);\n              return Math.max(0, (value - min) * scale);\n            }\n          }\n        },\n        selectionWidth: 1.5,\n        selfReferenceSize: 20,\n        shadow: {\n          enabled: false,\n          color: 'rgba(0,0,0,0.5)',\n          size: 10,\n          x: 5,\n          y: 5\n        },\n        smooth: {\n          enabled: true,\n          type: \"dynamic\",\n          forceDirection: 'none',\n          roundness: 0.5\n        },\n        title: undefined,\n        width: 1,\n        value: undefined\n      };\n    util.extend(this.options, this.defaultOptions);\n    this.bindEventListeners();\n    }\n  _createClass(EdgesHandler, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this2 = this;\n      // this allows external modules to force all dynamic curves to turn static.\n        this.body.emitter.on(\"_forceDisableDynamicCurves\", function (type) {\n          if (type === 'dynamic') {\n            type = 'continuous';\n          }\n          var emitChange = false;\n          for (var edgeId in _this2.body.edges) {\n            if (_this2.body.edges.hasOwnProperty(edgeId)) {\n              var edge = _this2.body.edges[edgeId];\n              var edgeData = _this2.body.data.edges._data[edgeId];\n            // only forcibly remove the smooth curve if the data has been set of the edge has the smooth curves defined.\n              // this is because a change in the global would not affect these curves.\n              if (edgeData !== undefined) {\n                var edgeOptions = edgeData.smooth;\n                if (edgeOptions !== undefined) {\n                  if (edgeOptions.enabled === true && edgeOptions.type === 'dynamic') {\n                    if (type === undefined) {\n                      edge.setOptions({ smooth: false });\n                    } else {\n                      edge.setOptions({ smooth: { type: type } });\n                    }\n                    emitChange = true;\n                  }\n                }\n              }\n            }\n          }\n          if (emitChange === true) {\n            _this2.body.emitter.emit(\"_dataChanged\");\n          }\n        });\n      // this is called when options of EXISTING nodes or edges have changed.\n        this.body.emitter.on(\"_dataUpdated\", function () {\n          _this2.reconnectEdges();\n          _this2.markAllEdgesAsDirty();\n        });\n      // refresh the edges. Used when reverting from hierarchical layout\n        this.body.emitter.on(\"refreshEdges\", this.refresh.bind(this));\n        this.body.emitter.on(\"refresh\", this.refresh.bind(this));\n        this.body.emitter.on(\"destroy\", function () {\n          util.forEach(_this2.edgesListeners, function (callback, event) {\n            if (_this2.body.data.edges) _this2.body.data.edges.off(event, callback);\n          });\n          delete _this2.body.functions.createEdge;\n          delete _this2.edgesListeners.add;\n          delete _this2.edgesListeners.update;\n          delete _this2.edgesListeners.remove;\n          delete _this2.edgesListeners;\n        });\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          // use the parser from the Edge class to fill in all shorthand notations\n          _Edge2.default.parseOptions(this.options, options);\n        // handle multiple input cases for color\n          if (options.color !== undefined) {\n            this.markAllEdgesAsDirty();\n          }\n        // update smooth settings in all edges\n          var dataChanged = false;\n          if (options.smooth !== undefined) {\n            for (var edgeId in this.body.edges) {\n              if (this.body.edges.hasOwnProperty(edgeId)) {\n                dataChanged = this.body.edges[edgeId].updateEdgeType() || dataChanged;\n              }\n            }\n          }\n        // update fonts in all edges\n          if (options.font !== undefined) {\n            // use the parser from the Label class to fill in all shorthand notations\n            _Label2.default.parseOptions(this.options.font, options);\n            for (var _edgeId in this.body.edges) {\n              if (this.body.edges.hasOwnProperty(_edgeId)) {\n                this.body.edges[_edgeId].updateLabelModule();\n              }\n            }\n          }\n        // update the state of the variables if needed\n          if (options.hidden !== undefined || options.physics !== undefined || dataChanged === true) {\n            this.body.emitter.emit('_dataChanged');\n          }\n        }\n      }\n    /**\n       * Load edges by reading the data table\n       * @param {Array | DataSet | DataView} edges    The data containing the edges.\n       * @private\n       * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32036,
            "description": "Add edges",
            "params": [
                {
                    "name": "ids",
                    "description": "",
                    "type": "Number[] | String[]"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32067,
            "description": "Update existing edges, or create them when not yet existing",
            "params": [
                {
                    "name": "ids",
                    "description": "",
                    "type": "Number[] | String[]"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32102,
            "description": "Remove existing edges. Non existing ids will be ignored",
            "params": [
                {
                    "name": "ids",
                    "description": "",
                    "type": "Number[] | String[]"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32152,
            "description": "Reconnect all edges",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32201,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32203,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _Label = __webpack_require__(63);\nvar _Label2 = _interopRequireDefault(_Label);\nvar _CubicBezierEdge = __webpack_require__(83);\nvar _CubicBezierEdge2 = _interopRequireDefault(_CubicBezierEdge);\nvar _BezierEdgeDynamic = __webpack_require__(87);\nvar _BezierEdgeDynamic2 = _interopRequireDefault(_BezierEdgeDynamic);\nvar _BezierEdgeStatic = __webpack_require__(88);\nvar _BezierEdgeStatic2 = _interopRequireDefault(_BezierEdgeStatic);\nvar _StraightEdge = __webpack_require__(89);\nvar _StraightEdge2 = _interopRequireDefault(_StraightEdge);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\n/**\n   * @class Edge\n   *\n   * A edge connects two nodes\n   * @param {Object} properties     Object with options. Must contain\n   *                                At least options from and to.\n   *                                Available options: from (number),\n   *                                to (number), label (string, color (string),\n   *                                width (number), style (string),\n   *                                length (number), title (string)\n   * @param {Network} network       A Network object, used to find and edge to\n   *                                nodes.\n   * @param {Object} constants      An object with default values for\n   *                                example for the color",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32292,
            "description": "Set or overwrite options for the edge",
            "params": [
                {
                    "name": "options",
                    "description": "an object with options",
                    "type": "Object"
                },
                {
                    "name": "doNotEmit",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32347,
            "description": "update the options in the label module",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32357,
            "description": "update the edge type, set the options",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32408,
            "description": "Connect an edge to its nodes",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32436,
            "description": "Disconnect an edge from its nodes",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32455,
            "description": "get the title of this edge.",
            "return": {
                "description": "title    The title of the edge, or undefined when no title\n                          has been set.",
                "type": "String"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32467,
            "description": "check if this node is selecte",
            "return": {
                "description": "selected   True if node is selected, else false",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32478,
            "description": "Retrieve the value of the edge. Can be undefined",
            "return": {
                "description": "value",
                "type": "Number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32489,
            "description": "Adjust the value range of the edge. The edge will adjust it's width\nbased on its value.",
            "params": [
                {
                    "name": "min",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "total",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32532,
            "description": "Redraw a edge\nDraw this edge in the given canvas\nThe 2d context of a HTML canvas can be retrieved by canvas.getContext(\"2d\");",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32624,
            "description": "Check if this object is overlapping with the provided object",
            "params": [
                {
                    "name": "obj",
                    "description": "an object with parameters left, top",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "True if location is located on the edge",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32650,
            "description": "Rotates the canvas so the text is most readable",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32671,
            "description": "Get a point on a circle",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "percentage.",
                    "description": "Value between 0 (line start) and 1 (line end)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "point",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32701,
            "description": "cleans all required things on delete",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32817,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32819,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _CubicBezierEdgeBase2 = __webpack_require__(84);\nvar _CubicBezierEdgeBase3 = _interopRequireDefault(_CubicBezierEdgeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar CubicBezierEdge = function (_CubicBezierEdgeBase) {\n    _inherits(CubicBezierEdge, _CubicBezierEdgeBase);\n  function CubicBezierEdge(options, body, labelModule) {\n      _classCallCheck(this, CubicBezierEdge);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(CubicBezierEdge).call(this, options, body, labelModule));\n    }\n  /**\n     * Draw a line between two nodes\n     * @param {CanvasRenderingContext2D} ctx\n     * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32931,
            "description": "Combined function of pointOnLine and pointOnBezier. This gives the coordinates of a point on the line at a certain percentage of the way",
            "params": [
                {
                    "name": "percentage",
                    "description": ""
                },
                {
                    "name": "via",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "X: number, y: number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32967,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 32969,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _BezierEdgeBase2 = __webpack_require__(85);\nvar _BezierEdgeBase3 = _interopRequireDefault(_BezierEdgeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar CubicBezierEdgeBase = function (_BezierEdgeBase) {\n    _inherits(CubicBezierEdgeBase, _BezierEdgeBase);\n  function CubicBezierEdgeBase(options, body, labelModule) {\n      _classCallCheck(this, CubicBezierEdgeBase);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(CubicBezierEdgeBase).call(this, options, body, labelModule));\n    }\n  /**\n     * Calculate the distance between a point (x3,y3) and a line segment from\n     * (x1,y1) to (x2,y2).\n     * http://stackoverflow.com/questions/849211/shortest-distancae-between-a-point-and-a-line-segment\n     * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n     * @param {number} x1 from x\n     * @param {number} y1 from y\n     * @param {number} x2 to x\n     * @param {number} y2 to y\n     * @param {number} x3 point to check x\n     * @param {number} y3 point to check y\n     * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33053,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33055,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _EdgeBase2 = __webpack_require__(86);\nvar _EdgeBase3 = _interopRequireDefault(_EdgeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar BezierEdgeBase = function (_EdgeBase) {\n    _inherits(BezierEdgeBase, _EdgeBase);\n  function BezierEdgeBase(options, body, labelModule) {\n      _classCallCheck(this, BezierEdgeBase);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(BezierEdgeBase).call(this, options, body, labelModule));\n    }\n  /**\n     * This function uses binary search to look for the point where the bezier curve crosses the border of the node.\n     *\n     * @param nearNode\n     * @param ctx\n     * @param viaNode\n     * @param nearNode\n     * @param ctx\n     * @param viaNode\n     * @param nearNode\n     * @param ctx\n     * @param viaNode",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33151,
            "description": "Calculate the distance between a point (x3,y3) and a line segment from\n(x1,y1) to (x2,y2).\nhttp://stackoverflow.com/questions/849211/shortest-distancae-between-a-point-and-a-line-segment",
            "params": [
                {
                    "name": "x1",
                    "description": "from x",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "from y",
                    "type": "Number"
                },
                {
                    "name": "x2",
                    "description": "to x",
                    "type": "Number"
                },
                {
                    "name": "y2",
                    "description": "to y",
                    "type": "Number"
                },
                {
                    "name": "x3",
                    "description": "point to check x",
                    "type": "Number"
                },
                {
                    "name": "y3",
                    "description": "point to check y",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33197,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33199,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar EdgeBase = function () {\n    function EdgeBase(options, body, labelModule) {\n      _classCallCheck(this, EdgeBase);\n    this.body = body;\n      this.labelModule = labelModule;\n      this.options = {};\n      this.setOptions(options);\n      this.colorDirty = true;\n      this.color = {};\n      this.selectionWidth = 2;\n      this.hoverWidth = 1.5;\n      this.fromPoint = this.from;\n      this.toPoint = this.to;\n    }\n  _createClass(EdgeBase, [{\n      key: 'connect',\n      value: function connect() {\n        this.from = this.body.nodes[this.options.from];\n        this.to = this.body.nodes[this.options.to];\n      }\n    }, {\n      key: 'cleanup',\n      value: function cleanup() {\n        return false;\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        this.options = options;\n        this.from = this.body.nodes[this.options.from];\n        this.to = this.body.nodes[this.options.to];\n        this.id = this.options.id;\n      }\n    /**\n       * Redraw a edge as a line\n       * Draw this edge in the given canvas\n       * The 2d context of a HTML canvas can be retrieved by canvas.getContext(\"2d\");\n       * @param {CanvasRenderingContext2D}   ctx\n       * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33409,
            "description": "Get a point on a circle",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "percentage.",
                    "description": "Value between 0 (line start) and 1 (line end)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "point",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33429,
            "description": "This function uses binary search to look for the point where the circle crosses the border of the node.",
            "params": [
                {
                    "name": "node",
                    "description": ""
                },
                {
                    "name": "ctx",
                    "description": ""
                },
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33489,
            "description": "Get the line width of the edge. Depends on width and whether one of the\nconnected nodes is selected.",
            "return": {
                "description": "width",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33567,
            "description": "Draw a line from a node to itself, a circle",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33591,
            "description": "Calculate the distance between a point (x3,y3) and a line segment from\n(x1,y1) to (x2,y2).\nhttp://stackoverflow.com/questions/849211/shortest-distancae-between-a-point-and-a-line-segment",
            "params": [
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x3",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y3",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33659,
            "params": [
                {
                    "name": "ctx",
                    "description": ""
                },
                {
                    "name": "position",
                    "description": ""
                },
                {
                    "name": "viaNode",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33743,
            "params": [
                {
                    "name": "ctx",
                    "description": ""
                },
                {
                    "name": "selected",
                    "description": ""
                },
                {
                    "name": "hover",
                    "description": ""
                },
                {
                    "name": "arrowData",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33795,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33797,
            "description": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _BezierEdgeBase2 = __webpack_require__(85);\nvar _BezierEdgeBase3 = _interopRequireDefault(_BezierEdgeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar BezierEdgeDynamic = function (_BezierEdgeBase) {\n    _inherits(BezierEdgeDynamic, _BezierEdgeBase);\n  function BezierEdgeDynamic(options, body, labelModule) {\n      _classCallCheck(this, BezierEdgeDynamic);\n    // --> this calls the setOptions below\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BezierEdgeDynamic).call(this, options, body, labelModule));\n      //this.via = undefined; // Here for completeness but not allowed to defined before super() is invoked.\n\n    _this._boundFunction = function () {\n        _this.positionBezierNode();\n      };\n      _this.body.emitter.on(\"_repositionBezierNodes\", _this._boundFunction);\n      return _this;\n    }\n  _createClass(BezierEdgeDynamic, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        // check if the physics has changed.\n        var physicsChange = false;\n        if (this.options.physics !== options.physics) {\n          physicsChange = true;\n        }\n      // set the options and the to and from nodes\n        this.options = options;\n        this.id = this.options.id;\n        this.from = this.body.nodes[this.options.from];\n        this.to = this.body.nodes[this.options.to];\n      // setup the support node and connect\n        this.setupSupportNode();\n        this.connect();\n      // when we change the physics state of the edge, we reposition the support node.\n        if (physicsChange === true) {\n          this.via.setOptions({ physics: this.options.physics });\n          this.positionBezierNode();\n        }\n      }\n    }, {\n      key: \"connect\",\n      value: function connect() {\n        this.from = this.body.nodes[this.options.from];\n        this.to = this.body.nodes[this.options.to];\n        if (this.from === undefined || this.to === undefined || this.options.physics === false) {\n          this.via.setOptions({ physics: false });\n        } else {\n          // fix weird behaviour where a self referencing node has physics enabled\n          if (this.from.id === this.to.id) {\n            this.via.setOptions({ physics: false });\n          } else {\n            this.via.setOptions({ physics: true });\n          }\n        }\n      }\n    /**\n       * remove the support nodes\n       * @returns {boolean}",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33897,
            "description": "Bezier curves require an anchor point to calculate the smooth flow. These points are nodes. These nodes are invisible but\nare used for the force calculation.\n\nThe changed data is not called, if needed, it is returned by the main edge constructor.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33934,
            "description": "Draw a line between two nodes",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 33963,
            "description": "Combined function of pointOnLine and pointOnBezier. This gives the coordinates of a point on the line at a certain percentage of the way",
            "params": [
                {
                    "name": "percentage",
                    "description": ""
                },
                {
                    "name": "viaNode",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "X: number, y: number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34000,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34002,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _BezierEdgeBase2 = __webpack_require__(85);\nvar _BezierEdgeBase3 = _interopRequireDefault(_BezierEdgeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar BezierEdgeStatic = function (_BezierEdgeBase) {\n    _inherits(BezierEdgeStatic, _BezierEdgeBase);\n  function BezierEdgeStatic(options, body, labelModule) {\n      _classCallCheck(this, BezierEdgeStatic);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(BezierEdgeStatic).call(this, options, body, labelModule));\n    }\n  /**\n     * Draw a line between two nodes\n     * @param {CanvasRenderingContext2D} ctx\n     * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34064,
            "description": "We do not use the to and fromPoints here to make the via nodes the same as edges without arrows.",
            "return": {
                "description": "}",
                "type": "X: undefined, y: undefined"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34242,
            "description": "Combined function of pointOnLine and pointOnBezier. This gives the coordinates of a point on the line at a certain percentage of the way",
            "params": [
                {
                    "name": "percentage",
                    "description": ""
                },
                {
                    "name": "viaNode",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "X: number, y: number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34268,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34270,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _EdgeBase2 = __webpack_require__(86);\nvar _EdgeBase3 = _interopRequireDefault(_EdgeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar StraightEdge = function (_EdgeBase) {\n    _inherits(StraightEdge, _EdgeBase);\n  function StraightEdge(options, body, labelModule) {\n      _classCallCheck(this, StraightEdge);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(StraightEdge).call(this, options, body, labelModule));\n    }\n  /**\n     * Draw a line between two nodes\n     * @param {CanvasRenderingContext2D} ctx\n     * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34326,
            "description": "Combined function of pointOnLine and pointOnBezier. This gives the coordinates of a point on the line at a certain percentage of the way",
            "params": [
                {
                    "name": "percentage",
                    "description": ""
                },
                {
                    "name": "via",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "X: number, y: number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34378,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34380,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _BarnesHutSolver = __webpack_require__(91);\nvar _BarnesHutSolver2 = _interopRequireDefault(_BarnesHutSolver);\nvar _RepulsionSolver = __webpack_require__(92);\nvar _RepulsionSolver2 = _interopRequireDefault(_RepulsionSolver);\nvar _HierarchicalRepulsionSolver = __webpack_require__(93);\nvar _HierarchicalRepulsionSolver2 = _interopRequireDefault(_HierarchicalRepulsionSolver);\nvar _SpringSolver = __webpack_require__(94);\nvar _SpringSolver2 = _interopRequireDefault(_SpringSolver);\nvar _HierarchicalSpringSolver = __webpack_require__(95);\nvar _HierarchicalSpringSolver2 = _interopRequireDefault(_HierarchicalSpringSolver);\nvar _CentralGravitySolver = __webpack_require__(96);\nvar _CentralGravitySolver2 = _interopRequireDefault(_CentralGravitySolver);\nvar _FA2BasedRepulsionSolver = __webpack_require__(97);\nvar _FA2BasedRepulsionSolver2 = _interopRequireDefault(_FA2BasedRepulsionSolver);\nvar _FA2BasedCentralGravitySolver = __webpack_require__(98);\nvar _FA2BasedCentralGravitySolver2 = _interopRequireDefault(_FA2BasedCentralGravitySolver);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar PhysicsEngine = function () {\n    function PhysicsEngine(body) {\n      _classCallCheck(this, PhysicsEngine);\n    this.body = body;\n      this.physicsBody = { physicsNodeIndices: [], physicsEdgeIndices: [], forces: {}, velocities: {} };\n    this.physicsEnabled = true;\n      this.simulationInterval = 1000 / 60;\n      this.requiresTimeout = true;\n      this.previousStates = {};\n      this.referenceState = {};\n      this.freezeCache = {};\n      this.renderTimer = undefined;\n    // parameters for the adaptive timestep\n      this.adaptiveTimestep = false;\n      this.adaptiveTimestepEnabled = false;\n      this.adaptiveCounter = 0;\n      this.adaptiveInterval = 3;\n    this.stabilized = false;\n      this.startedStabilization = false;\n      this.stabilizationIterations = 0;\n      this.ready = false; // will be set to true if the stabilize\n    // default options\n      this.options = {};\n      this.defaultOptions = {\n        enabled: true,\n        barnesHut: {\n          theta: 0.5,\n          gravitationalConstant: -2000,\n          centralGravity: 0.3,\n          springLength: 95,\n          springConstant: 0.04,\n          damping: 0.09,\n          avoidOverlap: 0\n        },\n        forceAtlas2Based: {\n          theta: 0.5,\n          gravitationalConstant: -50,\n          centralGravity: 0.01,\n          springConstant: 0.08,\n          springLength: 100,\n          damping: 0.4,\n          avoidOverlap: 0\n        },\n        repulsion: {\n          centralGravity: 0.2,\n          springLength: 200,\n          springConstant: 0.05,\n          nodeDistance: 100,\n          damping: 0.09,\n          avoidOverlap: 0\n        },\n        hierarchicalRepulsion: {\n          centralGravity: 0.0,\n          springLength: 100,\n          springConstant: 0.01,\n          nodeDistance: 120,\n          damping: 0.09\n        },\n        maxVelocity: 50,\n        minVelocity: 0.75, // px/s\n        solver: 'barnesHut',\n        stabilization: {\n          enabled: true,\n          iterations: 1000, // maximum number of iteration to stabilize\n          updateInterval: 50,\n          onlyDynamicEdges: false,\n          fit: true\n        },\n        timestep: 0.5,\n        adaptiveTimestep: true\n      };\n      util.extend(this.options, this.defaultOptions);\n      this.timestep = 0.5;\n      this.layoutFailed = false;\n    this.bindEventListeners();\n    }\n  _createClass(PhysicsEngine, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this = this;\n      this.body.emitter.on('initPhysics', function () {\n          _this.initPhysics();\n        });\n        this.body.emitter.on('_layoutFailed', function () {\n          _this.layoutFailed = true;\n        });\n        this.body.emitter.on('resetPhysics', function () {\n          _this.stopSimulation();_this.ready = false;\n        });\n        this.body.emitter.on('disablePhysics', function () {\n          _this.physicsEnabled = false;_this.stopSimulation();\n        });\n        this.body.emitter.on('restorePhysics', function () {\n          _this.setOptions(_this.options);\n          if (_this.ready === true) {\n            _this.startSimulation();\n          }\n        });\n        this.body.emitter.on('startSimulation', function () {\n          if (_this.ready === true) {\n            _this.startSimulation();\n          }\n        });\n        this.body.emitter.on('stopSimulation', function () {\n          _this.stopSimulation();\n        });\n        this.body.emitter.on('destroy', function () {\n          _this.stopSimulation(false);\n          _this.body.emitter.off();\n        });\n        // this event will trigger a rebuilding of the cache everything. Used when nodes or edges have been added or removed.\n        this.body.emitter.on(\"_dataChanged\", function () {\n          // update shortcut lists\n          _this.updatePhysicsData();\n        });\n      // debug: show forces\n        // this.body.emitter.on(\"afterDrawing\", (ctx) => {this._drawForces(ctx);});\n      }\n    /**\n       * set the physics options\n       * @param options",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34590,
            "description": "configure the engine.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34624,
            "description": "initialize the engine",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34646,
            "description": "Start the simulation",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34671,
            "description": "Stop the simulation, force stabilization.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34693,
            "description": "The viewFunction inserts this step into each render loop. It calls the physics tick and handles the cleanup at stabilized.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34719,
            "description": "trigger the stabilized event.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34740,
            "description": "A single simulation step (or 'tick') in the physics simulation",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34819,
            "description": "Nodes and edges can have the physics toggles on or off. A collection of indices is created here so we can skip the check all the time.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34871,
            "description": "Revert the simulation one step. This is done so after stabilization, every new start of the simulation will also say stabilized.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34901,
            "description": "This compares the reference state to the current state",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34930,
            "description": "move the nodes one timestep and check if they are stabilized",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 34959,
            "description": "Perform the actual step",
            "params": [
                {
                    "name": "nodeId",
                    "description": ""
                },
                {
                    "name": "maxVelocity",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35005,
            "description": "calculate the forces for one physics iteration.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35017,
            "description": "When initializing and stabilizing, we can freeze nodes with a predefined position. This greatly speeds up stabilization\nbecause only the supportnodes for the smoothCurves have to settle.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35039,
            "description": "Unfreezes the nodes that have been frozen by _freezeDefinedNodes.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35060,
            "description": "Find a stable position for all nodes",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35108,
            "description": "One batch of stabilization",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35136,
            "description": "Wrap up the stabilization, fit and emit the events.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35199,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35201,
            "description": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar BarnesHutSolver = function () {\n    function BarnesHutSolver(body, physicsBody, options) {\n      _classCallCheck(this, BarnesHutSolver);\n    this.body = body;\n      this.physicsBody = physicsBody;\n      this.barnesHutTree;\n      this.setOptions(options);\n      this.randomSeed = 5;\n    // debug: show grid\n      //this.body.emitter.on(\"afterDrawing\", (ctx) => {this._debug(ctx,'#ff0000')})\n    }\n  _createClass(BarnesHutSolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n        this.thetaInversed = 1 / this.options.theta;\n        this.overlapAvoidanceFactor = 1 - Math.max(0, Math.min(1, this.options.avoidOverlap)); // if 1 then min distance = 0.5, if 0.5 then min distance = 0.5 + 0.5*node.shape.radius\n      }\n    }, {\n      key: \"seededRandom\",\n      value: function seededRandom() {\n        var x = Math.sin(this.randomSeed++) * 10000;\n        return x - Math.floor(x);\n      }\n    /**\n       * This function calculates the forces the nodes apply on each other based on a gravitational model.\n       * The Barnes Hut method is used to speed up this N-body simulation.\n       *\n       * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35277,
            "description": "This function traverses the barnesHutTree. It checks when it can approximate distant nodes with their center of mass.\nIf a region contains a single node, we check if it is not itself, then we apply the force.",
            "params": [
                {
                    "name": "parentBranch",
                    "description": ""
                },
                {
                    "name": "node",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35323,
            "description": "Calculate the forces based on the distance.",
            "params": [
                {
                    "name": "distance",
                    "description": ""
                },
                {
                    "name": "dx",
                    "description": ""
                },
                {
                    "name": "dy",
                    "description": ""
                },
                {
                    "name": "node",
                    "description": ""
                },
                {
                    "name": "parentBranch",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35356,
            "description": "This function constructs the barnesHut tree recursively. It creates the root, splits it and starts placing the nodes.",
            "params": [
                {
                    "name": "nodes",
                    "description": ""
                },
                {
                    "name": "nodeIndices",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35442,
            "description": "this updates the mass of a branch. this is increased by adding a node.",
            "params": [
                {
                    "name": "parentBranch",
                    "description": ""
                },
                {
                    "name": "node",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35467,
            "description": "determine in which branch the node will be placed.",
            "params": [
                {
                    "name": "parentBranch",
                    "description": ""
                },
                {
                    "name": "node",
                    "description": ""
                },
                {
                    "name": "skipMassUpdate",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35505,
            "description": "actually place the node in a region (or branch)",
            "params": [
                {
                    "name": "parentBranch",
                    "description": ""
                },
                {
                    "name": "node",
                    "description": ""
                },
                {
                    "name": "region",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35543,
            "description": "this function splits a branch into 4 sub branches. If the branch contained a node, we place it in the subbranch\nafter the split is complete.",
            "params": [
                {
                    "name": "parentBranch",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35574,
            "description": "This function subdivides the region into four new segments.\nSpecifically, this inserts a single new segment.\nIt fills the children section of the parentBranch",
            "params": [
                {
                    "name": "parentBranch",
                    "description": ""
                },
                {
                    "name": "region",
                    "description": ""
                },
                {
                    "name": "parentRange",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35635,
            "description": "This function is for debugging purposed, it draws the tree.",
            "params": [
                {
                    "name": "ctx",
                    "description": ""
                },
                {
                    "name": "color",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35654,
            "description": "This function is for debugging purposes. It draws the branches recursively.",
            "params": [
                {
                    "name": "branch",
                    "description": ""
                },
                {
                    "name": "ctx",
                    "description": ""
                },
                {
                    "name": "color",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35711,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35713,
            "description": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar RepulsionSolver = function () {\n    function RepulsionSolver(body, physicsBody, options) {\n      _classCallCheck(this, RepulsionSolver);\n    this.body = body;\n      this.physicsBody = physicsBody;\n      this.setOptions(options);\n    }\n  _createClass(RepulsionSolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n      /**\n       * Calculate the forces the nodes apply on each other based on a repulsion field.\n       * This field is linearly approximated.\n       *\n       * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35805,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35807,
            "description": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar HierarchicalRepulsionSolver = function () {\n    function HierarchicalRepulsionSolver(body, physicsBody, options) {\n      _classCallCheck(this, HierarchicalRepulsionSolver);\n    this.body = body;\n      this.physicsBody = physicsBody;\n      this.setOptions(options);\n    }\n  _createClass(HierarchicalRepulsionSolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n    /**\n       * Calculate the forces the nodes apply on each other based on a repulsion field.\n       * This field is linearly approximated.\n       *\n       * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35896,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35898,
            "description": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar SpringSolver = function () {\n    function SpringSolver(body, physicsBody, options) {\n      _classCallCheck(this, SpringSolver);\n    this.body = body;\n      this.physicsBody = physicsBody;\n      this.setOptions(options);\n    }\n  _createClass(SpringSolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n    /**\n       * This function calculates the springforces on the nodes, accounting for the support nodes.\n       *\n       * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 35967,
            "description": "This is the code actually performing the calculation for the function above.",
            "params": [
                {
                    "name": "node1",
                    "description": ""
                },
                {
                    "name": "node2",
                    "description": ""
                },
                {
                    "name": "edgeLength",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36007,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36009,
            "description": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar HierarchicalSpringSolver = function () {\n    function HierarchicalSpringSolver(body, physicsBody, options) {\n      _classCallCheck(this, HierarchicalSpringSolver);\n    this.body = body;\n      this.physicsBody = physicsBody;\n      this.setOptions(options);\n    }\n  _createClass(HierarchicalSpringSolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n    /**\n       * This function calculates the springforces on the nodes, accounting for the support nodes.\n       *\n       * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36136,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36138,
            "description": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar CentralGravitySolver = function () {\n    function CentralGravitySolver(body, physicsBody, options) {\n      _classCallCheck(this, CentralGravitySolver);\n    this.body = body;\n      this.physicsBody = physicsBody;\n      this.setOptions(options);\n    }\n  _createClass(CentralGravitySolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n    }, {\n      key: \"solve\",\n      value: function solve() {\n        var dx = void 0,\n            dy = void 0,\n            distance = void 0,\n            node = void 0;\n        var nodes = this.body.nodes;\n        var nodeIndices = this.physicsBody.physicsNodeIndices;\n        var forces = this.physicsBody.forces;\n      for (var i = 0; i < nodeIndices.length; i++) {\n          var nodeId = nodeIndices[i];\n          node = nodes[nodeId];\n          dx = -node.x;\n          dy = -node.y;\n          distance = Math.sqrt(dx * dx + dy * dy);\n        this._calculateForces(distance, dx, dy, forces, node);\n        }\n      }\n    /**\n       * Calculate the forces based on the distance.\n       * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36205,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36207,
            "description": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _BarnesHutSolver2 = __webpack_require__(91);\nvar _BarnesHutSolver3 = _interopRequireDefault(_BarnesHutSolver2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar ForceAtlas2BasedRepulsionSolver = function (_BarnesHutSolver) {\n    _inherits(ForceAtlas2BasedRepulsionSolver, _BarnesHutSolver);\n  function ForceAtlas2BasedRepulsionSolver(body, physicsBody, options) {\n      _classCallCheck(this, ForceAtlas2BasedRepulsionSolver);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(ForceAtlas2BasedRepulsionSolver).call(this, body, physicsBody, options));\n    }\n  /**\n     * Calculate the forces based on the distance.\n     *\n     * @param distance\n     * @param dx\n     * @param dy\n     * @param node\n     * @param parentBranch\n     * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36279,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36281,
            "description": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _CentralGravitySolver2 = __webpack_require__(96);\nvar _CentralGravitySolver3 = _interopRequireDefault(_CentralGravitySolver2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar ForceAtlas2BasedCentralGravitySolver = function (_CentralGravitySolver) {\n    _inherits(ForceAtlas2BasedCentralGravitySolver, _CentralGravitySolver);\n  function ForceAtlas2BasedCentralGravitySolver(body, physicsBody, options) {\n      _classCallCheck(this, ForceAtlas2BasedCentralGravitySolver);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(ForceAtlas2BasedCentralGravitySolver).call(this, body, physicsBody, options));\n    }\n  /**\n     * Calculate the forces based on the distance.\n     * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36335,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36337,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NetworkUtil = __webpack_require__(100);\nvar _NetworkUtil2 = _interopRequireDefault(_NetworkUtil);\nvar _Cluster = __webpack_require__(101);\nvar _Cluster2 = _interopRequireDefault(_Cluster);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar ClusterEngine = function () {\n    function ClusterEngine(body) {\n      var _this = this;\n    _classCallCheck(this, ClusterEngine);\n    this.body = body;\n      this.clusteredNodes = {};\n      this.clusteredEdges = {};\n    this.options = {};\n      this.defaultOptions = {};\n      util.extend(this.options, this.defaultOptions);\n    this.body.emitter.on('_resetData', function () {\n        _this.clusteredNodes = {};_this.clusteredEdges = {};\n      });\n    }\n  _createClass(ClusterEngine, [{\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {}\n      }\n    /**\n      *\n      * @param hubsize\n      * @param options",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36419,
            "description": "loop over all nodes, check if they adhere to the condition and cluster if needed.",
            "params": [
                {
                    "name": "options",
                    "description": ""
                },
                {
                    "name": "refreshData",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36462,
            "description": "Cluster all nodes in the network that have only X edges",
            "params": [
                {
                    "name": "edgeCount",
                    "description": ""
                },
                {
                    "name": "options",
                    "description": ""
                },
                {
                    "name": "refreshData",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36546,
            "description": "Cluster all nodes in the network that have only 1 edge",
            "params": [
                {
                    "name": "options",
                    "description": ""
                },
                {
                    "name": "refreshData",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36560,
            "description": "Cluster all nodes in the network that have only 2 edge",
            "params": [
                {
                    "name": "options",
                    "description": ""
                },
                {
                    "name": "refreshData",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36574,
            "description": "suck all connected nodes of a node into the node.",
            "params": [
                {
                    "name": "nodeId",
                    "description": ""
                },
                {
                    "name": "options",
                    "description": ""
                },
                {
                    "name": "refreshData",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36645,
            "description": "This function creates the edges that will be attached to the cluster\nIt looks for edges that are connected to the nodes from the \"outside' of the cluster.",
            "params": [
                {
                    "name": "childNodesObj",
                    "description": ""
                },
                {
                    "name": "childEdgesObj",
                    "description": ""
                },
                {
                    "name": "clusterNodeProperties",
                    "description": ""
                },
                {
                    "name": "clusterEdgeProperties",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36733,
            "description": "This function checks the options that can be supplied to the different cluster functions\nfor certain fields and inserts defaults if needed",
            "params": [
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36756,
            "params": [
                {
                    "name": "childNodesObj",
                    "description": "| object with node objects, id as keys, same as childNodes except it also contains a source node",
                    "type": "Object"
                },
                {
                    "name": "childEdgesObj",
                    "description": "| object with edge objects, id as keys",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "| object with {clusterNodeProperties, clusterEdgeProperties, processProperties}",
                    "type": "Array"
                },
                {
                    "name": "refreshData",
                    "description": "| when true, do not wrap up",
                    "type": "Boolean"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36901,
            "description": "Check if a node is a cluster.",
            "params": [
                {
                    "name": "nodeId",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36918,
            "description": "get the position of the cluster node based on what's inside",
            "params": [
                {
                    "name": "childNodesObj",
                    "description": "| object with node objects, id as keys",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "}",
                "type": "X: number, y: number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 36945,
            "description": "Open a cluster by calling this function.",
            "params": [
                {
                    "name": "clusterNodeId",
                    "description": "| the ID of the cluster node",
                    "type": "String"
                },
                {
                    "name": "refreshData",
                    "description": "| wrap up afterwards if not true",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37113,
            "description": "Get the stack clusterId's that a certain node resides in. cluster A -> cluster B -> cluster C -> node",
            "params": [
                {
                    "name": "nodeId",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37137,
            "description": "Get the Id the node is connected to",
            "params": [
                {
                    "name": "edge",
                    "description": ""
                },
                {
                    "name": "nodeId",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37157,
            "description": "We determine how many connections denote an important hub.\nWe take the mean + 2*std as the important hub size. (Assuming a normal distribution of data, ~2.2%)",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37203,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37205,
            "description": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar NetworkUtil = function () {\n    function NetworkUtil() {\n      _classCallCheck(this, NetworkUtil);\n    }\n  /**\n     * Find the center position of the network considering the bounding boxes",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37263,
            "description": "Find the center position of the network",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37301,
            "params": [
                {
                    "name": "range",
                    "description": "= {minX: minX, maxX: maxX, minY: minY, maxY: maxY};",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "}",
                "type": "X: number, y: number"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37313,
            "description": "This returns a clone of the options or options of the edge or node to be used for construction of new edges or check functions for new nodes.",
            "params": [
                {
                    "name": "item",
                    "description": ""
                },
                {
                    "name": "type",
                    "description": ""
                }
            ],
            "return": {
                "description": "}"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37341,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37343,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _Node2 = __webpack_require__(62);\nvar _Node3 = _interopRequireDefault(_Node2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n/**\n   *",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37386,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37388,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nif (typeof window !== 'undefined') {\n    window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n  }\nvar util = __webpack_require__(1);\nvar CanvasRenderer = function () {\n    function CanvasRenderer(body, canvas) {\n      _classCallCheck(this, CanvasRenderer);\n    this.body = body;\n      this.canvas = canvas;\n    this.redrawRequested = false;\n      this.renderTimer = undefined;\n      this.requiresTimeout = true;\n      this.renderingActive = false;\n      this.renderRequests = 0;\n      this.pixelRatio = undefined;\n      this.allowRedraw = true;\n    this.dragging = false;\n      this.options = {};\n      this.defaultOptions = {\n        hideEdgesOnDrag: false,\n        hideNodesOnDrag: false\n      };\n      util.extend(this.options, this.defaultOptions);\n    this._determineBrowserMethod();\n      this.bindEventListeners();\n    }\n  _createClass(CanvasRenderer, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this = this;\n      this.body.emitter.on(\"dragStart\", function () {\n          _this.dragging = true;\n        });\n        this.body.emitter.on(\"dragEnd\", function () {\n          return _this.dragging = false;\n        });\n        this.body.emitter.on(\"_resizeNodes\", function () {\n          return _this._resizeNodes();\n        });\n        this.body.emitter.on(\"_redraw\", function () {\n          if (_this.renderingActive === false) {\n            _this._redraw();\n          }\n        });\n        this.body.emitter.on(\"_blockRedraw\", function () {\n          _this.allowRedraw = false;\n        });\n        this.body.emitter.on(\"_allowRedraw\", function () {\n          _this.allowRedraw = true;_this.redrawRequested = false;\n        });\n        this.body.emitter.on(\"_requestRedraw\", this._requestRedraw.bind(this));\n        this.body.emitter.on(\"_startRendering\", function () {\n          _this.renderRequests += 1;\n          _this.renderingActive = true;\n          _this._startRendering();\n        });\n        this.body.emitter.on(\"_stopRendering\", function () {\n          _this.renderRequests -= 1;\n          _this.renderingActive = _this.renderRequests > 0;\n          _this.renderTimer = undefined;\n        });\n        this.body.emitter.on('destroy', function () {\n          _this.renderRequests = 0;\n          _this.allowRedraw = false;\n          _this.renderingActive = false;\n          if (_this.requiresTimeout === true) {\n            clearTimeout(_this.renderTimer);\n          } else {\n            cancelAnimationFrame(_this.renderTimer);\n          }\n          _this.body.emitter.off();\n        });\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          var fields = ['hideEdgesOnDrag', 'hideNodesOnDrag'];\n          util.selectiveDeepExtend(fields, this.options, options);\n        }\n      }\n    }, {\n      key: '_startRendering',\n      value: function _startRendering() {\n        if (this.renderingActive === true) {\n          if (this.renderTimer === undefined) {\n            if (this.requiresTimeout === true) {\n              this.renderTimer = window.setTimeout(this._renderStep.bind(this), this.simulationInterval); // wait this.renderTimeStep milliseconds and perform the animation step function\n            } else {\n                this.renderTimer = window.requestAnimationFrame(this._renderStep.bind(this)); // wait this.renderTimeStep milliseconds and perform the animation step function\n              }\n          }\n        }\n      }\n    }, {\n      key: '_renderStep',\n      value: function _renderStep() {\n        if (this.renderingActive === true) {\n          // reset the renderTimer so a new scheduled animation step can be set\n          this.renderTimer = undefined;\n        if (this.requiresTimeout === true) {\n            // this schedules a new simulation step\n            this._startRendering();\n          }\n        this._redraw();\n        if (this.requiresTimeout === false) {\n            // this schedules a new simulation step\n            this._startRendering();\n          }\n        }\n      }\n    /**\n       * Redraw the network with the current data\n       * chart will be resized too.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37535,
            "description": "Redraw the network with the current data",
            "params": [
                {
                    "name": "hidden",
                    "description": "| used to get the first estimate of the node sizes. only the nodes are drawn after which they are quickly drawn over."
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37620,
            "description": "Redraw all nodes\nThe 2d context of a HTML canvas can be retrieved by canvas.getContext('2d');",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "alwaysShow",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37656,
            "description": "Redraw all nodes\nThe 2d context of a HTML canvas can be retrieved by canvas.getContext('2d');",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "alwaysShow",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37705,
            "description": "Redraw all edges\nThe 2d context of a HTML canvas can be retrieved by canvas.getContext('2d');",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37727,
            "description": "Determine if the browser requires a setTimeout or a requestAnimationFrame. This was required because\nsome implementations (safari and IE9) did not support requestAnimationFrame",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37759,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37761,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar Hammer = __webpack_require__(22);\n  var hammerUtil = __webpack_require__(25);\nvar util = __webpack_require__(1);\n/**\n   * Create the main frame for the Network.\n   * This function is executed once when a Network object is created. The frame\n   * contains a canvas, and this canvas contains all objects like the axis and\n   * nodes.\n   * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37869,
            "description": "Get and store the cameraState",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37890,
            "description": "Set the cameraState",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37942,
            "description": "Create the HTML",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 37989,
            "description": "This function binds hammer, it can be repeated over and over due to the uniqueness check.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38057,
            "description": "Set a new size for the network",
            "params": [
                {
                    "name": "width",
                    "description": "Width in pixels or percentage (for example '800px'\n                        or '50%')",
                    "type": "String"
                },
                {
                    "name": "height",
                    "description": "Height in pixels or percentage  (for example '400px'\n                        or '30%')",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38138,
            "description": "Convert the X coordinate in DOM-space (coordinate point in browser relative to the container div) to\nthe X coordinate in canvas-space (the simulation sandbox, which the camera looks upon)",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38149,
            "description": "Convert the X coordinate in canvas-space (the simulation sandbox, which the camera looks upon) to\nthe X coordinate in DOM-space (coordinate point in browser relative to the container div)",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38163,
            "description": "Convert the Y coordinate in DOM-space (coordinate point in browser relative to the container div) to\nthe Y coordinate in canvas-space (the simulation sandbox, which the camera looks upon)",
            "params": [
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38177,
            "description": "Convert the Y coordinate in canvas-space (the simulation sandbox, which the camera looks upon) to\nthe Y coordinate in DOM-space (coordinate point in browser relative to the container div)",
            "params": [
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38191,
            "params": [
                {
                    "name": "pos",
                    "description": "= {x: number, y: number}",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "}",
                "type": "X: number, y: number"
            },
            "is_constructor": 1,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38204,
            "params": [
                {
                    "name": "pos",
                    "description": "= {x: number, y: number}",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "}",
                "type": "X: number, y: number"
            },
            "is_constructor": 1,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38223,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38225,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NetworkUtil = __webpack_require__(100);\nvar _NetworkUtil2 = _interopRequireDefault(_NetworkUtil);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar View = function () {\n    function View(body, canvas) {\n      var _this = this;\n    _classCallCheck(this, View);\n    this.body = body;\n      this.canvas = canvas;\n    this.animationSpeed = 1 / this.renderRefreshRate;\n      this.animationEasingFunction = \"easeInOutQuint\";\n      this.easingTime = 0;\n      this.sourceScale = 0;\n      this.targetScale = 0;\n      this.sourceTranslation = 0;\n      this.targetTranslation = 0;\n      this.lockedOnNodeId = undefined;\n      this.lockedOnNodeOffset = undefined;\n      this.touchTime = 0;\n    this.viewFunction = undefined;\n    this.body.emitter.on(\"fit\", this.fit.bind(this));\n      this.body.emitter.on(\"animationFinished\", function () {\n        _this.body.emitter.emit(\"_stopRendering\");\n      });\n      this.body.emitter.on(\"unlockNode\", this.releaseNode.bind(this));\n    }\n  _createClass(View, [{\n      key: 'setOptions',\n      value: function setOptions() {\n        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n      this.options = options;\n      }\n    /**\n       * This function zooms out to fit all data on screen based on amount of nodes\n       * @param {Object} Options\n       * @param {Boolean} [initialZoom]  | zoom based on fitted formula or range, true = fitted, default = false;",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38350,
            "description": "Center a node in view.",
            "params": [
                {
                    "name": "nodeId",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38373,
            "params": [
                {
                    "name": "options",
                    "description": "|  options.offset   = {x:Number, y:Number}   // offset from the center in DOM pixels\n                          |  options.scale    = Number                 // scale to move to\n                          |  options.position = {x:Number, y:Number}   // position to move to\n                          |  options.animation = {duration:Number, easingFunction:String} || Boolean   // position to move to",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38422,
            "params": [
                {
                    "name": "options",
                    "description": "|  options.offset   = {x:Number, y:Number}   // offset from the center in DOM pixels\n                          |  options.time     = Number                 // animation time in milliseconds\n                          |  options.scale    = Number                 // scale to animate to\n                          |  options.position = {x:Number, y:Number}   // position to animate to\n                          |  options.easingFunction = String           // linear, easeInQuad, easeOutQuad, easeInOutQuad,\n                                                                       // easeInCubic, easeOutCubic, easeInOutCubic,\n                                                                       // easeInQuart, easeOutQuart, easeInOutQuart,\n                                                                       // easeInQuint, easeOutQuint, easeInOutQuint",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38491,
            "description": "used to animate smoothly by hijacking the redraw function.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38523,
            "params": [
                {
                    "name": "easingTime",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38573,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38575,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NavigationHandler = __webpack_require__(106);\nvar _NavigationHandler2 = _interopRequireDefault(_NavigationHandler);\nvar _Popup = __webpack_require__(107);\nvar _Popup2 = _interopRequireDefault(_Popup);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar InteractionHandler = function () {\n    function InteractionHandler(body, canvas, selectionHandler) {\n      _classCallCheck(this, InteractionHandler);\n    this.body = body;\n      this.canvas = canvas;\n      this.selectionHandler = selectionHandler;\n      this.navigationHandler = new _NavigationHandler2.default(body, canvas);\n    // bind the events from hammer to functions in this object\n      this.body.eventListeners.onTap = this.onTap.bind(this);\n      this.body.eventListeners.onTouch = this.onTouch.bind(this);\n      this.body.eventListeners.onDoubleTap = this.onDoubleTap.bind(this);\n      this.body.eventListeners.onHold = this.onHold.bind(this);\n      this.body.eventListeners.onDragStart = this.onDragStart.bind(this);\n      this.body.eventListeners.onDrag = this.onDrag.bind(this);\n      this.body.eventListeners.onDragEnd = this.onDragEnd.bind(this);\n      this.body.eventListeners.onMouseWheel = this.onMouseWheel.bind(this);\n      this.body.eventListeners.onPinch = this.onPinch.bind(this);\n      this.body.eventListeners.onMouseMove = this.onMouseMove.bind(this);\n      this.body.eventListeners.onRelease = this.onRelease.bind(this);\n      this.body.eventListeners.onContext = this.onContext.bind(this);\n    this.touchTime = 0;\n      this.drag = {};\n      this.pinch = {};\n      this.popup = undefined;\n      this.popupObj = undefined;\n      this.popupTimer = undefined;\n    this.body.functions.getPointer = this.getPointer.bind(this);\n    this.options = {};\n      this.defaultOptions = {\n        dragNodes: true,\n        dragView: true,\n        hover: false,\n        keyboard: {\n          enabled: false,\n          speed: { x: 10, y: 10, zoom: 0.02 },\n          bindToWindow: true\n        },\n        navigationButtons: false,\n        tooltipDelay: 300,\n        zoomView: true\n      };\n      util.extend(this.options, this.defaultOptions);\n    this.bindEventListeners();\n    }\n  _createClass(InteractionHandler, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this = this;\n      this.body.emitter.on('destroy', function () {\n          clearTimeout(_this.popupTimer);\n          delete _this.body.functions.getPointer;\n        });\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          // extend all but the values in fields\n          var fields = ['hideEdgesOnDrag', 'hideNodesOnDrag', 'keyboard', 'multiselect', 'selectable', 'selectConnectedEdges'];\n          util.selectiveNotDeepExtend(fields, this.options, options);\n        // merge the keyboard options in.\n          util.mergeOptions(this.options, options, 'keyboard');\n        if (options.tooltip) {\n            util.extend(this.options.tooltip, options.tooltip);\n            if (options.tooltip.color) {\n              this.options.tooltip.color = util.parseColor(options.tooltip.color);\n            }\n          }\n        }\n      this.navigationHandler.setOptions(this.options);\n      }\n    /**\n       * Get the pointer location from a touch location\n       * @param {{x: Number, y: Number}} touch\n       * @return {{x: Number, y: Number}} pointer\n       * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38698,
            "description": "On start of a touch gesture, store the pointer",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38716,
            "description": "handle tap/click event: select/unselect a node",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38731,
            "description": "handle doubletap event",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38743,
            "description": "handle long tap event: multi select nodes",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38760,
            "description": "handle the release of the screen",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38783,
            "params": [
                {
                    "name": "pointer",
                    "description": ""
                },
                {
                    "name": "add",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38852,
            "description": "This function checks if the nodes and edges previously selected have changed.",
            "params": [
                {
                    "name": "previousSelection",
                    "description": ""
                },
                {
                    "name": "currentSelection",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "NodesChanged: boolean, edgesChanged: boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38890,
            "description": "This function is called by onDragStart.\nIt is separated out because we can then overload it for the datamanipulation system.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 38952,
            "description": "handle drag event",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39015,
            "description": "handle drag start event",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39039,
            "description": "Handle pinch event",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39060,
            "description": "Zoom the network in or out",
            "params": [
                {
                    "name": "scale",
                    "description": "a number around 1, and between 0.01 and 10",
                    "type": "Number"
                },
                {
                    "name": "}",
                    "description": "pointer    Position on screen",
                    "type": "X: Number, y: Number"
                }
            ],
            "return": {
                "description": "appliedScale    scale is limited within the boundaries",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39112,
            "description": "Event handler for mouse wheel event, used to zoom the timeline\nSee http://adomas.org/javascript-mouse-wheel/\n    https://github.com/EightMedia/hammer.js/issues/256",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39161,
            "description": "Mouse move handler for checking whether the title moves over a node with a title.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39207,
            "description": "Adding hover highlights",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39220,
            "description": "Check if there is an element on the given position in the network\n(a node or edge). If so, and if this element has a title,\nshow a popup window with its title.",
            "params": [
                {
                    "name": "}",
                    "description": "pointer",
                    "type": "X:Number, y:Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39316,
            "description": "Check if the popup must be hidden, which is the case when the mouse is no\nlonger hovering on the object",
            "params": [
                {
                    "name": "}",
                    "description": "pointer",
                    "type": "X:Number, y:Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39361,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39363,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\n  var Hammer = __webpack_require__(22);\n  var hammerUtil = __webpack_require__(25);\n  var keycharm = __webpack_require__(43);\nvar NavigationHandler = function () {\n    function NavigationHandler(body, canvas) {\n      var _this = this;\n    _classCallCheck(this, NavigationHandler);\n    this.body = body;\n      this.canvas = canvas;\n    this.iconsCreated = false;\n      this.navigationHammers = [];\n      this.boundFunctions = {};\n      this.touchTime = 0;\n      this.activated = false;\n    this.body.emitter.on(\"activate\", function () {\n        _this.activated = true;_this.configureKeyboardBindings();\n      });\n      this.body.emitter.on(\"deactivate\", function () {\n        _this.activated = false;_this.configureKeyboardBindings();\n      });\n      this.body.emitter.on(\"destroy\", function () {\n        if (_this.keycharm !== undefined) {\n          _this.keycharm.destroy();\n        }\n      });\n    this.options = {};\n    }\n  _createClass(NavigationHandler, [{\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          this.options = options;\n          this.create();\n        }\n      }\n    }, {\n      key: 'create',\n      value: function create() {\n        if (this.options.navigationButtons === true) {\n          if (this.iconsCreated === false) {\n            this.loadNavigationElements();\n          }\n        } else if (this.iconsCreated === true) {\n          this.cleanNavigation();\n        }\n      this.configureKeyboardBindings();\n      }\n    }, {\n      key: 'cleanNavigation',\n      value: function cleanNavigation() {\n        // clean hammer bindings\n        if (this.navigationHammers.length != 0) {\n          for (var i = 0; i < this.navigationHammers.length; i++) {\n            this.navigationHammers[i].destroy();\n          }\n          this.navigationHammers = [];\n        }\n      // clean up previous navigation items\n        if (this.navigationDOM && this.navigationDOM['wrapper'] && this.navigationDOM['wrapper'].parentNode) {\n          this.navigationDOM['wrapper'].parentNode.removeChild(this.navigationDOM['wrapper']);\n        }\n      this.iconsCreated = false;\n      }\n    /**\n       * Creation of the navigation controls nodes. They are drawn over the rest of the nodes and are not affected by scale and translation\n       * they have a triggerFunction which is called on click. If the position of the navigation controls is dependent\n       * on this.frame.canvas.clientWidth or this.frame.canvas.clientHeight, we flag horizontalAlignLeft and verticalAlignTop false.\n       * This means that the location will be corrected by the _relocateNavigation function on a size change of the canvas.\n       *\n       * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39518,
            "description": "this stops all movement induced by the navigation buttons",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39534,
            "description": "this stops all movement induced by the navigation buttons",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39584,
            "description": "bind all keys using keycharm.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39690,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39692,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n   * Popup is a class to create a popup window with some text\n   * @param {Element}  container     The container object.\n   * @param {Number} [x]\n   * @param {Number} [y]\n   * @param {String} [text]\n   * @param {Object} [style]     An object containing borderColor,\n   *                             backgroundColor, etc.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39731,
            "params": [
                {
                    "name": "x",
                    "description": "Horizontal position of the popup window",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Vertical position of the popup window",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39744,
            "description": "Set the content for the popup window. This can be HTML code or text.",
            "params": [
                {
                    "name": "content",
                    "description": "",
                    "type": "String | Element"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39760,
            "description": "Show the popup window",
            "params": [
                {
                    "name": "doShow",
                    "description": "Show or hide the window",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39803,
            "description": "Hide the popup window",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39820,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39822,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _Node = __webpack_require__(62);\nvar _Node2 = _interopRequireDefault(_Node);\nvar _Edge = __webpack_require__(82);\nvar _Edge2 = _interopRequireDefault(_Edge);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar SelectionHandler = function () {\n    function SelectionHandler(body, canvas) {\n      var _this = this;\n    _classCallCheck(this, SelectionHandler);\n    this.body = body;\n      this.canvas = canvas;\n      this.selectionObj = { nodes: [], edges: [] };\n      this.hoverObj = { nodes: {}, edges: {} };\n    this.options = {};\n      this.defaultOptions = {\n        multiselect: false,\n        selectable: true,\n        selectConnectedEdges: true,\n        hoverConnectedEdges: true\n      };\n      util.extend(this.options, this.defaultOptions);\n    this.body.emitter.on(\"_dataChanged\", function () {\n        _this.updateSelection();\n      });\n    }\n  _createClass(SelectionHandler, [{\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          var fields = ['multiselect', 'hoverConnectedEdges', 'selectable', 'selectConnectedEdges'];\n          util.selectiveDeepExtend(fields, this.options, options);\n        }\n      }\n    /**\n       * handles the selection part of the tap;\n       *\n       * @param {Object} pointer\n       * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39972,
            "description": "retrieve all nodes overlapping with given object",
            "params": [
                {
                    "name": "object",
                    "description": "An object with parameters left, top, right, bottom",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "An array with id's of the overlapping nodes",
                "type": "Number[]"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 39993,
            "description": "Return a position object in canvasspace from a single point in screenspace",
            "params": [
                {
                    "name": "pointer",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "Left: number, top: number, right: number, bottom: number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40013,
            "description": "Get the top node at the a specific point (like a click)",
            "params": [
                {
                    "name": "}",
                    "description": "pointer",
                    "type": "X: Number, y: Number"
                }
            ],
            "return": {
                "description": "node",
                "type": "Node | undefined"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40041,
            "description": "retrieve all edges overlapping with given object, selector is around center",
            "params": [
                {
                    "name": "object",
                    "description": "An object with parameters left, top, right, bottom",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "An array with id's of the overlapping nodes",
                "type": "Number[]"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40060,
            "description": "retrieve all nodes overlapping with given object",
            "params": [
                {
                    "name": "object",
                    "description": "An object with parameters left, top, right, bottom",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "An array with id's of the overlapping nodes",
                "type": "Number[]"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40075,
            "description": "Place holder. To implement change the getNodeAt to a _getObjectAt. Have the _getObjectAt call\ngetNodeAt and _getEdgesAt, then priortize the selection to user preferences.",
            "params": [
                {
                    "name": "pointer",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40102,
            "description": "Add object to the selection array.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40119,
            "description": "Add object to the selection array.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40136,
            "description": "Remove a single option from selection.",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40154,
            "description": "Unselect all. The selectionObj is useful for this.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40175,
            "description": "return the number of selected nodes",
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40194,
            "description": "return the selected node",
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40212,
            "description": "return the selected edge",
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40230,
            "description": "return the number of selected edges",
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40249,
            "description": "return the number of selected objects.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40273,
            "description": "Check if anything is selected",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40296,
            "description": "check if one of the selected nodes is a cluster.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40316,
            "description": "select the edges connected to the node that is being selected",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40333,
            "description": "select the edges connected to the node that is being selected",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40350,
            "description": "unselect the edges connected to the node that is being selected",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40367,
            "description": "This is called when someone clicks on a node. either select or deselect it.\nIf there is an existing selection and we don't want to append to it, clear the existing selection",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Node || Edge"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40388,
            "description": "This is called when someone clicks on a node. either select or deselect it.\nIf there is an existing selection and we don't want to append to it, clear the existing selection",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Node || Edge"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40450,
            "description": "retrieve the currently selected objects",
            "return": {
                "description": "} selection",
                "type": "{nodes: Array.<String>, edges: Array.<String>"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40464,
            "description": "retrieve the currently selected nodes",
            "return": {
                "description": "selection    An array with the ids of the\n                                            selected nodes.",
                "type": "String[]"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40485,
            "description": "retrieve the currently selected edges",
            "return": {
                "description": "selection    An array with the ids of the\n                                            selected nodes.",
                "type": "Array"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40506,
            "description": "Updates the current selection",
            "params": [
                {
                    "name": "}",
                    "description": "Selection",
                    "type": "{nodes: Array.<String>, edges: Array.<String>"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40552,
            "description": "select zero or more nodes with the option to highlight edges",
            "params": [
                {
                    "name": "selection",
                    "description": "An array with the ids of the\n                                           selected nodes.",
                    "type": "Number[] | String[]"
                },
                {
                    "name": "highlightEdges",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40569,
            "description": "select zero or more edges",
            "params": [
                {
                    "name": "selection",
                    "description": "An array with the ids of the\n                                           selected nodes.",
                    "type": "Number[] | String[]"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40583,
            "description": "Validate the selection: remove ids of nodes which no longer exist",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40613,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40615,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NetworkUtil = __webpack_require__(100);\nvar _NetworkUtil2 = _interopRequireDefault(_NetworkUtil);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar LayoutEngine = function () {\n    function LayoutEngine(body) {\n      _classCallCheck(this, LayoutEngine);\n    this.body = body;\n    this.initialRandomSeed = Math.round(Math.random() * 1000000);\n      this.randomSeed = this.initialRandomSeed;\n      this.setPhysics = false;\n      this.options = {};\n      this.optionsBackup = { physics: {} };\n    this.defaultOptions = {\n        randomSeed: undefined,\n        improvedLayout: true,\n        hierarchical: {\n          enabled: false,\n          levelSeparation: 150,\n          nodeSpacing: 100,\n          treeSpacing: 200,\n          blockShifting: true,\n          edgeMinimization: true,\n          parentCentralization: true,\n          direction: 'UD', // UD, DU, LR, RL\n          sortMethod: 'hubsize' // hubsize, directed\n        }\n      };\n      util.extend(this.options, this.defaultOptions);\n      this.bindEventListeners();\n    }\n  _createClass(LayoutEngine, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this = this;\n      this.body.emitter.on('_dataChanged', function () {\n          _this.setupHierarchicalLayout();\n        });\n        this.body.emitter.on('_dataLoaded', function () {\n          _this.layoutNetwork();\n        });\n        this.body.emitter.on('_resetHierarchicalLayout', function () {\n          _this.setupHierarchicalLayout();\n        });\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options, allOptions) {\n        if (options !== undefined) {\n          var prevHierarchicalState = this.options.hierarchical.enabled;\n          util.selectiveDeepExtend([\"randomSeed\", \"improvedLayout\"], this.options, options);\n          util.mergeOptions(this.options, options, 'hierarchical');\n          if (options.randomSeed !== undefined) {\n            this.initialRandomSeed = options.randomSeed;\n          }\n        if (this.options.hierarchical.enabled === true) {\n            if (prevHierarchicalState === true) {\n              // refresh the overridden options for nodes and edges.\n              this.body.emitter.emit('refresh', true);\n            }\n          // make sure the level separation is the right way up\n            if (this.options.hierarchical.direction === 'RL' || this.options.hierarchical.direction === 'DU') {\n              if (this.options.hierarchical.levelSeparation > 0) {\n                this.options.hierarchical.levelSeparation *= -1;\n              }\n            } else {\n              if (this.options.hierarchical.levelSeparation < 0) {\n                this.options.hierarchical.levelSeparation *= -1;\n              }\n            }\n          this.body.emitter.emit('_resetHierarchicalLayout');\n            // because the hierarchical system needs it's own physics and smooth curve settings, we adapt the other options if needed.\n            return this.adaptAllOptionsForHierarchicalLayout(allOptions);\n          } else {\n            if (prevHierarchicalState === true) {\n              // refresh the overridden options for nodes and edges.\n              this.body.emitter.emit('refresh');\n              return util.deepExtend(allOptions, this.optionsBackup);\n            }\n          }\n        }\n        return allOptions;\n      }\n    }, {\n      key: 'adaptAllOptionsForHierarchicalLayout',\n      value: function adaptAllOptionsForHierarchicalLayout(allOptions) {\n        if (this.options.hierarchical.enabled === true) {\n          // set the physics\n          if (allOptions.physics === undefined || allOptions.physics === true) {\n            allOptions.physics = {\n              enabled: this.optionsBackup.physics.enabled === undefined ? true : this.optionsBackup.physics.enabled,\n              solver: 'hierarchicalRepulsion'\n            };\n            this.optionsBackup.physics.enabled = this.optionsBackup.physics.enabled === undefined ? true : this.optionsBackup.physics.enabled;\n            this.optionsBackup.physics.solver = this.optionsBackup.physics.solver || 'barnesHut';\n          } else if (_typeof(allOptions.physics) === 'object') {\n            this.optionsBackup.physics.enabled = allOptions.physics.enabled === undefined ? true : allOptions.physics.enabled;\n            this.optionsBackup.physics.solver = allOptions.physics.solver || 'barnesHut';\n            allOptions.physics.solver = 'hierarchicalRepulsion';\n          } else if (allOptions.physics !== false) {\n            this.optionsBackup.physics.solver = 'barnesHut';\n            allOptions.physics = { solver: 'hierarchicalRepulsion' };\n          }\n        // get the type of static smooth curve in case it is required\n          var type = 'horizontal';\n          if (this.options.hierarchical.direction === 'RL' || this.options.hierarchical.direction === 'LR') {\n            type = 'vertical';\n          }\n        // disable smooth curves if nothing is defined. If smooth curves have been turned on, turn them into static smooth curves.\n          if (allOptions.edges === undefined) {\n            this.optionsBackup.edges = { smooth: { enabled: true, type: 'dynamic' } };\n            allOptions.edges = { smooth: false };\n          } else if (allOptions.edges.smooth === undefined) {\n            this.optionsBackup.edges = { smooth: { enabled: true, type: 'dynamic' } };\n            allOptions.edges.smooth = false;\n          } else {\n            if (typeof allOptions.edges.smooth === 'boolean') {\n              this.optionsBackup.edges = { smooth: allOptions.edges.smooth };\n              allOptions.edges.smooth = { enabled: allOptions.edges.smooth, type: type };\n            } else {\n              // allow custom types except for dynamic\n              if (allOptions.edges.smooth.type !== undefined && allOptions.edges.smooth.type !== 'dynamic') {\n                type = allOptions.edges.smooth.type;\n              }\n            this.optionsBackup.edges = {\n                smooth: allOptions.edges.smooth.enabled === undefined ? true : allOptions.edges.smooth.enabled,\n                type: allOptions.edges.smooth.type === undefined ? 'dynamic' : allOptions.edges.smooth.type,\n                roundness: allOptions.edges.smooth.roundness === undefined ? 0.5 : allOptions.edges.smooth.roundness,\n                forceDirection: allOptions.edges.smooth.forceDirection === undefined ? false : allOptions.edges.smooth.forceDirection\n              };\n              allOptions.edges.smooth = {\n                enabled: allOptions.edges.smooth.enabled === undefined ? true : allOptions.edges.smooth.enabled,\n                type: type,\n                roundness: allOptions.edges.smooth.roundness === undefined ? 0.5 : allOptions.edges.smooth.roundness,\n                forceDirection: allOptions.edges.smooth.forceDirection === undefined ? false : allOptions.edges.smooth.forceDirection\n              };\n            }\n          }\n        // force all edges into static smooth curves. Only applies to edges that do not use the global options for smooth.\n          this.body.emitter.emit('_forceDisableDynamicCurves', type);\n        }\n      return allOptions;\n      }\n    }, {\n      key: 'seededRandom',\n      value: function seededRandom() {\n        var x = Math.sin(this.randomSeed++) * 10000;\n        return x - Math.floor(x);\n      }\n    }, {\n      key: 'positionInitially',\n      value: function positionInitially(nodesArray) {\n        if (this.options.hierarchical.enabled !== true) {\n          this.randomSeed = this.initialRandomSeed;\n          for (var i = 0; i < nodesArray.length; i++) {\n            var node = nodesArray[i];\n            var radius = 10 * 0.1 * nodesArray.length + 10;\n            var angle = 2 * Math.PI * this.seededRandom();\n            if (node.x === undefined) {\n              node.x = radius * Math.cos(angle);\n            }\n            if (node.y === undefined) {\n              node.y = radius * Math.sin(angle);\n            }\n          }\n        }\n      }\n    /**\n       * Use Kamada Kawai to position nodes. This is quite a heavy algorithm so if there are a lot of nodes we\n       * cluster them first to reduce the amount.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40889,
            "description": "Move all the nodes towards to the center so gravitational pull wil not move the nodes away from view",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 40927,
            "description": "This is the main function to layout the nodes in a hierarchical way.\nIt checks if the node details are supplied correctly",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41012,
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41452,
            "description": "This gives the space around the node. IF a map is supplied, it will only check against nodes NOT in the map.\nThis is used to only get the distances to nodes outside of a branch.",
            "params": [
                {
                    "name": "node",
                    "description": ""
                },
                {
                    "name": "map",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*[]"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41496,
            "description": "We use this method to center a parent node and check if it does not cross other nodes when it does.",
            "params": [
                {
                    "name": "node",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41542,
            "description": "This function places the nodes on the canvas based on the hierarchial distribution.",
            "params": [
                {
                    "name": "distribution",
                    "description": "| obtained by the function this._getDistribution()",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41580,
            "description": "This is a recursively called function to enumerate the branches from the largest hubs and place the nodes\non a X position that ensures there will be no overlap.",
            "params": [
                {
                    "name": "parentId",
                    "description": ""
                },
                {
                    "name": "parentLevel",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41639,
            "description": "This method checks for overlap and if required shifts the branch. It also keeps records of positioned nodes.\nFinally it will call _placeBranchNodes to place the branch nodes.",
            "params": [
                {
                    "name": "node",
                    "description": ""
                },
                {
                    "name": "level",
                    "description": ""
                },
                {
                    "name": "pos",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41669,
            "description": "Receives an array with node indices and returns an array with the actual node references. Used for sorting based on\nnode properties.",
            "params": [
                {
                    "name": "idArray",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41685,
            "description": "This function get the distribution of levels based on hubsize",
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41721,
            "description": "Get the hubsize from all remaining unlevelled nodes.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41743,
            "description": "this function allocates nodes in levels based on the recursive branching from the largest hubs.",
            "params": [
                {
                    "name": "hubsize",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41784,
            "description": "TODO: release feature",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41815,
            "description": "this function allocates nodes in levels based on the direction of the edges",
            "params": [
                {
                    "name": "hubsize",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41844,
            "description": "Small util method to set the minimum levels of the nodes to zero.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41872,
            "description": "Update the bookkeeping of parent and child.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41900,
            "description": "Crawl over the entire network and use a callback on each node couple that is connected to each other.",
            "params": [
                {
                    "name": "callback",
                    "description": "| will receive nodeA nodeB and the connecting edge. A and B are unique."
                },
                {
                    "name": "startingNodeId",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41964,
            "description": "Shift a branch a certain distance",
            "params": [
                {
                    "name": "parentId",
                    "description": ""
                },
                {
                    "name": "diff",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 41986,
            "description": "Find a common parent between branches.",
            "params": [
                {
                    "name": "childA",
                    "description": ""
                },
                {
                    "name": "childB",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "FoundParent, withChild"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42029,
            "description": "Abstract the getting of the position so we won't have to repeat the check for direction all the time",
            "params": [
                {
                    "name": "node",
                    "description": ""
                },
                {
                    "name": "position",
                    "description": ""
                },
                {
                    "name": "level",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42063,
            "description": "Abstract the getting of the position of a node so we do not have to repeat the direction check all the time.",
            "params": [
                {
                    "name": "node",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number|*"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42080,
            "description": "Use the x or y value to sort the array, allowing users to specify order.",
            "params": [
                {
                    "name": "nodeArray",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42108,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42110,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\n  var Hammer = __webpack_require__(22);\n  var hammerUtil = __webpack_require__(25);\n/**\n   * clears the toolbar div element of children\n   *\n   * @private",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42184,
            "description": "If something changes in the data during editing, switch back to the initial datamanipulation state and close all edit modes.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42202,
            "description": "Set the Options",
            "params": [
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42237,
            "description": "Enable or disable edit-mode. Draws the DOM required and cleans up after itself.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42279,
            "description": "Creates the main toolbar. Removes functions bound to the select event. Binds all the buttons of the toolbar.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42362,
            "description": "Create the toolbar for adding Nodes",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42392,
            "description": "call the bound function to handle the editing of the node. The node has to be selected.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42439,
            "description": "create the toolbar to connect nodes",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42476,
            "description": "create the toolbar to edit edges",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42552,
            "description": "delete everything in the selection",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42618,
            "description": "draw or remove the DOM",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42644,
            "description": "create the div overlays that contain the DOM",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42685,
            "description": "generate a new target node. Used for creating new edges and editing edges",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42711,
            "description": "Create the edit button",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42736,
            "description": "this function cleans up after everything this module does. Temporary elements, functions and events are removed, physics restored, hammers removed.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42769,
            "description": "Each dom element has it's own hammer. They are stored in this.manipulationHammers. This cleans them up.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42786,
            "description": "Remove all DOM elements created by this module.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42819,
            "description": "create a seperator line. the index is to differentiate in the manipulation dom",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42901,
            "description": "this binds an event until cleanup by the clean functions.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                },
                {
                    "name": "newFunction",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42915,
            "description": "this overrides an UI function until cleanup by the clean function",
            "params": [
                {
                    "name": "UIfunctionName",
                    "description": ""
                },
                {
                    "name": "newFunction",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42933,
            "description": "Restore the overridden UI functions to their original state.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42951,
            "description": "Unbind the events created by _temporaryBindEvent",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42967,
            "description": "Bind an hammer instance to a DOM element.",
            "params": [
                {
                    "name": "domElement",
                    "description": ""
                },
                {
                    "name": "funct",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 42981,
            "description": "Neatly clean up temporary edges and nodes",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 43013,
            "description": "the touch is used to get the position of the initial click",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 43027,
            "description": "the drag start is used to mark one of the control nodes as selected.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 43062,
            "description": "dragging the control nodes or the canvas",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 43086,
            "description": "connecting or restoring the control nodes.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 43135,
            "description": "the function bound to the selection event. It checks if you want to connect a cluster and changes the description\nto walk the user through the process.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 43200,
            "description": "Connect the new edge to the target if one exists, otherwise remove temp line",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 43249,
            "description": "Adds a node on the specified location",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 43284,
            "description": "connect two nodes with a new edge.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 43316,
            "description": "connect two nodes with a new edge.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 43357,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 43359,
            "description": "'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * This object contains all possible options. It will check if the types are correct, if required if the option is one\n   * of the allowed values.\n   *\n   * __any__ means that the name of the property does not matter.\n   * __type__ is a required field for all objects and contains the allowed types of all objects",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 43876,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 43878,
            "description": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // distance finding algorithm\n\nvar _FloydWarshall = __webpack_require__(113);\nvar _FloydWarshall2 = _interopRequireDefault(_FloydWarshall);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n   * KamadaKawai positions the nodes initially based on\n   *\n   * \"AN ALGORITHM FOR DRAWING GENERAL UNDIRECTED GRAPHS\"\n   * -- Tomihisa KAMADA and Satoru KAWAI in 1989\n   *\n   * Possible optimizations in the distance calculation can be implemented.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 43918,
            "description": "Not sure if needed but can be used to update the spring length and spring constant",
            "params": [
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 43937,
            "description": "Position the system",
            "params": [
                {
                    "name": "nodesArray",
                    "description": ""
                },
                {
                    "name": "edgesArray",
                    "description": ""
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44000,
            "description": "get the node with the highest energy",
            "return": {
                "description": "",
                "type": "*[]"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44040,
            "description": "calculate the energy of a single node",
            "params": [
                {
                    "name": "m",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*[]"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44072,
            "description": "move the node based on it's energy\nthe dx and dy are calculated from the linear system proposed by Kamada and Kawai",
            "params": [
                {
                    "name": "m",
                    "description": ""
                },
                {
                    "name": "dE_dx",
                    "description": ""
                },
                {
                    "name": "dE_dy",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44119,
            "description": "Create the L matrix: edge length times shortest path",
            "params": [
                {
                    "name": "D_matrix",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44140,
            "description": "Create the K matrix: spring constants times shortest path",
            "params": [
                {
                    "name": "D_matrix",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44167,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44169,
            "description": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n   * Created by Alex on 10-Aug-15.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44237,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44239,
            "description": "'use strict';\n/**\n   * Canvas shapes used by Network",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44248,
            "description": "Draw a circle shape",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44257,
            "description": "Draw a square shape",
            "params": [
                {
                    "name": "x",
                    "description": "horizontal center",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "vertical center",
                    "type": "Number"
                },
                {
                    "name": "r",
                    "description": "size, width and height of the square",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44269,
            "description": "Draw a triangle shape",
            "params": [
                {
                    "name": "x",
                    "description": "horizontal center",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "vertical center",
                    "type": "Number"
                },
                {
                    "name": "r",
                    "description": "radius, half the length of the sides of the triangle",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44295,
            "description": "Draw a triangle shape in downward orientation",
            "params": [
                {
                    "name": "x",
                    "description": "horizontal center",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "vertical center",
                    "type": "Number"
                },
                {
                    "name": "r",
                    "description": "radius",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44321,
            "description": "Draw a star shape, a star with 5 points",
            "params": [
                {
                    "name": "x",
                    "description": "horizontal center",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "vertical center",
                    "type": "Number"
                },
                {
                    "name": "r",
                    "description": "radius, half the length of the sides of the triangle",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44343,
            "description": "Draw a Diamond shape",
            "params": [
                {
                    "name": "x",
                    "description": "horizontal center",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "vertical center",
                    "type": "Number"
                },
                {
                    "name": "r",
                    "description": "radius, half the length of the sides of the triangle",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44361,
            "description": "http://stackoverflow.com/questions/1255512/how-to-draw-a-rounded-rectangle-on-html-canvas",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44385,
            "description": "http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44411,
            "description": "http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44453,
            "description": "Draw an arrow point (no line)",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44481,
            "description": "Sets up the dashedLine functionality for drawing\nOriginal code came from http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas",
            "author": "David Jordan",
            "date": "2012-08-08",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44524,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44526,
            "description": "'use strict';\n/**\n   * Parse a text source containing data in DOT language into a JSON object.\n   * The object contains two lists: one with nodes and one with edges.\n   *\n   * DOT language reference: http://www.graphviz.org/doc/info/lang.html\n   *\n   * DOT language attributes: http://graphviz.org/content/attrs\n   *\n   * @param {String} data     Text containing a graph in DOT-notation\n   * @return {Object} graph   An object containing two parameters:\n   *                          {Object[]} nodes\n   *                          {Object[]} edges",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44590,
            "description": "Get the first character from the dot file.\nThe character is stored into the char c. If the end of the dot file is\nreached, the function puts an empty string in c.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44600,
            "description": "Get the next character from the dot file.\nThe character is stored into the char c. If the end of the dot file is\nreached, the function puts an empty string in c.",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44610,
            "description": "Preview the next character from the dot file.",
            "return": {
                "description": "cNext",
                "type": "String"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44618,
            "description": "Test whether given character is alphabetic or numeric",
            "params": [
                {
                    "name": "c",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "isAlphaNumeric",
                "type": "Boolean"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44628,
            "description": "Merge all options of object b into object b",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "a",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44649,
            "description": "Set a value in an object, where the provided parameter name can be a\npath with nested parameters. For example:\n\n    var obj = {a: 2};\n    setValue(obj, 'b.c', 3);     // obj = {a: 2, b: {c: 3}}",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "path",
                    "description": "A parameter name or dot-separated parameter path,\n                     like \"color.highlight.border\".",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "*"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44679,
            "description": "Add a node to a graph object. If there is already a node with\nthe same id, their attributes will be merged.",
            "params": [
                {
                    "name": "graph",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "node",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44736,
            "description": "Add an edge to a graph object",
            "params": [
                {
                    "name": "graph",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "edge",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44752,
            "description": "Create an edge to a graph object",
            "params": [
                {
                    "name": "graph",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "from",
                    "description": "",
                    "type": "String | Number | Object"
                },
                {
                    "name": "to",
                    "description": "",
                    "type": "String | Number | Object"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "attr",
                    "description": "",
                    "type": "Object | null"
                }
            ],
            "return": {
                "description": "edge",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44776,
            "description": "Get next token in the current dot file.\nThe token and token type are available as token and tokenType",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44911,
            "description": "Parse a graph.",
            "return": {
                "description": "graph",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44968,
            "description": "Parse a list with statements.",
            "params": [
                {
                    "name": "graph",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 44981,
            "description": "Parse a single statement. Can be a an attribute statement, node\nstatement, a series of node statements and edge statements, or a\nparameter.",
            "params": [
                {
                    "name": "graph",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 45024,
            "description": "Parse a subgraph",
            "params": [
                {
                    "name": "graph",
                    "description": "parent graph object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "subgraph",
                "type": "Object | null"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 45082,
            "description": "parse an attribute statement like \"node [shape=circle fontSize=16]\".\nAvailable keywords are 'node', 'edge', 'graph'.\nThe previous list with default attributes will be replaced",
            "params": [
                {
                    "name": "graph",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "keyword Returns the name of the parsed attribute\n                                 (node, edge, graph), or null if nothing\n                                 is parsed.",
                "type": "String | null"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 45116,
            "description": "parse a node statement",
            "params": [
                {
                    "name": "graph",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "String | Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 45136,
            "description": "Parse an edge or a series of edges",
            "params": [
                {
                    "name": "graph",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "from",
                    "description": "Id of the from node",
                    "type": "String | Number"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 45172,
            "description": "Parse a set with attributes,\nfor example [label=\"1.000\", shape=solid]",
            "return": {
                "description": "attr",
                "type": "Object | null"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 45216,
            "description": "Create a syntax error with extra information on current token and index.",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "err",
                "type": "SyntaxError"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 45225,
            "description": "Chop off text after a maximum length",
            "params": [
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "maxLength",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 45235,
            "description": "Execute a function fn for each pair of elements in two arrays",
            "params": [
                {
                    "name": "array1",
                    "description": "",
                    "type": "Array | *"
                },
                {
                    "name": "array2",
                    "description": "",
                    "type": "Array | *"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 45263,
            "description": "Set a nested property on an object\nWhen nested objects are missing, they will be created.\nFor example setProp({}, 'font.color', 'red') will return {font: {color: 'red'}}",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "path",
                    "description": "A dot separated string like 'font.color'",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Value for the property",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the original object, allows for chaining.",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 45292,
            "description": "Convert an object with DOT attributes to their vis.js equivalents.",
            "params": [
                {
                    "name": "attr",
                    "description": "Object with DOT attributes",
                    "type": "Object"
                },
                {
                    "name": "mapping",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns an object with vis.js attributes",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 45319,
            "description": "Convert a string containing a graph in DOT language into a map containing\nwith nodes and edges in the format of graph.",
            "params": [
                {
                    "name": "data",
                    "description": "Text containing a graph in DOT-notation",
                    "type": "String"
                }
            ],
            "return": {
                "description": "graphData",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 45351,
            "description": "Convert an edge in DOT format to an edge with VisGraph format",
            "params": [
                {
                    "name": "dotEdge",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "graphEdge",
                "type": "Object"
            },
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 45422,
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 45424,
            "description": "'use strict';\nfunction parseGephi(gephiJSON, optionsObj) {\n    var edges = [];\n    var nodes = [];\n    var options = {\n      edges: {\n        inheritColor: false\n      },\n      nodes: {\n        fixed: false,\n        parseColor: false\n      }\n    };\n  if (optionsObj !== undefined) {\n      if (optionsObj.fixed !== undefined) {\n        options.nodes.fixed = optionsObj.fixed;\n      }\n      if (optionsObj.parseColor !== undefined) {\n        options.nodes.parseColor = optionsObj.parseColor;\n      }\n      if (optionsObj.inheritColor !== undefined) {\n        options.edges.inheritColor = optionsObj.inheritColor;\n      }\n    }\n  var gEdges = gephiJSON.edges;\n    var gNodes = gephiJSON.nodes;\n    for (var i = 0; i < gEdges.length; i++) {\n      var edge = {};\n      var gEdge = gEdges[i];\n      edge['id'] = gEdge.id;\n      edge['from'] = gEdge.source;\n      edge['to'] = gEdge.target;\n      edge['attributes'] = gEdge.attributes;\n      edge['label'] = gEdge.label;\n      edge['title'] = gEdge.attributes !== undefined ? gEdge.attributes.title : undefined;\n      if (gEdge['type'] === 'Directed') {\n        edge['arrows'] = 'to';\n      }\n      //    edge['value'] = gEdge.attributes !== undefined ? gEdge.attributes.Weight : undefined;\n      //    edge['width'] = edge['value'] !== undefined ? undefined : edgegEdge.size;\n      if (gEdge.color && options.inheritColor === false) {\n        edge['color'] = gEdge.color;\n      }\n      edges.push(edge);\n    }\n  for (var i = 0; i < gNodes.length; i++) {\n      var node = {};\n      var gNode = gNodes[i];\n      node['id'] = gNode.id;\n      node['attributes'] = gNode.attributes;\n      node['title'] = gNode.title;\n      node['x'] = gNode.x;\n      node['y'] = gNode.y;\n      node['label'] = gNode.label;\n      node['title'] = gNode.attributes !== undefined ? gNode.attributes.title : undefined;\n      if (options.nodes.parseColor === true) {\n        node['color'] = gNode.color;\n      } else {\n        node['color'] = gNode.color !== undefined ? { background: gNode.color, border: gNode.color, highlight: { background: gNode.color, border: gNode.color }, hover: { background: gNode.color, border: gNode.color } } : undefined;\n      }\n      node['size'] = gNode.size;\n      node['fixed'] = options.nodes.fixed && gNode.x !== undefined && gNode.y !== undefined;\n      nodes.push(node);\n    }\n  return { nodes: nodes, edges: edges };\n  }\nexports.parseGephi = parseGephi;\n\n/***/ },",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.js",
            "line": 45502,
            "description": "'use strict';\n// English\n  exports['en'] = {\n    edit: 'Edit',\n    del: 'Delete selected',\n    back: 'Back',\n    addNode: 'Add Node',\n    addEdge: 'Add Edge',\n    editNode: 'Edit Node',\n    editEdge: 'Edit Edge',\n    addDescription: 'Click in an empty space to place a new node.',\n    edgeDescription: 'Click on a node and drag the edge to another node to connect them.',\n    editEdgeDescription: 'Click on the control points and drag them to a node to connect to it.',\n    createEdgeError: 'Cannot link edges to a cluster.',\n    deleteClusterError: 'Clusters cannot be deleted.',\n    editClusterError: 'Clusters cannot be edited.'\n  };\n  exports['en_EN'] = exports['en'];\n  exports['en_US'] = exports['en'];\n// German\n  exports['de'] = {\n    edit: 'Editieren',\n    del: 'Lösche Auswahl',\n    back: 'Zurück',\n    addNode: 'Knoten hinzufügen',\n    addEdge: 'Kante hinzufügen',\n    editNode: 'Knoten editieren',\n    editEdge: 'Kante editieren',\n    addDescription: 'Klicke auf eine freie Stelle, um einen neuen Knoten zu plazieren.',\n    edgeDescription: 'Klicke auf einen Knoten und ziehe die Kante zu einem anderen Knoten, um diese zu verbinden.',\n    editEdgeDescription: 'Klicke auf die Verbindungspunkte und ziehe diese auf einen Knoten, um sie zu verbinden.',\n    createEdgeError: 'Es ist nicht möglich, Kanten mit Clustern zu verbinden.',\n    deleteClusterError: 'Cluster können nicht gelöscht werden.',\n    editClusterError: 'Cluster können nicht editiert werden.'\n  };\n  exports['de_DE'] = exports['de'];\n// Spanish\n  exports['es'] = {\n    edit: 'Editar',\n    del: 'Eliminar selección',\n    back: 'Átras',\n    addNode: 'Añadir nodo',\n    addEdge: 'Añadir arista',\n    editNode: 'Editar nodo',\n    editEdge: 'Editar arista',\n    addDescription: 'Haga clic en un lugar vacío para colocar un nuevo nodo.',\n    edgeDescription: 'Haga clic en un nodo y arrastre la arista hacia otro nodo para conectarlos.',\n    editEdgeDescription: 'Haga clic en un punto de control y arrastrelo a un nodo para conectarlo.',\n    createEdgeError: 'No se puede conectar una arista a un grupo.',\n    deleteClusterError: 'No es posible eliminar grupos.',\n    editClusterError: 'No es posible editar grupos.'\n  };\n  exports['es_ES'] = exports['es'];\n// Dutch\n  exports['nl'] = {\n    edit: 'Wijzigen',\n    del: 'Selectie verwijderen',\n    back: 'Terug',\n    addNode: 'Node toevoegen',\n    addEdge: 'Link toevoegen',\n    editNode: 'Node wijzigen',\n    editEdge: 'Link wijzigen',\n    addDescription: 'Klik op een leeg gebied om een nieuwe node te maken.',\n    edgeDescription: 'Klik op een node en sleep de link naar een andere node om ze te verbinden.',\n    editEdgeDescription: 'Klik op de verbindingspunten en sleep ze naar een node om daarmee te verbinden.',\n    createEdgeError: 'Kan geen link maken naar een cluster.',\n    deleteClusterError: 'Clusters kunnen niet worden verwijderd.',\n    editClusterError: 'Clusters kunnen niet worden aangepast.'\n  };\n  exports['nl_NL'] = exports['nl'];\n  exports['nl_BE'] = exports['nl'];\n\n/***/ }\n/******/ ])\n});\n;",
            "class": "",
            "module": "Main"
        },
        {
            "file": "src\\libs\\vis\\vis.min.js",
            "line": 1,
            "description": "vis.js\nhttps://github.com/almende/vis\n\nA dynamic, browser-based visualization library.",
            "version": "4.15.1",
            "date": "2016-03-08",
            "license": "Copyright (C) 2011-2016 Almende B.V, http://almende.com\n\nVis.js is dual licensed under both\n\n* The Apache 2.0 License\n  http://www.apache.org/licenses/LICENSE-2.0\n\nand\n\n* The MIT License\n  http://opensource.org/licenses/MIT\n\nVis.js may be distributed under either license.",
            "class": "",
            "module": "Main"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: version",
            "line": " src\\libs\\vis\\vis.js:1"
        },
        {
            "message": "unknown tag: date",
            "line": " src\\libs\\vis\\vis.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " src\\libs\\vis\\vis.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:198"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:455"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:685"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:701"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:821"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:953"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:971"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:989"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:1007"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:1027"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:1041"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:1061"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:1083"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:1173"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:1257"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:1318"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:1341"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:1364"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:1414"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:1455"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:5575"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:5609"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:5651"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:6424"
        },
        {
            "message": "unknown tag: api",
            "line": " src\\libs\\vis\\vis.js:9517"
        },
        {
            "message": "unknown tag: api",
            "line": " src\\libs\\vis\\vis.js:9527"
        },
        {
            "message": "unknown tag: api",
            "line": " src\\libs\\vis\\vis.js:9542"
        },
        {
            "message": "unknown tag: api",
            "line": " src\\libs\\vis\\vis.js:9559"
        },
        {
            "message": "unknown tag: api",
            "line": " src\\libs\\vis\\vis.js:9583"
        },
        {
            "message": "unknown tag: api",
            "line": " src\\libs\\vis\\vis.js:9650"
        },
        {
            "message": "unknown tag: api",
            "line": " src\\libs\\vis\\vis.js:9663"
        },
        {
            "message": "unknown tag: pararm",
            "line": " src\\libs\\vis\\vis.js:10334"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:11087"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:11414"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:11489"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:12740"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:12762"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:12904"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:12915"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:12960"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:12983"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13014"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13034"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13064"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13076"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13090"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13141"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13151"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13182"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13191"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13225"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13248"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13257"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13298"
        },
        {
            "message": "unknown tag: virtual",
            "line": " src\\libs\\vis\\vis.js:13325"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13350"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13521"
        },
        {
            "message": "unknown tag: this",
            "line": " src\\libs\\vis\\vis.js:13862"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13862"
        },
        {
            "message": "unknown tag: this",
            "line": " src\\libs\\vis\\vis.js:13917"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:13917"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:14078"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:14150"
        },
        {
            "message": "unknown tag: virtual",
            "line": " src\\libs\\vis\\vis.js:14243"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:14262"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:14281"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:14296"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:14315"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:14333"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:14341"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:14394"
        },
        {
            "message": "unknown tag: virtual",
            "line": " src\\libs\\vis\\vis.js:14439"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:14439"
        },
        {
            "message": "unknown tag: virtual",
            "line": " src\\libs\\vis\\vis.js:14448"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:14448"
        },
        {
            "message": "unknown tag: virtual",
            "line": " src\\libs\\vis\\vis.js:14455"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:14463"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:14481"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:14499"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\libs\\vis\\vis.js:14523"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\libs\\vis\\vis.js:14535"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:14535"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\libs\\vis\\vis.js:14546"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:14546"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\libs\\vis\\vis.js:14588"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\libs\\vis\\vis.js:14665"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\libs\\vis\\vis.js:14707"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\libs\\vis\\vis.js:14775"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\libs\\vis\\vis.js:14806"
        },
        {
            "message": "unknown tag: memberof",
            "line": " src\\libs\\vis\\vis.js:14875"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:15127"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:15214"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:15233"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:15257"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:15283"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:15298"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:15561"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:15730"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:16176"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:16186"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:16919"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:16944"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:16967"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:16987"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:17018"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:17049"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:17078"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:17428"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:17595"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:17630"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:18082"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:18094"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:18118"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:18634"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:18868"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:18926"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:18954"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:18964"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:19244"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:21028"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:21552"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:21552"
        },
        {
            "message": "unknown tag: override",
            "line": " src\\libs\\vis\\vis.js:21666"
        },
        {
            "message": "unknown tag: override",
            "line": " src\\libs\\vis\\vis.js:21743"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:21901"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:21901"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:22075"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:22212"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:22212"
        },
        {
            "message": "unknown tag: override",
            "line": " src\\libs\\vis\\vis.js:22333"
        },
        {
            "message": "unknown tag: override",
            "line": " src\\libs\\vis\\vis.js:22367"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:22457"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:22457"
        },
        {
            "message": "unknown tag: override",
            "line": " src\\libs\\vis\\vis.js:22574"
        },
        {
            "message": "unknown tag: override",
            "line": " src\\libs\\vis\\vis.js:22587"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:22668"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:22668"
        },
        {
            "message": "unknown tag: override",
            "line": " src\\libs\\vis\\vis.js:22759"
        },
        {
            "message": "unknown tag: override",
            "line": " src\\libs\\vis\\vis.js:22765"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:23458"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:24605"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:24618"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:25685"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:25709"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:25726"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:26670"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:26892"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:27196"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:27242"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:27327"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:28318"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:29131"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:29186"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:29200"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:29233"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:29645"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:30046"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:30068"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:30120"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:32357"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:32701"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:32931"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:33429"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:33963"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:34064"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:34242"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:34326"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:34930"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:34959"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:36733"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:36901"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:36918"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:37113"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:37137"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:37301"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:37313"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:38138"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:38149"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:38163"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:38177"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:38191"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:38204"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:38852"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:39993"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:40075"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:40175"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:40194"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:40212"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:40230"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:40249"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:40273"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:40296"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:41452"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:41685"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:41721"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:41986"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:42063"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:42685"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:44000"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:44040"
        },
        {
            "message": "unknown tag: date",
            "line": " src\\libs\\vis\\vis.js:44481"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:44911"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:45082"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:45216"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:45225"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\libs\\vis\\vis.js:45351"
        },
        {
            "message": "unknown tag: version",
            "line": " src\\libs\\vis\\vis.min.js:1"
        },
        {
            "message": "unknown tag: date",
            "line": " src\\libs\\vis\\vis.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " src\\libs\\vis\\vis.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " src\\antlr4\\tree\\Trees.js:39"
        },
        {
            "message": "Missing item type\nvis.js\nhttps://github.com/almende/vis\n\nA dynamic, browser-based visualization library.",
            "line": " src\\libs\\vis\\vis.js:1"
        },
        {
            "message": "Missing item type\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })",
            "line": " src\\libs\\vis\\vis.js:39"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:80"
        },
        {
            "message": "Missing item type\n'use strict';\n// utils\n  exports.util = __webpack_require__(1);\n  exports.DOMutil = __webpack_require__(7);\n// data\n  exports.DataSet = __webpack_require__(8);\n  exports.DataView = __webpack_require__(10);\n  exports.Queue = __webpack_require__(9);\n// Graph3d\n  exports.Graph3d = __webpack_require__(11);\n  exports.graph3d = {\n    Camera: __webpack_require__(15),\n    Filter: __webpack_require__(16),\n    Point2d: __webpack_require__(14),\n    Point3d: __webpack_require__(13),\n    Slider: __webpack_require__(17),\n    StepNumber: __webpack_require__(18)\n  };\n// Timeline\n  exports.Timeline = __webpack_require__(19);\n  exports.Graph2d = __webpack_require__(48);\n  exports.timeline = {\n    Core: __webpack_require__(30),\n    DateUtil: __webpack_require__(29),\n    Range: __webpack_require__(27),\n    stack: __webpack_require__(34),\n    TimeStep: __webpack_require__(32),\n  components: {\n      items: {\n        Item: __webpack_require__(36),\n        BackgroundItem: __webpack_require__(40),\n        BoxItem: __webpack_require__(38),\n        PointItem: __webpack_require__(39),\n        RangeItem: __webpack_require__(35)\n      },\n    BackgroundGroup: __webpack_require__(37),\n      Component: __webpack_require__(28),\n      CurrentTime: __webpack_require__(46),\n      CustomTime: __webpack_require__(44),\n      DataAxis: __webpack_require__(50),\n      DataScale: __webpack_require__(51),\n      GraphGroup: __webpack_require__(52),\n      Group: __webpack_require__(33),\n      ItemSet: __webpack_require__(31),\n      Legend: __webpack_require__(56),\n      LineGraph: __webpack_require__(49),\n      TimeAxis: __webpack_require__(41)\n    }\n  };\n// Network\n  exports.Network = __webpack_require__(58);\n  exports.network = {\n    Images: __webpack_require__(59),\n    dotparser: __webpack_require__(115),\n    gephiParser: __webpack_require__(116),\n    allOptions: __webpack_require__(111)\n  };\n  exports.network.convertDot = function (input) {\n    return exports.network.dotparser.DOTToGraph(input);\n  };\n  exports.network.convertGephi = function (input, options) {\n    return exports.network.gephiParser.parseGephi(input, options);\n  };\n// bundled external libraries\n  exports.moment = __webpack_require__(2);\n  exports.Hammer = __webpack_require__(22);\n  exports.keycharm = __webpack_require__(43);\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:82"
        },
        {
            "message": "Missing item type\n'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n// utility functions\n// first check if moment.js is already loaded in the browser window, if so,\n  // use this instance. Else, load via commonjs.\nvar moment = __webpack_require__(2);\n  var uuid = __webpack_require__(6);\n/**\n   * Test whether given object is a number\n   * @param {*} object\n   * @return {Boolean} isNumber",
            "line": " src\\libs\\vis\\vis.js:162"
        },
        {
            "message": "Missing item type\nRemove everything in the DOM object",
            "line": " src\\libs\\vis\\vis.js:185"
        },
        {
            "message": "Missing item type\nthis function gives you a range between 0 and 1 based on the min and max values in the set, the total sum of all values and the current value.",
            "line": " src\\libs\\vis\\vis.js:198"
        },
        {
            "message": "Missing item type\nTest whether given object is a string",
            "line": " src\\libs\\vis\\vis.js:216"
        },
        {
            "message": "Missing item type\nTest whether given object is a Date, or a String containing a Date",
            "line": " src\\libs\\vis\\vis.js:225"
        },
        {
            "message": "Missing item type\nCreate a semi UUID\nsource: http://stackoverflow.com/a/105074/1262753",
            "line": " src\\libs\\vis\\vis.js:246"
        },
        {
            "message": "Missing item type\nassign all keys of an object that are not nested objects to a certain value (used for color objects).",
            "line": " src\\libs\\vis\\vis.js:255"
        },
        {
            "message": "Missing item type\nFill an object with a possibly partially defined other object. Only copies values if the a object has an object requiring values.\nThat means an object is not created on a property if only the b object has it.",
            "line": " src\\libs\\vis\\vis.js:270"
        },
        {
            "message": "Missing item type\nExtend object a with the properties of object b or a series of objects\nOnly properties with defined values are copied",
            "line": " src\\libs\\vis\\vis.js:296"
        },
        {
            "message": "Missing item type\nExtend object a with the properties of object b or a series of objects\nOnly properties with defined values are copied",
            "line": " src\\libs\\vis\\vis.js:313"
        },
        {
            "message": "Missing item type\nExtend object a with selected properties of object b or a series of objects\nOnly properties with defined values are copied",
            "line": " src\\libs\\vis\\vis.js:332"
        },
        {
            "message": "Missing item type\nExtend object a with selected properties of object b or a series of objects\nOnly properties with defined values are copied",
            "line": " src\\libs\\vis\\vis.js:358"
        },
        {
            "message": "Missing item type\nExtend object a with selected properties of object b or a series of objects\nOnly properties with defined values are copied",
            "line": " src\\libs\\vis\\vis.js:406"
        },
        {
            "message": "Missing item type\nDeep extend an object a with the properties of object b",
            "line": " src\\libs\\vis\\vis.js:455"
        },
        {
            "message": "Missing item type\nTest whether all elements in two arrays are equal.",
            "line": " src\\libs\\vis\\vis.js:497"
        },
        {
            "message": "Missing item type\nConvert an object to another type",
            "line": " src\\libs\\vis\\vis.js:514"
        },
        {
            "message": "Missing item type\nGet the type of an object, for example exports.getType([]) returns 'Array'",
            "line": " src\\libs\\vis\\vis.js:644"
        },
        {
            "message": "Missing item type\nUsed to extend an array and copy it. This is used to propagate paths recursively.",
            "line": " src\\libs\\vis\\vis.js:685"
        },
        {
            "message": "Missing item type\nUsed to extend an array and copy it. This is used to propagate paths recursively.",
            "line": " src\\libs\\vis\\vis.js:701"
        },
        {
            "message": "Missing item type\nRetrieve the absolute left value of a DOM element",
            "line": " src\\libs\\vis\\vis.js:716"
        },
        {
            "message": "Missing item type\nRetrieve the absolute top value of a DOM element",
            "line": " src\\libs\\vis\\vis.js:726"
        },
        {
            "message": "Missing item type\nadd a className to the given elements style",
            "line": " src\\libs\\vis\\vis.js:736"
        },
        {
            "message": "Missing item type\nadd a className to the given elements style",
            "line": " src\\libs\\vis\\vis.js:749"
        },
        {
            "message": "Missing item type\nFor each method for both arrays and objects.\nIn case of an array, the built-in Array.forEach() is applied.\nIn case of an Object, the method loops over all properties of the object.",
            "line": " src\\libs\\vis\\vis.js:763"
        },
        {
            "message": "Missing item type\nConvert an object into an array: all objects properties are put into the\narray. The resulting array is unordered.",
            "line": " src\\libs\\vis\\vis.js:789"
        },
        {
            "message": "Missing item type\nUpdate a property in an object",
            "line": " src\\libs\\vis\\vis.js:805"
        },
        {
            "message": "Missing item type\nThrottle the given function to be only executed once every `wait` milliseconds",
            "line": " src\\libs\\vis\\vis.js:821"
        },
        {
            "message": "Missing item type\nAdd and event listener. Works for all browsers",
            "line": " src\\libs\\vis\\vis.js:848"
        },
        {
            "message": "Missing item type\nRemove an event listener from an element",
            "line": " src\\libs\\vis\\vis.js:870"
        },
        {
            "message": "Missing item type\nCancels the event if it is cancelable, without stopping further propagation of the event.",
            "line": " src\\libs\\vis\\vis.js:893"
        },
        {
            "message": "Missing item type\nGet HTML element which is the target of the event",
            "line": " src\\libs\\vis\\vis.js:906"
        },
        {
            "message": "Missing item type\nCheck if given element contains given parent somewhere in the DOM tree",
            "line": " src\\libs\\vis\\vis.js:933"
        },
        {
            "message": "Missing item type\nConvert a value into a boolean",
            "line": " src\\libs\\vis\\vis.js:953"
        },
        {
            "message": "Missing item type\nConvert a value into a number",
            "line": " src\\libs\\vis\\vis.js:971"
        },
        {
            "message": "Missing item type\nConvert a value into a string",
            "line": " src\\libs\\vis\\vis.js:989"
        },
        {
            "message": "Missing item type\nConvert a size or location into a string with pixels or a percentage",
            "line": " src\\libs\\vis\\vis.js:1007"
        },
        {
            "message": "Missing item type\nConvert a value into a DOM element",
            "line": " src\\libs\\vis\\vis.js:1027"
        },
        {
            "message": "Missing item type\nhttp://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb",
            "line": " src\\libs\\vis\\vis.js:1041"
        },
        {
            "message": "Missing item type\nThis function takes color in hex format or rgb() or rgba() format and overrides the opacity. Returns rgba() string.",
            "line": " src\\libs\\vis\\vis.js:1061"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:1083"
        },
        {
            "message": "Missing item type\nParse a color property into an object with border, background, and\nhighlight colors",
            "line": " src\\libs\\vis\\vis.js:1095"
        },
        {
            "message": "Missing item type\nhttp://www.javascripter.net/faq/rgb2hsv.htm",
            "line": " src\\libs\\vis\\vis.js:1173"
        },
        {
            "message": "Missing item type\nAppend a string with css styles to an element",
            "line": " src\\libs\\vis\\vis.js:1226"
        },
        {
            "message": "Missing item type\nRemove a string with css styles from an element",
            "line": " src\\libs\\vis\\vis.js:1239"
        },
        {
            "message": "Missing item type\nhttps://gist.github.com/mjijackson/5311256",
            "line": " src\\libs\\vis\\vis.js:1257"
        },
        {
            "message": "Missing item type\nThis recursively redirects the prototype of JSON objects to the referenceObject\nThis is used for default options.",
            "line": " src\\libs\\vis\\vis.js:1318"
        },
        {
            "message": "Missing item type\nThis recursively redirects the prototype of JSON objects to the referenceObject\nThis is used for default options.",
            "line": " src\\libs\\vis\\vis.js:1341"
        },
        {
            "message": "Missing item type\nThis method provides a stable sort implementation, very fast for presorted data",
            "line": " src\\libs\\vis\\vis.js:1364"
        },
        {
            "message": "Missing item type\nthis is used to set the options of subobjects in the options object. A requirement of these subobjects\nis that they have an 'enabled' element which is optional for the user but mandatory for the program.",
            "line": " src\\libs\\vis\\vis.js:1382"
        },
        {
            "message": "Missing item type\nThis function does a binary search for a visible item in a sorted list. If we find a visible item, the code that uses\nthis function will then iterate in both directions over this sorted list to find all visible items.",
            "line": " src\\libs\\vis\\vis.js:1414"
        },
        {
            "message": "Missing item type\nThis function does a binary search for a specific value in a sorted array. If it does not exist but is in between of\ntwo values, we return either the one before or the one after, depending on user input\nIf it is found, we return the index, else -1.",
            "line": " src\\libs\\vis\\vis.js:1455"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:1572"
        },
        {
            "message": "Missing item type\n'use strict';\n// first check if moment.js is already loaded in the browser window, if so,\n  // use this instance. Else, load via commonjs.\n  module.exports = typeof window !== 'undefined' && window['moment'] || __webpack_require__(3);\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:1574"
        },
        {
            "message": "Missing item type\n/* WEBPACK VAR INJECTION */(function(module) {//! moment.js\n  //! version : 2.12.0\n  //! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n  //! license : MIT\n  //! momentjs.com\n;(function (global, factory) {\n       true ? module.exports = factory() :\n      typeof define === 'function' && define.amd ? define(factory) :\n      global.moment = factory()\n  }(this, function () { 'use strict';\n    var hookCallback;\n    function utils_hooks__hooks () {\n          return hookCallback.apply(null, arguments);\n      }\n    // This is done to register the method called with moment()\n      // without creating circular dependencies.\n      function setHookCallback (callback) {\n          hookCallback = callback;\n      }\n    function isArray(input) {\n          return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n      }\n    function isDate(input) {\n          return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n      }\n    function map(arr, fn) {\n          var res = [], i;\n          for (i = 0; i < arr.length; ++i) {\n              res.push(fn(arr[i], i));\n          }\n          return res;\n      }\n    function hasOwnProp(a, b) {\n          return Object.prototype.hasOwnProperty.call(a, b);\n      }\n    function extend(a, b) {\n          for (var i in b) {\n              if (hasOwnProp(b, i)) {\n                  a[i] = b[i];\n              }\n          }\n        if (hasOwnProp(b, 'toString')) {\n              a.toString = b.toString;\n          }\n        if (hasOwnProp(b, 'valueOf')) {\n              a.valueOf = b.valueOf;\n          }\n        return a;\n      }\n    function create_utc__createUTC (input, format, locale, strict) {\n          return createLocalOrUTC(input, format, locale, strict, true).utc();\n      }\n    function defaultParsingFlags() {\n          // We need to deep clone this object.\n          return {\n              empty           : false,\n              unusedTokens    : [],\n              unusedInput     : [],\n              overflow        : -2,\n              charsLeftOver   : 0,\n              nullInput       : false,\n              invalidMonth    : null,\n              invalidFormat   : false,\n              userInvalidated : false,\n              iso             : false\n          };\n      }\n    function getParsingFlags(m) {\n          if (m._pf == null) {\n              m._pf = defaultParsingFlags();\n          }\n          return m._pf;\n      }\n    function valid__isValid(m) {\n          if (m._isValid == null) {\n              var flags = getParsingFlags(m);\n              m._isValid = !isNaN(m._d.getTime()) &&\n                  flags.overflow < 0 &&\n                  !flags.empty &&\n                  !flags.invalidMonth &&\n                  !flags.invalidWeekday &&\n                  !flags.nullInput &&\n                  !flags.invalidFormat &&\n                  !flags.userInvalidated;\n            if (m._strict) {\n                  m._isValid = m._isValid &&\n                      flags.charsLeftOver === 0 &&\n                      flags.unusedTokens.length === 0 &&\n                      flags.bigHour === undefined;\n              }\n          }\n          return m._isValid;\n      }\n    function valid__createInvalid (flags) {\n          var m = create_utc__createUTC(NaN);\n          if (flags != null) {\n              extend(getParsingFlags(m), flags);\n          }\n          else {\n              getParsingFlags(m).userInvalidated = true;\n          }\n        return m;\n      }\n    function isUndefined(input) {\n          return input === void 0;\n      }\n    // Plugins that add properties should also add the key here (null value),\n      // so we can properly clone ourselves.\n      var momentProperties = utils_hooks__hooks.momentProperties = [];\n    function copyConfig(to, from) {\n          var i, prop, val;\n        if (!isUndefined(from._isAMomentObject)) {\n              to._isAMomentObject = from._isAMomentObject;\n          }\n          if (!isUndefined(from._i)) {\n              to._i = from._i;\n          }\n          if (!isUndefined(from._f)) {\n              to._f = from._f;\n          }\n          if (!isUndefined(from._l)) {\n              to._l = from._l;\n          }\n          if (!isUndefined(from._strict)) {\n              to._strict = from._strict;\n          }\n          if (!isUndefined(from._tzm)) {\n              to._tzm = from._tzm;\n          }\n          if (!isUndefined(from._isUTC)) {\n              to._isUTC = from._isUTC;\n          }\n          if (!isUndefined(from._offset)) {\n              to._offset = from._offset;\n          }\n          if (!isUndefined(from._pf)) {\n              to._pf = getParsingFlags(from);\n          }\n          if (!isUndefined(from._locale)) {\n              to._locale = from._locale;\n          }\n        if (momentProperties.length > 0) {\n              for (i in momentProperties) {\n                  prop = momentProperties[i];\n                  val = from[prop];\n                  if (!isUndefined(val)) {\n                      to[prop] = val;\n                  }\n              }\n          }\n        return to;\n      }\n    var updateInProgress = false;\n    // Moment prototype object\n      function Moment(config) {\n          copyConfig(this, config);\n          this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n          // Prevent infinite loop in case updateOffset creates new moment\n          // objects.\n          if (updateInProgress === false) {\n              updateInProgress = true;\n              utils_hooks__hooks.updateOffset(this);\n              updateInProgress = false;\n          }\n      }\n    function isMoment (obj) {\n          return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n      }\n    function absFloor (number) {\n          if (number < 0) {\n              return Math.ceil(number);\n          } else {\n              return Math.floor(number);\n          }\n      }\n    function toInt(argumentForCoercion) {\n          var coercedNumber = +argumentForCoercion,\n              value = 0;\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n              value = absFloor(coercedNumber);\n          }\n        return value;\n      }\n    // compare two arrays, return the number of differences\n      function compareArrays(array1, array2, dontConvert) {\n          var len = Math.min(array1.length, array2.length),\n              lengthDiff = Math.abs(array1.length - array2.length),\n              diffs = 0,\n              i;\n          for (i = 0; i < len; i++) {\n              if ((dontConvert && array1[i] !== array2[i]) ||\n                  (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                  diffs++;\n              }\n          }\n          return diffs + lengthDiff;\n      }\n    function warn(msg) {\n          if (utils_hooks__hooks.suppressDeprecationWarnings === false &&\n                  (typeof console !==  'undefined') && console.warn) {\n              console.warn('Deprecation warning: ' + msg);\n          }\n      }\n    function deprecate(msg, fn) {\n          var firstTime = true;\n        return extend(function () {\n              if (firstTime) {\n                  warn(msg + '\\nArguments: ' + Array.prototype.slice.call(arguments).join(', ') + '\\n' + (new Error()).stack);\n                  firstTime = false;\n              }\n              return fn.apply(this, arguments);\n          }, fn);\n      }\n    var deprecations = {};\n    function deprecateSimple(name, msg) {\n          if (!deprecations[name]) {\n              warn(msg);\n              deprecations[name] = true;\n          }\n      }\n    utils_hooks__hooks.suppressDeprecationWarnings = false;\n    function isFunction(input) {\n          return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n      }\n    function isObject(input) {\n          return Object.prototype.toString.call(input) === '[object Object]';\n      }\n    function locale_set__set (config) {\n          var prop, i;\n          for (i in config) {\n              prop = config[i];\n              if (isFunction(prop)) {\n                  this[i] = prop;\n              } else {\n                  this['_' + i] = prop;\n              }\n          }\n          this._config = config;\n          // Lenient ordinal parsing accepts just a number in addition to\n          // number + (possibly) stuff coming from _ordinalParseLenient.\n          this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);\n      }\n    function mergeConfigs(parentConfig, childConfig) {\n          var res = extend({}, parentConfig), prop;\n          for (prop in childConfig) {\n              if (hasOwnProp(childConfig, prop)) {\n                  if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                      res[prop] = {};\n                      extend(res[prop], parentConfig[prop]);\n                      extend(res[prop], childConfig[prop]);\n                  } else if (childConfig[prop] != null) {\n                      res[prop] = childConfig[prop];\n                  } else {\n                      delete res[prop];\n                  }\n              }\n          }\n          return res;\n      }\n    function Locale(config) {\n          if (config != null) {\n              this.set(config);\n          }\n      }\n    // internal storage for locale config files\n      var locales = {};\n      var globalLocale;\n    function normalizeLocale(key) {\n          return key ? key.toLowerCase().replace('_', '-') : key;\n      }\n    // pick the locale from the array\n      // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n      // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n      function chooseLocale(names) {\n          var i = 0, j, next, locale, split;\n        while (i < names.length) {\n              split = normalizeLocale(names[i]).split('-');\n              j = split.length;\n              next = normalizeLocale(names[i + 1]);\n              next = next ? next.split('-') : null;\n              while (j > 0) {\n                  locale = loadLocale(split.slice(0, j).join('-'));\n                  if (locale) {\n                      return locale;\n                  }\n                  if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                      //the next array item is better than a shallower substring of this one\n                      break;\n                  }\n                  j--;\n              }\n              i++;\n          }\n          return null;\n      }\n    function loadLocale(name) {\n          var oldLocale = null;\n          // TODO: Find a better way to register and load all the locales in Node\n          if (!locales[name] && (typeof module !== 'undefined') &&\n                  module && module.exports) {\n              try {\n                  oldLocale = globalLocale._abbr;\n                  !(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./locale\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n                  // because defineLocale currently also sets the global locale, we\n                  // want to undo that for lazy loaded locales\n                  locale_locales__getSetGlobalLocale(oldLocale);\n              } catch (e) { }\n          }\n          return locales[name];\n      }\n    // This function will load locale and then set the global locale.  If\n      // no arguments are passed in, it will simply return the current global\n      // locale key.\n      function locale_locales__getSetGlobalLocale (key, values) {\n          var data;\n          if (key) {\n              if (isUndefined(values)) {\n                  data = locale_locales__getLocale(key);\n              }\n              else {\n                  data = defineLocale(key, values);\n              }\n            if (data) {\n                  // moment.duration._locale = moment._locale = data;\n                  globalLocale = data;\n              }\n          }\n        return globalLocale._abbr;\n      }\n    function defineLocale (name, config) {\n          if (config !== null) {\n              config.abbr = name;\n              if (locales[name] != null) {\n                  deprecateSimple('defineLocaleOverride',\n                          'use moment.updateLocale(localeName, config) to change ' +\n                          'an existing locale. moment.defineLocale(localeName, ' +\n                          'config) should only be used for creating a new locale');\n                  config = mergeConfigs(locales[name]._config, config);\n              } else if (config.parentLocale != null) {\n                  if (locales[config.parentLocale] != null) {\n                      config = mergeConfigs(locales[config.parentLocale]._config, config);\n                  } else {\n                      // treat as if there is no base config\n                      deprecateSimple('parentLocaleUndefined',\n                              'specified parentLocale is not defined yet');\n                  }\n              }\n              locales[name] = new Locale(config);\n            // backwards compat for now: also set the locale\n              locale_locales__getSetGlobalLocale(name);\n            return locales[name];\n          } else {\n              // useful for testing\n              delete locales[name];\n              return null;\n          }\n      }\n    function updateLocale(name, config) {\n          if (config != null) {\n              var locale;\n              if (locales[name] != null) {\n                  config = mergeConfigs(locales[name]._config, config);\n              }\n              locale = new Locale(config);\n              locale.parentLocale = locales[name];\n              locales[name] = locale;\n            // backwards compat for now: also set the locale\n              locale_locales__getSetGlobalLocale(name);\n          } else {\n              // pass null for config to unupdate, useful for tests\n              if (locales[name] != null) {\n                  if (locales[name].parentLocale != null) {\n                      locales[name] = locales[name].parentLocale;\n                  } else if (locales[name] != null) {\n                      delete locales[name];\n                  }\n              }\n          }\n          return locales[name];\n      }\n    // returns locale data\n      function locale_locales__getLocale (key) {\n          var locale;\n        if (key && key._locale && key._locale._abbr) {\n              key = key._locale._abbr;\n          }\n        if (!key) {\n              return globalLocale;\n          }\n        if (!isArray(key)) {\n              //short-circuit everything else\n              locale = loadLocale(key);\n              if (locale) {\n                  return locale;\n              }\n              key = [key];\n          }\n        return chooseLocale(key);\n      }\n    function locale_locales__listLocales() {\n          return Object.keys(locales);\n      }\n    var aliases = {};\n    function addUnitAlias (unit, shorthand) {\n          var lowerCase = unit.toLowerCase();\n          aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n      }\n    function normalizeUnits(units) {\n          return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n      }\n    function normalizeObjectUnits(inputObject) {\n          var normalizedInput = {},\n              normalizedProp,\n              prop;\n        for (prop in inputObject) {\n              if (hasOwnProp(inputObject, prop)) {\n                  normalizedProp = normalizeUnits(prop);\n                  if (normalizedProp) {\n                      normalizedInput[normalizedProp] = inputObject[prop];\n                  }\n              }\n          }\n        return normalizedInput;\n      }\n    function makeGetSet (unit, keepTime) {\n          return function (value) {\n              if (value != null) {\n                  get_set__set(this, unit, value);\n                  utils_hooks__hooks.updateOffset(this, keepTime);\n                  return this;\n              } else {\n                  return get_set__get(this, unit);\n              }\n          };\n      }\n    function get_set__get (mom, unit) {\n          return mom.isValid() ?\n              mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n      }\n    function get_set__set (mom, unit, value) {\n          if (mom.isValid()) {\n              mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n          }\n      }\n    // MOMENTS\n    function getSet (units, value) {\n          var unit;\n          if (typeof units === 'object') {\n              for (unit in units) {\n                  this.set(unit, units[unit]);\n              }\n          } else {\n              units = normalizeUnits(units);\n              if (isFunction(this[units])) {\n                  return this[units](value);\n              }\n          }\n          return this;\n      }\n    function zeroFill(number, targetLength, forceSign) {\n          var absNumber = '' + Math.abs(number),\n              zerosToFill = targetLength - absNumber.length,\n              sign = number >= 0;\n          return (sign ? (forceSign ? '+' : '') : '-') +\n              Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n      }\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n    var formatFunctions = {};\n    var formatTokenFunctions = {};\n    // token:    'M'\n      // padded:   ['MM', 2]\n      // ordinal:  'Mo'\n      // callback: function () { this.month() + 1 }\n      function addFormatToken (token, padded, ordinal, callback) {\n          var func = callback;\n          if (typeof callback === 'string') {\n              func = function () {\n                  return this[callback]();\n              };\n          }\n          if (token) {\n              formatTokenFunctions[token] = func;\n          }\n          if (padded) {\n              formatTokenFunctions[padded[0]] = function () {\n                  return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n              };\n          }\n          if (ordinal) {\n              formatTokenFunctions[ordinal] = function () {\n                  return this.localeData().ordinal(func.apply(this, arguments), token);\n              };\n          }\n      }\n    function removeFormattingTokens(input) {\n          if (input.match(/\\[[\\s\\S]/)) {\n              return input.replace(/^\\[|\\]$/g, '');\n          }\n          return input.replace(/\\\\/g, '');\n      }\n    function makeFormatFunction(format) {\n          var array = format.match(formattingTokens), i, length;\n        for (i = 0, length = array.length; i < length; i++) {\n              if (formatTokenFunctions[array[i]]) {\n                  array[i] = formatTokenFunctions[array[i]];\n              } else {\n                  array[i] = removeFormattingTokens(array[i]);\n              }\n          }\n        return function (mom) {\n              var output = '';\n              for (i = 0; i < length; i++) {\n                  output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n              }\n              return output;\n          };\n      }\n    // format date using native date object\n      function formatMoment(m, format) {\n          if (!m.isValid()) {\n              return m.localeData().invalidDate();\n          }\n        format = expandFormat(format, m.localeData());\n          formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n        return formatFunctions[format](m);\n      }\n    function expandFormat(format, locale) {\n          var i = 5;\n        function replaceLongDateFormatTokens(input) {\n              return locale.longDateFormat(input) || input;\n          }\n        localFormattingTokens.lastIndex = 0;\n          while (i >= 0 && localFormattingTokens.test(format)) {\n              format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n              localFormattingTokens.lastIndex = 0;\n              i -= 1;\n          }\n        return format;\n      }\n    var match1         = /\\d/;            //       0 - 9\n      var match2         = /\\d\\d/;          //      00 - 99\n      var match3         = /\\d{3}/;         //     000 - 999\n      var match4         = /\\d{4}/;         //    0000 - 9999\n      var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n      var match1to2      = /\\d\\d?/;         //       0 - 99\n      var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n      var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n      var match1to3      = /\\d{1,3}/;       //       0 - 999\n      var match1to4      = /\\d{1,4}/;       //       0 - 9999\n      var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n      var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n      var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n    // any word (or two) characters or numbers including two/three word month in arabic.\n      // includes scottish gaelic two word and hyphenated months\n      var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n    var regexes = {};\n    function addRegexToken (token, regex, strictRegex) {\n          regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n              return (isStrict && strictRegex) ? strictRegex : regex;\n          };\n      }\n    function getParseRegexForToken (token, config) {\n          if (!hasOwnProp(regexes, token)) {\n              return new RegExp(unescapeFormat(token));\n          }\n        return regexes[token](config._strict, config._locale);\n      }\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n      function unescapeFormat(s) {\n          return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n              return p1 || p2 || p3 || p4;\n          }));\n      }\n    function regexEscape(s) {\n          return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n      }\n    var tokens = {};\n    function addParseToken (token, callback) {\n          var i, func = callback;\n          if (typeof token === 'string') {\n              token = [token];\n          }\n          if (typeof callback === 'number') {\n              func = function (input, array) {\n                  array[callback] = toInt(input);\n              };\n          }\n          for (i = 0; i < token.length; i++) {\n              tokens[token[i]] = func;\n          }\n      }\n    function addWeekParseToken (token, callback) {\n          addParseToken(token, function (input, array, config, token) {\n              config._w = config._w || {};\n              callback(input, config._w, config, token);\n          });\n      }\n    function addTimeToArrayFromToken(token, input, config) {\n          if (input != null && hasOwnProp(tokens, token)) {\n              tokens[token](input, config._a, config, token);\n          }\n      }\n    var YEAR = 0;\n      var MONTH = 1;\n      var DATE = 2;\n      var HOUR = 3;\n      var MINUTE = 4;\n      var SECOND = 5;\n      var MILLISECOND = 6;\n      var WEEK = 7;\n      var WEEKDAY = 8;\n    function daysInMonth(year, month) {\n          return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n      }\n    // FORMATTING\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n          return this.month() + 1;\n      });\n    addFormatToken('MMM', 0, 0, function (format) {\n          return this.localeData().monthsShort(this, format);\n      });\n    addFormatToken('MMMM', 0, 0, function (format) {\n          return this.localeData().months(this, format);\n      });\n    // ALIASES\n    addUnitAlias('month', 'M');\n    // PARSING\n    addRegexToken('M',    match1to2);\n      addRegexToken('MM',   match1to2, match2);\n      addRegexToken('MMM',  function (isStrict, locale) {\n          return locale.monthsShortRegex(isStrict);\n      });\n      addRegexToken('MMMM', function (isStrict, locale) {\n          return locale.monthsRegex(isStrict);\n      });\n    addParseToken(['M', 'MM'], function (input, array) {\n          array[MONTH] = toInt(input) - 1;\n      });\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n          var month = config._locale.monthsParse(input, token, config._strict);\n          // if we didn't find a month name, mark the date as invalid.\n          if (month != null) {\n              array[MONTH] = month;\n          } else {\n              getParsingFlags(config).invalidMonth = input;\n          }\n      });\n    // LOCALES\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/;\n      var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n      function localeMonths (m, format) {\n          return isArray(this._months) ? this._months[m.month()] :\n              this._months[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n      }\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n      function localeMonthsShort (m, format) {\n          return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n              this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n      }\n    function localeMonthsParse (monthName, format, strict) {\n          var i, mom, regex;\n        if (!this._monthsParse) {\n              this._monthsParse = [];\n              this._longMonthsParse = [];\n              this._shortMonthsParse = [];\n          }\n        for (i = 0; i < 12; i++) {\n              // make the regex if we don't have it already\n              mom = create_utc__createUTC([2000, i]);\n              if (strict && !this._longMonthsParse[i]) {\n                  this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                  this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n              }\n              if (!strict && !this._monthsParse[i]) {\n                  regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                  this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n              }\n              // test the regex\n              if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                  return i;\n              } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                  return i;\n              } else if (!strict && this._monthsParse[i].test(monthName)) {\n                  return i;\n              }\n          }\n      }\n    // MOMENTS\n    function setMonth (mom, value) {\n          var dayOfMonth;\n        if (!mom.isValid()) {\n              // No op\n              return mom;\n          }\n        if (typeof value === 'string') {\n              if (/^\\d+$/.test(value)) {\n                  value = toInt(value);\n              } else {\n                  value = mom.localeData().monthsParse(value);\n                  // TODO: Another silent failure?\n                  if (typeof value !== 'number') {\n                      return mom;\n                  }\n              }\n          }\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n          mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n          return mom;\n      }\n    function getSetMonth (value) {\n          if (value != null) {\n              setMonth(this, value);\n              utils_hooks__hooks.updateOffset(this, true);\n              return this;\n          } else {\n              return get_set__get(this, 'Month');\n          }\n      }\n    function getDaysInMonth () {\n          return daysInMonth(this.year(), this.month());\n      }\n    var defaultMonthsShortRegex = matchWord;\n      function monthsShortRegex (isStrict) {\n          if (this._monthsParseExact) {\n              if (!hasOwnProp(this, '_monthsRegex')) {\n                  computeMonthsParse.call(this);\n              }\n              if (isStrict) {\n                  return this._monthsShortStrictRegex;\n              } else {\n                  return this._monthsShortRegex;\n              }\n          } else {\n              return this._monthsShortStrictRegex && isStrict ?\n                  this._monthsShortStrictRegex : this._monthsShortRegex;\n          }\n      }\n    var defaultMonthsRegex = matchWord;\n      function monthsRegex (isStrict) {\n          if (this._monthsParseExact) {\n              if (!hasOwnProp(this, '_monthsRegex')) {\n                  computeMonthsParse.call(this);\n              }\n              if (isStrict) {\n                  return this._monthsStrictRegex;\n              } else {\n                  return this._monthsRegex;\n              }\n          } else {\n              return this._monthsStrictRegex && isStrict ?\n                  this._monthsStrictRegex : this._monthsRegex;\n          }\n      }\n    function computeMonthsParse () {\n          function cmpLenRev(a, b) {\n              return b.length - a.length;\n          }\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n              i, mom;\n          for (i = 0; i < 12; i++) {\n              // make the regex if we don't have it already\n              mom = create_utc__createUTC([2000, i]);\n              shortPieces.push(this.monthsShort(mom, ''));\n              longPieces.push(this.months(mom, ''));\n              mixedPieces.push(this.months(mom, ''));\n              mixedPieces.push(this.monthsShort(mom, ''));\n          }\n          // Sorting makes sure if one month (or abbr) is a prefix of another it\n          // will match the longer piece.\n          shortPieces.sort(cmpLenRev);\n          longPieces.sort(cmpLenRev);\n          mixedPieces.sort(cmpLenRev);\n          for (i = 0; i < 12; i++) {\n              shortPieces[i] = regexEscape(shortPieces[i]);\n              longPieces[i] = regexEscape(longPieces[i]);\n              mixedPieces[i] = regexEscape(mixedPieces[i]);\n          }\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n          this._monthsShortRegex = this._monthsRegex;\n          this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')$', 'i');\n          this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')$', 'i');\n      }\n    function checkOverflow (m) {\n          var overflow;\n          var a = m._a;\n        if (a && getParsingFlags(m).overflow === -2) {\n              overflow =\n                  a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                  a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                  a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                  a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                  a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                  a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                  -1;\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                  overflow = DATE;\n              }\n              if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                  overflow = WEEK;\n              }\n              if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                  overflow = WEEKDAY;\n              }\n            getParsingFlags(m).overflow = overflow;\n          }\n        return m;\n      }\n    // iso 8601 regex\n      // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n      var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\n      var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n    var isoDates = [\n          ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n          ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n          ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n          ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n          ['YYYY-DDD', /\\d{4}-\\d{3}/],\n          ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n          ['YYYYYYMMDD', /[+-]\\d{10}/],\n          ['YYYYMMDD', /\\d{8}/],\n          // YYYYMM is NOT allowed by the standard\n          ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n          ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n          ['YYYYDDD', /\\d{7}/]\n      ];\n    // iso time formats and regexes\n      var isoTimes = [\n          ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n          ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n          ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n          ['HH:mm', /\\d\\d:\\d\\d/],\n          ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n          ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n          ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n          ['HHmm', /\\d\\d\\d\\d/],\n          ['HH', /\\d\\d/]\n      ];\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n    // date from iso format\n      function configFromISO(config) {\n          var i, l,\n              string = config._i,\n              match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n              allowTime, dateFormat, timeFormat, tzFormat;\n        if (match) {\n              getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                  if (isoDates[i][1].exec(match[1])) {\n                      dateFormat = isoDates[i][0];\n                      allowTime = isoDates[i][2] !== false;\n                      break;\n                  }\n              }\n              if (dateFormat == null) {\n                  config._isValid = false;\n                  return;\n              }\n              if (match[3]) {\n                  for (i = 0, l = isoTimes.length; i < l; i++) {\n                      if (isoTimes[i][1].exec(match[3])) {\n                          // match[2] should be 'T' or space\n                          timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                          break;\n                      }\n                  }\n                  if (timeFormat == null) {\n                      config._isValid = false;\n                      return;\n                  }\n              }\n              if (!allowTime && timeFormat != null) {\n                  config._isValid = false;\n                  return;\n              }\n              if (match[4]) {\n                  if (tzRegex.exec(match[4])) {\n                      tzFormat = 'Z';\n                  } else {\n                      config._isValid = false;\n                      return;\n                  }\n              }\n              config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n              configFromStringAndFormat(config);\n          } else {\n              config._isValid = false;\n          }\n      }\n    // date from iso format or fallback\n      function configFromString(config) {\n          var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n              config._d = new Date(+matched[1]);\n              return;\n          }\n        configFromISO(config);\n          if (config._isValid === false) {\n              delete config._isValid;\n              utils_hooks__hooks.createFromInputFallback(config);\n          }\n      }\n    utils_hooks__hooks.createFromInputFallback = deprecate(\n          'moment construction falls back to js Date. This is ' +\n          'discouraged and will be removed in upcoming major ' +\n          'release. Please refer to ' +\n          'https://github.com/moment/moment/issues/1407 for more info.',\n          function (config) {\n              config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n          }\n      );\n    function createDate (y, m, d, h, M, s, ms) {\n          //can't just apply() to create a date:\n          //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n          var date = new Date(y, m, d, h, M, s, ms);\n        //the date constructor remaps years 0-99 to 1900-1999\n          if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n              date.setFullYear(y);\n          }\n          return date;\n      }\n    function createUTCDate (y) {\n          var date = new Date(Date.UTC.apply(null, arguments));\n        //the Date.UTC function remaps years 0-99 to 1900-1999\n          if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n              date.setUTCFullYear(y);\n          }\n          return date;\n      }\n    // FORMATTING\n    addFormatToken('Y', 0, 0, function () {\n          var y = this.year();\n          return y <= 9999 ? '' + y : '+' + y;\n      });\n    addFormatToken(0, ['YY', 2], 0, function () {\n          return this.year() % 100;\n      });\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n      addFormatToken(0, ['YYYYY',  5],       0, 'year');\n      addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n    // ALIASES\n    addUnitAlias('year', 'y');\n    // PARSING\n    addRegexToken('Y',      matchSigned);\n      addRegexToken('YY',     match1to2, match2);\n      addRegexToken('YYYY',   match1to4, match4);\n      addRegexToken('YYYYY',  match1to6, match6);\n      addRegexToken('YYYYYY', match1to6, match6);\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n      addParseToken('YYYY', function (input, array) {\n          array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);\n      });\n      addParseToken('YY', function (input, array) {\n          array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);\n      });\n      addParseToken('Y', function (input, array) {\n          array[YEAR] = parseInt(input, 10);\n      });\n    // HELPERS\n    function daysInYear(year) {\n          return isLeapYear(year) ? 366 : 365;\n      }\n    function isLeapYear(year) {\n          return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n      }\n    // HOOKS\n    utils_hooks__hooks.parseTwoDigitYear = function (input) {\n          return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n      };\n    // MOMENTS\n    var getSetYear = makeGetSet('FullYear', false);\n    function getIsLeapYear () {\n          return isLeapYear(this.year());\n      }\n    // start-of-first-week - start-of-year\n      function firstWeekOffset(year, dow, doy) {\n          var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n              fwd = 7 + dow - doy,\n              // first-week day local weekday -- which local weekday is fwd\n              fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n        return -fwdlw + fwd - 1;\n      }\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n      function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n          var localWeekday = (7 + weekday - dow) % 7,\n              weekOffset = firstWeekOffset(year, dow, doy),\n              dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n              resYear, resDayOfYear;\n        if (dayOfYear <= 0) {\n              resYear = year - 1;\n              resDayOfYear = daysInYear(resYear) + dayOfYear;\n          } else if (dayOfYear > daysInYear(year)) {\n              resYear = year + 1;\n              resDayOfYear = dayOfYear - daysInYear(year);\n          } else {\n              resYear = year;\n              resDayOfYear = dayOfYear;\n          }\n        return {\n              year: resYear,\n              dayOfYear: resDayOfYear\n          };\n      }\n    function weekOfYear(mom, dow, doy) {\n          var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n              week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n              resWeek, resYear;\n        if (week < 1) {\n              resYear = mom.year() - 1;\n              resWeek = week + weeksInYear(resYear, dow, doy);\n          } else if (week > weeksInYear(mom.year(), dow, doy)) {\n              resWeek = week - weeksInYear(mom.year(), dow, doy);\n              resYear = mom.year() + 1;\n          } else {\n              resYear = mom.year();\n              resWeek = week;\n          }\n        return {\n              week: resWeek,\n              year: resYear\n          };\n      }\n    function weeksInYear(year, dow, doy) {\n          var weekOffset = firstWeekOffset(year, dow, doy),\n              weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n          return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n      }\n    // Pick the first defined of two or three arguments.\n      function defaults(a, b, c) {\n          if (a != null) {\n              return a;\n          }\n          if (b != null) {\n              return b;\n          }\n          return c;\n      }\n    function currentDateArray(config) {\n          // hooks is actually the exported moment object\n          var nowValue = new Date(utils_hooks__hooks.now());\n          if (config._useUTC) {\n              return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n          }\n          return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n      }\n    // convert an array to a date.\n      // the array should mirror the parameters below\n      // note: all values past the year are optional and will default to the lowest possible value.\n      // [year, month, day , hour, minute, second, millisecond]\n      function configFromArray (config) {\n          var i, date, input = [], currentDate, yearToUse;\n        if (config._d) {\n              return;\n          }\n        currentDate = currentDateArray(config);\n        //compute day of the year from weeks and weekdays\n          if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n              dayOfYearFromWeekInfo(config);\n          }\n        //if the day of the year is set, figure out what it is\n          if (config._dayOfYear) {\n              yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                  getParsingFlags(config)._overflowDayOfYear = true;\n              }\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n              config._a[MONTH] = date.getUTCMonth();\n              config._a[DATE] = date.getUTCDate();\n          }\n        // Default to current date.\n          // * if no year, month, day of month are given, default to today\n          // * if day of month is given, default month and year\n          // * if month is given, default only year\n          // * if year is given, don't default anything\n          for (i = 0; i < 3 && config._a[i] == null; ++i) {\n              config._a[i] = input[i] = currentDate[i];\n          }\n        // Zero out whatever was not defaulted, including time\n          for (; i < 7; i++) {\n              config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n          }\n        // Check for 24:00:00.000\n          if (config._a[HOUR] === 24 &&\n                  config._a[MINUTE] === 0 &&\n                  config._a[SECOND] === 0 &&\n                  config._a[MILLISECOND] === 0) {\n              config._nextDay = true;\n              config._a[HOUR] = 0;\n          }\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n          // Apply timezone offset from input. The actual utcOffset can be changed\n          // with parseZone.\n          if (config._tzm != null) {\n              config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n          }\n        if (config._nextDay) {\n              config._a[HOUR] = 24;\n          }\n      }\n    function dayOfYearFromWeekInfo(config) {\n          var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n        w = config._w;\n          if (w.GG != null || w.W != null || w.E != null) {\n              dow = 1;\n              doy = 4;\n            // TODO: We need to take the current isoWeekYear, but that depends on\n              // how we interpret now (local, utc, fixed offset). So create\n              // a now version of current config (take local/utc/offset flags, and\n              // create now).\n              weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);\n              week = defaults(w.W, 1);\n              weekday = defaults(w.E, 1);\n              if (weekday < 1 || weekday > 7) {\n                  weekdayOverflow = true;\n              }\n          } else {\n              dow = config._locale._week.dow;\n              doy = config._locale._week.doy;\n            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);\n              week = defaults(w.w, 1);\n            if (w.d != null) {\n                  // weekday -- low day numbers are considered next week\n                  weekday = w.d;\n                  if (weekday < 0 || weekday > 6) {\n                      weekdayOverflow = true;\n                  }\n              } else if (w.e != null) {\n                  // local weekday -- counting starts from begining of week\n                  weekday = w.e + dow;\n                  if (w.e < 0 || w.e > 6) {\n                      weekdayOverflow = true;\n                  }\n              } else {\n                  // default to begining of week\n                  weekday = dow;\n              }\n          }\n          if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n              getParsingFlags(config)._overflowWeeks = true;\n          } else if (weekdayOverflow != null) {\n              getParsingFlags(config)._overflowWeekday = true;\n          } else {\n              temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n              config._a[YEAR] = temp.year;\n              config._dayOfYear = temp.dayOfYear;\n          }\n      }\n    // constant that refers to the ISO standard\n      utils_hooks__hooks.ISO_8601 = function () {};\n    // date from string and format string\n      function configFromStringAndFormat(config) {\n          // TODO: Move this to another part of the creation flow to prevent circular deps\n          if (config._f === utils_hooks__hooks.ISO_8601) {\n              configFromISO(config);\n              return;\n          }\n        config._a = [];\n          getParsingFlags(config).empty = true;\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n          var string = '' + config._i,\n              i, parsedInput, tokens, token, skipped,\n              stringLength = string.length,\n              totalParsedInputLength = 0;\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        for (i = 0; i < tokens.length; i++) {\n              token = tokens[i];\n              parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n              // console.log('token', token, 'parsedInput', parsedInput,\n              //         'regex', getParseRegexForToken(token, config));\n              if (parsedInput) {\n                  skipped = string.substr(0, string.indexOf(parsedInput));\n                  if (skipped.length > 0) {\n                      getParsingFlags(config).unusedInput.push(skipped);\n                  }\n                  string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                  totalParsedInputLength += parsedInput.length;\n              }\n              // don't parse if it's not a known token\n              if (formatTokenFunctions[token]) {\n                  if (parsedInput) {\n                      getParsingFlags(config).empty = false;\n                  }\n                  else {\n                      getParsingFlags(config).unusedTokens.push(token);\n                  }\n                  addTimeToArrayFromToken(token, parsedInput, config);\n              }\n              else if (config._strict && !parsedInput) {\n                  getParsingFlags(config).unusedTokens.push(token);\n              }\n          }\n        // add remaining unparsed input length to the string\n          getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n          if (string.length > 0) {\n              getParsingFlags(config).unusedInput.push(string);\n          }\n        // clear _12h flag if hour is <= 12\n          if (getParsingFlags(config).bigHour === true &&\n                  config._a[HOUR] <= 12 &&\n                  config._a[HOUR] > 0) {\n              getParsingFlags(config).bigHour = undefined;\n          }\n          // handle meridiem\n          config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n        configFromArray(config);\n          checkOverflow(config);\n      }\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n          var isPm;\n        if (meridiem == null) {\n              // nothing to do\n              return hour;\n          }\n          if (locale.meridiemHour != null) {\n              return locale.meridiemHour(hour, meridiem);\n          } else if (locale.isPM != null) {\n              // Fallback\n              isPm = locale.isPM(meridiem);\n              if (isPm && hour < 12) {\n                  hour += 12;\n              }\n              if (!isPm && hour === 12) {\n                  hour = 0;\n              }\n              return hour;\n          } else {\n              // this is not supposed to happen\n              return hour;\n          }\n      }\n    // date from string and array of format strings\n      function configFromStringAndArray(config) {\n          var tempConfig,\n              bestMoment,\n            scoreToBeat,\n              i,\n              currentScore;\n        if (config._f.length === 0) {\n              getParsingFlags(config).invalidFormat = true;\n              config._d = new Date(NaN);\n              return;\n          }\n        for (i = 0; i < config._f.length; i++) {\n              currentScore = 0;\n              tempConfig = copyConfig({}, config);\n              if (config._useUTC != null) {\n                  tempConfig._useUTC = config._useUTC;\n              }\n              tempConfig._f = config._f[i];\n              configFromStringAndFormat(tempConfig);\n            if (!valid__isValid(tempConfig)) {\n                  continue;\n              }\n            // if there is any input that was not parsed add a penalty for that format\n              currentScore += getParsingFlags(tempConfig).charsLeftOver;\n            //or tokens\n              currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n            getParsingFlags(tempConfig).score = currentScore;\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                  scoreToBeat = currentScore;\n                  bestMoment = tempConfig;\n              }\n          }\n        extend(config, bestMoment || tempConfig);\n      }\n    function configFromObject(config) {\n          if (config._d) {\n              return;\n          }\n        var i = normalizeObjectUnits(config._i);\n          config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n              return obj && parseInt(obj, 10);\n          });\n        configFromArray(config);\n      }\n    function createFromConfig (config) {\n          var res = new Moment(checkOverflow(prepareConfig(config)));\n          if (res._nextDay) {\n              // Adding is smart enough around DST\n              res.add(1, 'd');\n              res._nextDay = undefined;\n          }\n        return res;\n      }\n    function prepareConfig (config) {\n          var input = config._i,\n              format = config._f;\n        config._locale = config._locale || locale_locales__getLocale(config._l);\n        if (input === null || (format === undefined && input === '')) {\n              return valid__createInvalid({nullInput: true});\n          }\n        if (typeof input === 'string') {\n              config._i = input = config._locale.preparse(input);\n          }\n        if (isMoment(input)) {\n              return new Moment(checkOverflow(input));\n          } else if (isArray(format)) {\n              configFromStringAndArray(config);\n          } else if (format) {\n              configFromStringAndFormat(config);\n          } else if (isDate(input)) {\n              config._d = input;\n          } else {\n              configFromInput(config);\n          }\n        if (!valid__isValid(config)) {\n              config._d = null;\n          }\n        return config;\n      }\n    function configFromInput(config) {\n          var input = config._i;\n          if (input === undefined) {\n              config._d = new Date(utils_hooks__hooks.now());\n          } else if (isDate(input)) {\n              config._d = new Date(+input);\n          } else if (typeof input === 'string') {\n              configFromString(config);\n          } else if (isArray(input)) {\n              config._a = map(input.slice(0), function (obj) {\n                  return parseInt(obj, 10);\n              });\n              configFromArray(config);\n          } else if (typeof(input) === 'object') {\n              configFromObject(config);\n          } else if (typeof(input) === 'number') {\n              // from milliseconds\n              config._d = new Date(input);\n          } else {\n              utils_hooks__hooks.createFromInputFallback(config);\n          }\n      }\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n          var c = {};\n        if (typeof(locale) === 'boolean') {\n              strict = locale;\n              locale = undefined;\n          }\n          // object construction must be done this way.\n          // https://github.com/moment/moment/issues/1423\n          c._isAMomentObject = true;\n          c._useUTC = c._isUTC = isUTC;\n          c._l = locale;\n          c._i = input;\n          c._f = format;\n          c._strict = strict;\n        return createFromConfig(c);\n      }\n    function local__createLocal (input, format, locale, strict) {\n          return createLocalOrUTC(input, format, locale, strict, false);\n      }\n    var prototypeMin = deprecate(\n           'moment().min is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n           function () {\n               var other = local__createLocal.apply(null, arguments);\n               if (this.isValid() && other.isValid()) {\n                   return other < this ? this : other;\n               } else {\n                   return valid__createInvalid();\n               }\n           }\n       );\n    var prototypeMax = deprecate(\n          'moment().max is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n          function () {\n              var other = local__createLocal.apply(null, arguments);\n              if (this.isValid() && other.isValid()) {\n                  return other > this ? this : other;\n              } else {\n                  return valid__createInvalid();\n              }\n          }\n      );\n    // Pick a moment m from moments so that m[fn](other) is true for all\n      // other. This relies on the function fn to be transitive.\n      //\n      // moments should either be an array of moment objects or an array, whose\n      // first element is an array of moment objects.\n      function pickBy(fn, moments) {\n          var res, i;\n          if (moments.length === 1 && isArray(moments[0])) {\n              moments = moments[0];\n          }\n          if (!moments.length) {\n              return local__createLocal();\n          }\n          res = moments[0];\n          for (i = 1; i < moments.length; ++i) {\n              if (!moments[i].isValid() || moments[i][fn](res)) {\n                  res = moments[i];\n              }\n          }\n          return res;\n      }\n    // TODO: Use [].sort instead?\n      function min () {\n          var args = [].slice.call(arguments, 0);\n        return pickBy('isBefore', args);\n      }\n    function max () {\n          var args = [].slice.call(arguments, 0);\n        return pickBy('isAfter', args);\n      }\n    var now = function () {\n          return Date.now ? Date.now() : +(new Date());\n      };\n    function Duration (duration) {\n          var normalizedInput = normalizeObjectUnits(duration),\n              years = normalizedInput.year || 0,\n              quarters = normalizedInput.quarter || 0,\n              months = normalizedInput.month || 0,\n              weeks = normalizedInput.week || 0,\n              days = normalizedInput.day || 0,\n              hours = normalizedInput.hour || 0,\n              minutes = normalizedInput.minute || 0,\n              seconds = normalizedInput.second || 0,\n              milliseconds = normalizedInput.millisecond || 0;\n        // representation for dateAddRemove\n          this._milliseconds = +milliseconds +\n              seconds * 1e3 + // 1000\n              minutes * 6e4 + // 1000 * 60\n              hours * 36e5; // 1000 * 60 * 60\n          // Because of dateAddRemove treats 24 hours as different from a\n          // day when working around DST, we need to store them separately\n          this._days = +days +\n              weeks * 7;\n          // It is impossible translate months into days without knowing\n          // which months you are are talking about, so we have to store\n          // it separately.\n          this._months = +months +\n              quarters * 3 +\n              years * 12;\n        this._data = {};\n        this._locale = locale_locales__getLocale();\n        this._bubble();\n      }\n    function isDuration (obj) {\n          return obj instanceof Duration;\n      }\n    // FORMATTING\n    function offset (token, separator) {\n          addFormatToken(token, 0, 0, function () {\n              var offset = this.utcOffset();\n              var sign = '+';\n              if (offset < 0) {\n                  offset = -offset;\n                  sign = '-';\n              }\n              return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n          });\n      }\n    offset('Z', ':');\n      offset('ZZ', '');\n    // PARSING\n    addRegexToken('Z',  matchShortOffset);\n      addRegexToken('ZZ', matchShortOffset);\n      addParseToken(['Z', 'ZZ'], function (input, array, config) {\n          config._useUTC = true;\n          config._tzm = offsetFromString(matchShortOffset, input);\n      });\n    // HELPERS\n    // timezone chunker\n      // '+10:00' > ['10',  '00']\n      // '-1530'  > ['-15', '30']\n      var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n    function offsetFromString(matcher, string) {\n          var matches = ((string || '').match(matcher) || []);\n          var chunk   = matches[matches.length - 1] || [];\n          var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n          var minutes = +(parts[1] * 60) + toInt(parts[2]);\n        return parts[0] === '+' ? minutes : -minutes;\n      }\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n      function cloneWithOffset(input, model) {\n          var res, diff;\n          if (model._isUTC) {\n              res = model.clone();\n              diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);\n              // Use low-level api, because this fn is low-level api.\n              res._d.setTime(+res._d + diff);\n              utils_hooks__hooks.updateOffset(res, false);\n              return res;\n          } else {\n              return local__createLocal(input).local();\n          }\n      }\n    function getDateOffset (m) {\n          // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n          // https://github.com/moment/moment/pull/1871\n          return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n      }\n    // HOOKS\n    // This function will be called whenever a moment is mutated.\n      // It is intended to keep the offset in sync with the timezone.\n      utils_hooks__hooks.updateOffset = function () {};\n    // MOMENTS\n    // keepLocalTime = true means only change the timezone, without\n      // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n      // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n      // +0200, so we adjust the time as needed, to be valid.\n      //\n      // Keeping the time actually adds/subtracts (one hour)\n      // from the actual represented time. That is why we call updateOffset\n      // a second time. In case it wants us to change the offset again\n      // _changeInProgress == true case, then we have to adjust, because\n      // there is no such time in the given timezone.\n      function getSetOffset (input, keepLocalTime) {\n          var offset = this._offset || 0,\n              localAdjust;\n          if (!this.isValid()) {\n              return input != null ? this : NaN;\n          }\n          if (input != null) {\n              if (typeof input === 'string') {\n                  input = offsetFromString(matchShortOffset, input);\n              } else if (Math.abs(input) < 16) {\n                  input = input * 60;\n              }\n              if (!this._isUTC && keepLocalTime) {\n                  localAdjust = getDateOffset(this);\n              }\n              this._offset = input;\n              this._isUTC = true;\n              if (localAdjust != null) {\n                  this.add(localAdjust, 'm');\n              }\n              if (offset !== input) {\n                  if (!keepLocalTime || this._changeInProgress) {\n                      add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);\n                  } else if (!this._changeInProgress) {\n                      this._changeInProgress = true;\n                      utils_hooks__hooks.updateOffset(this, true);\n                      this._changeInProgress = null;\n                  }\n              }\n              return this;\n          } else {\n              return this._isUTC ? offset : getDateOffset(this);\n          }\n      }\n    function getSetZone (input, keepLocalTime) {\n          if (input != null) {\n              if (typeof input !== 'string') {\n                  input = -input;\n              }\n            this.utcOffset(input, keepLocalTime);\n            return this;\n          } else {\n              return -this.utcOffset();\n          }\n      }\n    function setOffsetToUTC (keepLocalTime) {\n          return this.utcOffset(0, keepLocalTime);\n      }\n    function setOffsetToLocal (keepLocalTime) {\n          if (this._isUTC) {\n              this.utcOffset(0, keepLocalTime);\n              this._isUTC = false;\n            if (keepLocalTime) {\n                  this.subtract(getDateOffset(this), 'm');\n              }\n          }\n          return this;\n      }\n    function setOffsetToParsedOffset () {\n          if (this._tzm) {\n              this.utcOffset(this._tzm);\n          } else if (typeof this._i === 'string') {\n              this.utcOffset(offsetFromString(matchOffset, this._i));\n          }\n          return this;\n      }\n    function hasAlignedHourOffset (input) {\n          if (!this.isValid()) {\n              return false;\n          }\n          input = input ? local__createLocal(input).utcOffset() : 0;\n        return (this.utcOffset() - input) % 60 === 0;\n      }\n    function isDaylightSavingTime () {\n          return (\n              this.utcOffset() > this.clone().month(0).utcOffset() ||\n              this.utcOffset() > this.clone().month(5).utcOffset()\n          );\n      }\n    function isDaylightSavingTimeShifted () {\n          if (!isUndefined(this._isDSTShifted)) {\n              return this._isDSTShifted;\n          }\n        var c = {};\n        copyConfig(c, this);\n          c = prepareConfig(c);\n        if (c._a) {\n              var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);\n              this._isDSTShifted = this.isValid() &&\n                  compareArrays(c._a, other.toArray()) > 0;\n          } else {\n              this._isDSTShifted = false;\n          }\n        return this._isDSTShifted;\n      }\n    function isLocal () {\n          return this.isValid() ? !this._isUTC : false;\n      }\n    function isUtcOffset () {\n          return this.isValid() ? this._isUTC : false;\n      }\n    function isUtc () {\n          return this.isValid() ? this._isUTC && this._offset === 0 : false;\n      }\n    // ASP.NET json date format regex\n      var aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?\\d*)?$/;\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n      // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n      // and further modified to allow for strings containing both week and day\n      var isoRegex = /^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$/;\n    function create__createDuration (input, key) {\n          var duration = input,\n              // matching against regexp is expensive, do it on demand\n              match = null,\n              sign,\n              ret,\n              diffRes;\n        if (isDuration(input)) {\n              duration = {\n                  ms : input._milliseconds,\n                  d  : input._days,\n                  M  : input._months\n              };\n          } else if (typeof input === 'number') {\n              duration = {};\n              if (key) {\n                  duration[key] = input;\n              } else {\n                  duration.milliseconds = input;\n              }\n          } else if (!!(match = aspNetRegex.exec(input))) {\n              sign = (match[1] === '-') ? -1 : 1;\n              duration = {\n                  y  : 0,\n                  d  : toInt(match[DATE])        * sign,\n                  h  : toInt(match[HOUR])        * sign,\n                  m  : toInt(match[MINUTE])      * sign,\n                  s  : toInt(match[SECOND])      * sign,\n                  ms : toInt(match[MILLISECOND]) * sign\n              };\n          } else if (!!(match = isoRegex.exec(input))) {\n              sign = (match[1] === '-') ? -1 : 1;\n              duration = {\n                  y : parseIso(match[2], sign),\n                  M : parseIso(match[3], sign),\n                  w : parseIso(match[4], sign),\n                  d : parseIso(match[5], sign),\n                  h : parseIso(match[6], sign),\n                  m : parseIso(match[7], sign),\n                  s : parseIso(match[8], sign)\n              };\n          } else if (duration == null) {// checks for null or undefined\n              duration = {};\n          } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n              diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));\n            duration = {};\n              duration.ms = diffRes.milliseconds;\n              duration.M = diffRes.months;\n          }\n        ret = new Duration(duration);\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n              ret._locale = input._locale;\n          }\n        return ret;\n      }\n    create__createDuration.fn = Duration.prototype;\n    function parseIso (inp, sign) {\n          // We'd normally use ~~inp for this, but unfortunately it also\n          // converts floats to ints.\n          // inp may be undefined, so careful calling replace on it.\n          var res = inp && parseFloat(inp.replace(',', '.'));\n          // apply sign while we're at it\n          return (isNaN(res) ? 0 : res) * sign;\n      }\n    function positiveMomentsDifference(base, other) {\n          var res = {milliseconds: 0, months: 0};\n        res.months = other.month() - base.month() +\n              (other.year() - base.year()) * 12;\n          if (base.clone().add(res.months, 'M').isAfter(other)) {\n              --res.months;\n          }\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n        return res;\n      }\n    function momentsDifference(base, other) {\n          var res;\n          if (!(base.isValid() && other.isValid())) {\n              return {milliseconds: 0, months: 0};\n          }\n        other = cloneWithOffset(other, base);\n          if (base.isBefore(other)) {\n              res = positiveMomentsDifference(base, other);\n          } else {\n              res = positiveMomentsDifference(other, base);\n              res.milliseconds = -res.milliseconds;\n              res.months = -res.months;\n          }\n        return res;\n      }\n    function absRound (number) {\n          if (number < 0) {\n              return Math.round(-1 * number) * -1;\n          } else {\n              return Math.round(number);\n          }\n      }\n    // TODO: remove 'name' arg after deprecation is removed\n      function createAdder(direction, name) {\n          return function (val, period) {\n              var dur, tmp;\n              //invert the arguments, but complain about it\n              if (period !== null && !isNaN(+period)) {\n                  deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                  tmp = val; val = period; period = tmp;\n              }\n            val = typeof val === 'string' ? +val : val;\n              dur = create__createDuration(val, period);\n              add_subtract__addSubtract(this, dur, direction);\n              return this;\n          };\n      }\n    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {\n          var milliseconds = duration._milliseconds,\n              days = absRound(duration._days),\n              months = absRound(duration._months);\n        if (!mom.isValid()) {\n              // No op\n              return;\n          }\n        updateOffset = updateOffset == null ? true : updateOffset;\n        if (milliseconds) {\n              mom._d.setTime(+mom._d + milliseconds * isAdding);\n          }\n          if (days) {\n              get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);\n          }\n          if (months) {\n              setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);\n          }\n          if (updateOffset) {\n              utils_hooks__hooks.updateOffset(mom, days || months);\n          }\n      }\n    var add_subtract__add      = createAdder(1, 'add');\n      var add_subtract__subtract = createAdder(-1, 'subtract');\n    function moment_calendar__calendar (time, formats) {\n          // We want to compare the start of today, vs this.\n          // Getting start-of-today depends on whether we're local/utc/offset or not.\n          var now = time || local__createLocal(),\n              sod = cloneWithOffset(now, this).startOf('day'),\n              diff = this.diff(sod, 'days', true),\n              format = diff < -6 ? 'sameElse' :\n                  diff < -1 ? 'lastWeek' :\n                  diff < 0 ? 'lastDay' :\n                  diff < 1 ? 'sameDay' :\n                  diff < 2 ? 'nextDay' :\n                  diff < 7 ? 'nextWeek' : 'sameElse';\n        var output = formats && (isFunction(formats[format]) ? formats[format]() : formats[format]);\n        return this.format(output || this.localeData().calendar(format, this, local__createLocal(now)));\n      }\n    function clone () {\n          return new Moment(this);\n      }\n    function isAfter (input, units) {\n          var localInput = isMoment(input) ? input : local__createLocal(input);\n          if (!(this.isValid() && localInput.isValid())) {\n              return false;\n          }\n          units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n          if (units === 'millisecond') {\n              return +this > +localInput;\n          } else {\n              return +localInput < +this.clone().startOf(units);\n          }\n      }\n    function isBefore (input, units) {\n          var localInput = isMoment(input) ? input : local__createLocal(input);\n          if (!(this.isValid() && localInput.isValid())) {\n              return false;\n          }\n          units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n          if (units === 'millisecond') {\n              return +this < +localInput;\n          } else {\n              return +this.clone().endOf(units) < +localInput;\n          }\n      }\n    function isBetween (from, to, units) {\n          return this.isAfter(from, units) && this.isBefore(to, units);\n      }\n    function isSame (input, units) {\n          var localInput = isMoment(input) ? input : local__createLocal(input),\n              inputMs;\n          if (!(this.isValid() && localInput.isValid())) {\n              return false;\n          }\n          units = normalizeUnits(units || 'millisecond');\n          if (units === 'millisecond') {\n              return +this === +localInput;\n          } else {\n              inputMs = +localInput;\n              return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n          }\n      }\n    function isSameOrAfter (input, units) {\n          return this.isSame(input, units) || this.isAfter(input,units);\n      }\n    function isSameOrBefore (input, units) {\n          return this.isSame(input, units) || this.isBefore(input,units);\n      }\n    function diff (input, units, asFloat) {\n          var that,\n              zoneDelta,\n              delta, output;\n        if (!this.isValid()) {\n              return NaN;\n          }\n        that = cloneWithOffset(input, this);\n        if (!that.isValid()) {\n              return NaN;\n          }\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n        units = normalizeUnits(units);\n        if (units === 'year' || units === 'month' || units === 'quarter') {\n              output = monthDiff(this, that);\n              if (units === 'quarter') {\n                  output = output / 3;\n              } else if (units === 'year') {\n                  output = output / 12;\n              }\n          } else {\n              delta = this - that;\n              output = units === 'second' ? delta / 1e3 : // 1000\n                  units === 'minute' ? delta / 6e4 : // 1000 * 60\n                  units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n                  units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                  units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                  delta;\n          }\n          return asFloat ? output : absFloor(output);\n      }\n    function monthDiff (a, b) {\n          // difference in months\n          var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n              // b is in (anchor - 1 month, anchor + 1 month)\n              anchor = a.clone().add(wholeMonthDiff, 'months'),\n              anchor2, adjust;\n        if (b - anchor < 0) {\n              anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n              // linear across the month\n              adjust = (b - anchor) / (anchor - anchor2);\n          } else {\n              anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n              // linear across the month\n              adjust = (b - anchor) / (anchor2 - anchor);\n          }\n        return -(wholeMonthDiff + adjust);\n      }\n    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    function toString () {\n          return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n      }\n    function moment_format__toISOString () {\n          var m = this.clone().utc();\n          if (0 < m.year() && m.year() <= 9999) {\n              if (isFunction(Date.prototype.toISOString)) {\n                  // native implementation is ~50x faster, use it when we can\n                  return this.toDate().toISOString();\n              } else {\n                  return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n              }\n          } else {\n              return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n          }\n      }\n    function format (inputString) {\n          var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);\n          return this.localeData().postformat(output);\n      }\n    function from (time, withoutSuffix) {\n          if (this.isValid() &&\n                  ((isMoment(time) && time.isValid()) ||\n                   local__createLocal(time).isValid())) {\n              return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n          } else {\n              return this.localeData().invalidDate();\n          }\n      }\n    function fromNow (withoutSuffix) {\n          return this.from(local__createLocal(), withoutSuffix);\n      }\n    function to (time, withoutSuffix) {\n          if (this.isValid() &&\n                  ((isMoment(time) && time.isValid()) ||\n                   local__createLocal(time).isValid())) {\n              return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n          } else {\n              return this.localeData().invalidDate();\n          }\n      }\n    function toNow (withoutSuffix) {\n          return this.to(local__createLocal(), withoutSuffix);\n      }\n    // If passed a locale key, it will set the locale for this\n      // instance.  Otherwise, it will return the locale configuration\n      // variables for this instance.\n      function locale (key) {\n          var newLocaleData;\n        if (key === undefined) {\n              return this._locale._abbr;\n          } else {\n              newLocaleData = locale_locales__getLocale(key);\n              if (newLocaleData != null) {\n                  this._locale = newLocaleData;\n              }\n              return this;\n          }\n      }\n    var lang = deprecate(\n          'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n          function (key) {\n              if (key === undefined) {\n                  return this.localeData();\n              } else {\n                  return this.locale(key);\n              }\n          }\n      );\n    function localeData () {\n          return this._locale;\n      }\n    function startOf (units) {\n          units = normalizeUnits(units);\n          // the following switch intentionally omits break keywords\n          // to utilize falling through the cases.\n          switch (units) {\n          case 'year':\n              this.month(0);",
            "line": " src\\libs\\vis\\vis.js:1584"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:5276"
        },
        {
            "message": "Missing item type\nmodule.exports = function(module) {\n  \tif(!module.webpackPolyfill) {\n  \t\tmodule.deprecate = function() {};\n  \t\tmodule.paths = [];\n  \t\t// module.parent = undefined by default\n  \t\tmodule.children = [];\n  \t\tmodule.webpackPolyfill = 1;\n  \t}\n  \treturn module;\n  }\n\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:5278"
        },
        {
            "message": "Missing item type\nfunction webpackContext(req) {\n  \tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n  }\n  webpackContext.keys = function() { return []; };\n  webpackContext.resolve = webpackContext;\n  module.exports = webpackContext;\n  webpackContext.id = 5;\n\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:5294"
        },
        {
            "message": "Missing item type\n/* WEBPACK VAR INJECTION */(function(global) {'use strict';\nvar _rng;\nvar globalVar = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : null;\nif (globalVar && globalVar.crypto && crypto.getRandomValues) {\n    // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n    // Moderately fast, high quality\n    var _rnds8 = new Uint8Array(16);\n    _rng = function whatwgRNG() {\n      crypto.getRandomValues(_rnds8);\n      return _rnds8;\n    };\n  }\nif (!_rng) {\n    // Math.random()-based (RNG)\n    //\n    // If all else fails, use Math.random().  It's fast, but is of unspecified\n    // quality.\n    var _rnds = new Array(16);\n    _rng = function _rng() {\n      for (var i = 0, r; i < 16; i++) {\n        if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n        _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n      }\n    return _rnds;\n    };\n  }\n//     uuid.js\n  //\n  //     Copyright (c) 2010-2012 Robert Kieffer\n  //     MIT License - http://opensource.org/licenses/mit-license.php\n// Unique ID creation requires a high quality random # generator.  We feature\n  // detect to determine the best RNG source, normalizing to a function that\n  // returns 128-bits of randomness, since that's what's usually required\n//var _rng = require('./rng');\n// Maps for number <-> hex string conversion\n  var _byteToHex = [];\n  var _hexToByte = {};\n  for (var i = 0; i < 256; i++) {\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    _hexToByte[_byteToHex[i]] = i;\n  }\n// **`parse()` - Parse a UUID into it's component bytes**\n  function parse(s, buf, offset) {\n    var i = buf && offset || 0,\n        ii = 0;\n  buf = buf || [];\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, function (oct) {\n      if (ii < 16) {\n        // Don't overflow!\n        buf[i + ii++] = _hexToByte[oct];\n      }\n    });\n  // Zero out remaining bytes if string was short\n    while (ii < 16) {\n      buf[i + ii++] = 0;\n    }\n  return buf;\n  }\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n  function unparse(buf, offset) {\n    var i = offset || 0,\n        bth = _byteToHex;\n    return bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]];\n  }\n// **`v1()` - Generate time-based UUID**\n  //\n  // Inspired by https://github.com/LiosK/UUID.js\n  // and http://docs.python.org/library/uuid.html\n// random #'s we need to init node and clockseq\n  var _seedBytes = _rng();\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n  var _nodeId = [_seedBytes[0] | 0x01, _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]];\n// Per 4.2.2, randomize (14 bit) clockseq\n  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n// Previous uuid creation time\n  var _lastMSecs = 0,\n      _lastNSecs = 0;\n// See https://github.com/broofa/node-uuid for API details\n  function v1(options, buf, offset) {\n    var i = buf && offset || 0;\n    var b = buf || [];\n  options = options || {};\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n    var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n    var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n  // Time since last uuid creation (in msecs)\n    var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n  // Per 4.2.1.2, Bump clockseq on clock regression\n    if (dt < 0 && options.clockseq === undefined) {\n      clockseq = clockseq + 1 & 0x3fff;\n    }\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n      nsecs = 0;\n    }\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n    if (nsecs >= 10000) {\n      throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n    }\n  _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq;\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n    msecs += 12219292800000;\n  // `time_low`\n    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff;\n  // `time_mid`\n    var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff;\n  // `time_high_and_version`\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n    b[i++] = tmh >>> 16 & 0xff;\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n    b[i++] = clockseq >>> 8 | 0x80;\n  // `clock_seq_low`\n    b[i++] = clockseq & 0xff;\n  // `node`\n    var node = options.node || _nodeId;\n    for (var n = 0; n < 6; n++) {\n      b[i + n] = node[n];\n    }\n  return buf ? buf : unparse(b);\n  }\n// **`v4()` - Generate random UUID**\n// See https://github.com/broofa/node-uuid for API details\n  function v4(options, buf, offset) {\n    // Deprecated - 'format' argument, as supported in v1.2\n    var i = buf && offset || 0;\n  if (typeof options == 'string') {\n      buf = options == 'binary' ? new Array(16) : null;\n      options = null;\n    }\n    options = options || {};\n  var rnds = options.random || (options.rng || _rng)();\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = rnds[6] & 0x0f | 0x40;\n    rnds[8] = rnds[8] & 0x3f | 0x80;\n  // Copy bytes to buffer, if provided\n    if (buf) {\n      for (var ii = 0; ii < 16; ii++) {\n        buf[i + ii] = rnds[ii];\n      }\n    }\n  return buf || unparse(rnds);\n  }\n// Export public API\n  var uuid = v4;\n  uuid.v1 = v1;\n  uuid.v4 = v4;\n  uuid.parse = parse;\n  uuid.unparse = unparse;\nmodule.exports = uuid;\n  /* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:5307"
        },
        {
            "message": "Missing item type\n'use strict';\n// DOM utility methods\n/**\n   * this prepares the JSON container for allocating SVG elements\n   * @param JSONcontainer\n   * @private",
            "line": " src\\libs\\vis\\vis.js:5523"
        },
        {
            "message": "Missing item type\nthis cleans up all the unused SVG elements. By asking for the parentNode, we only need to supply the JSON container from\nwhich to remove the redundant elements.",
            "line": " src\\libs\\vis\\vis.js:5544"
        },
        {
            "message": "Missing item type\nEnsures that all elements are removed first up so they can be recreated cleanly",
            "line": " src\\libs\\vis\\vis.js:5565"
        },
        {
            "message": "Missing item type\nAllocate or generate an SVG element if needed. Store a reference to it in the JSON container and draw it in the svgContainer\nthe JSON container and the SVG container have to be supplied so other svg containers (like the legend) can use this.",
            "line": " src\\libs\\vis\\vis.js:5575"
        },
        {
            "message": "Missing item type\nAllocate or generate an SVG element if needed. Store a reference to it in the JSON container and draw it in the svgContainer\nthe JSON container and the SVG container have to be supplied so other svg containers (like the legend) can use this.",
            "line": " src\\libs\\vis\\vis.js:5609"
        },
        {
            "message": "Missing item type\nDraw a point object. This is a separate function because it can also be called by the legend.\nThe reason the JSONcontainer and the target SVG svgContainer have to be supplied is so the legend can use these functions\nas well.",
            "line": " src\\libs\\vis\\vis.js:5651"
        },
        {
            "message": "Missing item type\ndraw a bar SVG element centered on the X coordinate",
            "line": " src\\libs\\vis\\vis.js:5708"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:5733"
        },
        {
            "message": "Missing item type\n'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar util = __webpack_require__(1);\n  var Queue = __webpack_require__(9);\n/**\n   * DataSet\n   *\n   * Usage:\n   *     var dataSet = new DataSet({\n   *         fieldId: '_id',\n   *         type: {\n   *             // ...\n   *         }\n   *     });\n   *\n   *     dataSet.add(item);\n   *     dataSet.add(data);\n   *     dataSet.update(item);\n   *     dataSet.update(data);\n   *     dataSet.remove(id);\n   *     dataSet.remove(ids);\n   *     var data = dataSet.get();\n   *     var data = dataSet.get(id);\n   *     var data = dataSet.get(ids);\n   *     var data = dataSet.get(ids, options, data);\n   *     dataSet.clear();\n   *\n   * A data set can:\n   * - add/remove/update data\n   * - gives triggers upon changes in the data\n   * - can  import/export data in various data formats\n   *\n   * @param {Array} [data]    Optional array with initial data\n   * @param {Object} [options]   Available options:\n   *                             {String} fieldId Field name of the id in the\n   *                                              items, 'id' by default.\n   *                             {Object.<String, String} type\n   *                                              A map with field names as key,\n   *                                              and the field type as value.\n   *                             {Object} queue   Queue changes to the DataSet,\n   *                                              flush them all at once.\n   *                                              Queue options:\n   *                                              - {number} delay  Delay in ms, null by default\n   *                                              - {number} max    Maximum number of entries in the queue, Infinity by default\n   * @constructor DataSet",
            "line": " src\\libs\\vis\\vis.js:5735"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:5830"
        },
        {
            "message": "Missing item type\nSubscribe to an event, add an event listener",
            "line": " src\\libs\\vis\\vis.js:5862"
        },
        {
            "message": "Missing item type\nUnsubscribe from an event, remove an event listener",
            "line": " src\\libs\\vis\\vis.js:5888"
        },
        {
            "message": "Missing item type\nTrigger an event",
            "line": " src\\libs\\vis\\vis.js:5907"
        },
        {
            "message": "Missing item type\nAdd data.\nAdding an item will fail when there already is an item with the same id.",
            "line": " src\\libs\\vis\\vis.js:5935"
        },
        {
            "message": "Missing item type\nUpdate existing items. When an item does not exist, it will be created",
            "line": " src\\libs\\vis\\vis.js:5968"
        },
        {
            "message": "Missing item type\nGet a data item or multiple items.\n\nUsage:\n\n    get()\n    get(options: Object)\n\n    get(id: Number | String)\n    get(id: Number | String, options: Object)\n\n    get(ids: Number[] | String[])\n    get(ids: Number[] | String[], options: Object)\n\nWhere:\n\n{Number | String} id         The id of an item\n{Number[] | String{}} ids    An array with ids of items\n{Object} options             An Object with options. Available options:\n{String} [returnType]        Type of data to be returned.\n                             Can be 'Array' (default) or 'Object'.\n{Object.<String, String>} [type]\n{String[]} [fields]          field names to be returned\n{function} [filter]          filter items\n{String | function} [order]  Order the items by a field name or custom sort function.",
            "line": " src\\libs\\vis\\vis.js:6032"
        },
        {
            "message": "Missing item type\nGet ids of all items or from a filtered set of items.",
            "line": " src\\libs\\vis\\vis.js:6161"
        },
        {
            "message": "Missing item type\nReturns the DataSet itself. Is overwritten for example by the DataView,\nwhich returns the DataSet it is connected to instead.",
            "line": " src\\libs\\vis\\vis.js:6238"
        },
        {
            "message": "Missing item type\nExecute a callback function for every item in the dataset.",
            "line": " src\\libs\\vis\\vis.js:6246"
        },
        {
            "message": "Missing item type\nMap every item in the dataset.",
            "line": " src\\libs\\vis\\vis.js:6287"
        },
        {
            "message": "Missing item type\nFilter the fields of an item",
            "line": " src\\libs\\vis\\vis.js:6326"
        },
        {
            "message": "Missing item type\nSort the provided array with items",
            "line": " src\\libs\\vis\\vis.js:6364"
        },
        {
            "message": "Missing item type\nRemove an object by pointer or by id",
            "line": " src\\libs\\vis\\vis.js:6390"
        },
        {
            "message": "Missing item type\nRemove an item by its id",
            "line": " src\\libs\\vis\\vis.js:6424"
        },
        {
            "message": "Missing item type\nClear the data",
            "line": " src\\libs\\vis\\vis.js:6448"
        },
        {
            "message": "Missing item type\nFind the item with maximum value of a specified field",
            "line": " src\\libs\\vis\\vis.js:6464"
        },
        {
            "message": "Missing item type\nFind the item with minimum value of a specified field",
            "line": " src\\libs\\vis\\vis.js:6490"
        },
        {
            "message": "Missing item type\nFind all distinct values of a specified field",
            "line": " src\\libs\\vis\\vis.js:6516"
        },
        {
            "message": "Missing item type\nAdd a single item. Will fail when an item with the same id already exists.",
            "line": " src\\libs\\vis\\vis.js:6557"
        },
        {
            "message": "Missing item type\nGet an item. Fields can be converted to a specific type",
            "line": " src\\libs\\vis\\vis.js:6593"
        },
        {
            "message": "Missing item type\nUpdate a single item: merge with existing item.\nWill fail when the item has no id, or when there does not exist an item\nwith the same id.",
            "line": " src\\libs\\vis\\vis.js:6630"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:6662"
        },
        {
            "message": "Missing item type\n'use strict';\n/**\n   * A queue\n   * @param {Object} options\n   *            Available options:\n   *            - delay: number    When provided, the queue will be flushed\n   *                               automatically after an inactivity of this delay\n   *                               in milliseconds.\n   *                               Default value is null.\n   *            - max: number      When the queue exceeds the given maximum number\n   *                               of entries, the queue is flushed automatically.\n   *                               Default value of max is Infinity.\n   * @constructor",
            "line": " src\\libs\\vis\\vis.js:6664"
        },
        {
            "message": "Missing item type\nUpdate the configuration of the queue",
            "line": " src\\libs\\vis\\vis.js:6694"
        },
        {
            "message": "Missing item type\nExtend an object with queuing functionality.\nThe object will be extended with a function flush, and the methods provided\nin options.replace will be replaced with queued ones.",
            "line": " src\\libs\\vis\\vis.js:6718"
        },
        {
            "message": "Missing item type\nDestroy the queue. The queue will first flush all queued actions, and in\ncase it has extended an object, will restore the original object.",
            "line": " src\\libs\\vis\\vis.js:6771"
        },
        {
            "message": "Missing item type\nReplace a method on an object with a queued version",
            "line": " src\\libs\\vis\\vis.js:6793"
        },
        {
            "message": "Missing item type\nQueue a call",
            "line": " src\\libs\\vis\\vis.js:6821"
        },
        {
            "message": "Missing item type\nCheck whether the queue needs to be flushed",
            "line": " src\\libs\\vis\\vis.js:6835"
        },
        {
            "message": "Missing item type\nFlush all queued calls",
            "line": " src\\libs\\vis\\vis.js:6855"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:6867"
        },
        {
            "message": "Missing item type\n'use strict';\nvar util = __webpack_require__(1);\n  var DataSet = __webpack_require__(8);\n/**\n   * DataView\n   *\n   * a dataview offers a filtered view on a dataset or an other dataview.\n   *\n   * @param {DataSet | DataView} data\n   * @param {Object} [options]   Available options: see method get\n   *\n   * @constructor DataView",
            "line": " src\\libs\\vis\\vis.js:6869"
        },
        {
            "message": "Missing item type\nSet a data source for the view",
            "line": " src\\libs\\vis\\vis.js:6905"
        },
        {
            "message": "Missing item type\nRefresh the DataView. Useful when the DataView has a filter function\ncontaining a variable parameter.",
            "line": " src\\libs\\vis\\vis.js:6947"
        },
        {
            "message": "Missing item type\nGet data from the data view\n\nUsage:\n\n    get()\n    get(options: Object)\n    get(options: Object, data: Array | DataTable)\n\n    get(id: Number)\n    get(id: Number, options: Object)\n    get(id: Number, options: Object, data: Array | DataTable)\n\n    get(ids: Number[])\n    get(ids: Number[], options: Object)\n    get(ids: Number[], options: Object, data: Array | DataTable)\n\nWhere:\n\n{Number | String} id         The id of an item\n{Number[] | String{}} ids    An array with ids of items\n{Object} options             An Object with options. Available options:\n                             {String} [type] Type of data to be returned. Can\n                                             be 'DataTable' or 'Array' (default)\n                             {Object.<String, String>} [convert]\n                             {String[]} [fields] field names to be returned\n                             {function} [filter] filter items\n                             {String | function} [order] Order the items by\n                                 a field name or custom sort function.\n{Array | DataTable} [data]   If provided, items will be appended to this\n                             array or table. Required in case of Google\n                             DataTable.",
            "line": " src\\libs\\vis\\vis.js:6989"
        },
        {
            "message": "Missing item type\nGet ids of all items or from a filtered set of items.",
            "line": " src\\libs\\vis\\vis.js:7061"
        },
        {
            "message": "Missing item type\nMap every item in the dataset.",
            "line": " src\\libs\\vis\\vis.js:7099"
        },
        {
            "message": "Missing item type\nGet the DataSet to which this DataView is connected. In case there is a chain\nof multiple DataViews, the root DataSet of this chain is returned.",
            "line": " src\\libs\\vis\\vis.js:7139"
        },
        {
            "message": "Missing item type\nEvent listener. Will propagate all events from the connected data set to\nthe subscribers of the DataView, but will filter the items and only trigger\nwhen there are changes in the filtered data set.",
            "line": " src\\libs\\vis\\vis.js:7152"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:7250"
        },
        {
            "message": "Missing item type\n'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar Emitter = __webpack_require__(12);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\n  var util = __webpack_require__(1);\n  var Point3d = __webpack_require__(13);\n  var Point2d = __webpack_require__(14);\n  var Camera = __webpack_require__(15);\n  var Filter = __webpack_require__(16);\n  var Slider = __webpack_require__(17);\n  var StepNumber = __webpack_require__(18);\n/**\n   * @constructor Graph3d\n   * Graph3d displays data in 3d.\n   *\n   * Graph3d is developed in javascript as a Google Visualization Chart.\n   *\n   * @param {Element} container   The DOM element in which the Graph3d will\n   *                              be created. Normally a div element.\n   * @param {DataSet | DataView | Array} [data]\n   * @param {Object} [options]",
            "line": " src\\libs\\vis\\vis.js:7252"
        },
        {
            "message": "Missing item type\nCalculate the scaling values, dependent on the range in x, y, and z direction",
            "line": " src\\libs\\vis\\vis.js:7375"
        },
        {
            "message": "Missing item type\nConvert a 3D location to a 2D location on screen\nhttp://en.wikipedia.org/wiki/3D_projection",
            "line": " src\\libs\\vis\\vis.js:7406"
        },
        {
            "message": "Missing item type\nConvert a 3D location its translation seen from the camera\nhttp://en.wikipedia.org/wiki/3D_projection",
            "line": " src\\libs\\vis\\vis.js:7417"
        },
        {
            "message": "Missing item type\nConvert a translation point to a point on the screen",
            "line": " src\\libs\\vis\\vis.js:7451"
        },
        {
            "message": "Missing item type\nSet the background styling for the graph",
            "line": " src\\libs\\vis\\vis.js:7482"
        },
        {
            "message": "Missing item type\nRetrieve the style index from given styleName",
            "line": " src\\libs\\vis\\vis.js:7525"
        },
        {
            "message": "Missing item type\nDetermine the indexes of the data columns, based on the given style and data",
            "line": " src\\libs\\vis\\vis.js:7558"
        },
        {
            "message": "Missing item type\nInitialize the data from the data table. Calculate minimum and maximum values\nand column index values",
            "line": " src\\libs\\vis\\vis.js:7626"
        },
        {
            "message": "Missing item type\nFilter the data based on the current filter",
            "line": " src\\libs\\vis\\vis.js:7744"
        },
        {
            "message": "Missing item type\nCreate the main frame for the Graph3d.\nThis function is executed once when a Graph3d object is created. The frame\ncontains a canvas, and this canvas contains all objects like the axis and\nnodes.",
            "line": " src\\libs\\vis\\vis.js:7846"
        },
        {
            "message": "Missing item type\nSet a new size for the graph",
            "line": " src\\libs\\vis\\vis.js:7909"
        },
        {
            "message": "Missing item type\nResize the canvas to the current size of the frame",
            "line": " src\\libs\\vis\\vis.js:7923"
        },
        {
            "message": "Missing item type\nStart animation",
            "line": " src\\libs\\vis\\vis.js:7937"
        },
        {
            "message": "Missing item type\nStop animation",
            "line": " src\\libs\\vis\\vis.js:7946"
        },
        {
            "message": "Missing item type\nResize the center position based on the current values in this.defaultXCenter\nand this.defaultYCenter (which are strings with a percentage or a value\nin pixels). The center positions are the variables this.xCenter\nand this.yCenter",
            "line": " src\\libs\\vis\\vis.js:7955"
        },
        {
            "message": "Missing item type\nSet the rotation and distance of the camera",
            "line": " src\\libs\\vis\\vis.js:7977"
        },
        {
            "message": "Missing item type\nRetrieve the current camera rotation",
            "line": " src\\libs\\vis\\vis.js:8009"
        },
        {
            "message": "Missing item type\nLoad data into the 3D Graph",
            "line": " src\\libs\\vis\\vis.js:8020"
        },
        {
            "message": "Missing item type\nReplace the dataset of the Graph3d",
            "line": " src\\libs\\vis\\vis.js:8039"
        },
        {
            "message": "Missing item type\nUpdate the options. Options will be merged with current options",
            "line": " src\\libs\\vis\\vis.js:8053"
        },
        {
            "message": "Missing item type\nRedraw the Graph.",
            "line": " src\\libs\\vis\\vis.js:8157"
        },
        {
            "message": "Missing item type\nClear the canvas before redrawing",
            "line": " src\\libs\\vis\\vis.js:8186"
        },
        {
            "message": "Missing item type\nRedraw the legend showing the colors",
            "line": " src\\libs\\vis\\vis.js:8196"
        },
        {
            "message": "Missing item type\nRedraw the filter",
            "line": " src\\libs\\vis\\vis.js:8294"
        },
        {
            "message": "Missing item type\nRedraw the slider",
            "line": " src\\libs\\vis\\vis.js:8330"
        },
        {
            "message": "Missing item type\nRedraw common information",
            "line": " src\\libs\\vis\\vis.js:8339"
        },
        {
            "message": "Missing item type\nRedraw the axis",
            "line": " src\\libs\\vis\\vis.js:8359"
        },
        {
            "message": "Missing item type\nCalculate the color based on the given value.",
            "line": " src\\libs\\vis\\vis.js:8629"
        },
        {
            "message": "Missing item type\nDraw all datapoints as a grid\nThis function can be used when the style is 'grid'",
            "line": " src\\libs\\vis\\vis.js:8663"
        },
        {
            "message": "Missing item type\nDraw all datapoints as dots.\nThis function can be used when the style is 'dot' or 'dot-line'",
            "line": " src\\libs\\vis\\vis.js:8814"
        },
        {
            "message": "Missing item type\nDraw all datapoints as bars.\nThis function can be used when the style is 'bar', 'bar-color', or 'bar-size'",
            "line": " src\\libs\\vis\\vis.js:8905"
        },
        {
            "message": "Missing item type\nDraw a line through all datapoints.\nThis function can be used when the style is 'line'",
            "line": " src\\libs\\vis\\vis.js:9027"
        },
        {
            "message": "Missing item type\nStart a moving operation inside the provided parent element",
            "line": " src\\libs\\vis\\vis.js:9070"
        },
        {
            "message": "Missing item type\nPerform moving operating.\nThis function activated from within the funcion Graph.mouseDown().",
            "line": " src\\libs\\vis\\vis.js:9113"
        },
        {
            "message": "Missing item type\nStop moving operating.\nThis function activated from within the funcion Graph.mouseDown().",
            "line": " src\\libs\\vis\\vis.js:9158"
        },
        {
            "message": "Missing item type\nAfter having moved the mouse, a tooltip should pop up when the mouse is resting on a data point",
            "line": " src\\libs\\vis\\vis.js:9173"
        },
        {
            "message": "Missing item type\nEvent handler for touchstart event on mobile devices",
            "line": " src\\libs\\vis\\vis.js:9223"
        },
        {
            "message": "Missing item type\nEvent handler for touchmove event on mobile devices",
            "line": " src\\libs\\vis\\vis.js:9242"
        },
        {
            "message": "Missing item type\nEvent handler for touchend event on mobile devices",
            "line": " src\\libs\\vis\\vis.js:9249"
        },
        {
            "message": "Missing item type\nEvent handler for mouse wheel event, used to zoom the graph\nCode from http://adomas.org/javascript-mouse-wheel/",
            "line": " src\\libs\\vis\\vis.js:9261"
        },
        {
            "message": "Missing item type\nTest whether a point lies inside given 2D triangle",
            "line": " src\\libs\\vis\\vis.js:9305"
        },
        {
            "message": "Missing item type\nFind a data point close to given screen position (x, y)",
            "line": " src\\libs\\vis\\vis.js:9329"
        },
        {
            "message": "Missing item type\nDisplay a tooltip for given data point",
            "line": " src\\libs\\vis\\vis.js:9385"
        },
        {
            "message": "Missing item type\nHide the tooltip when displayed",
            "line": " src\\libs\\vis\\vis.js:9463"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:9482"
        },
        {
            "message": "Missing item type\nGet the horizontal mouse position from a mouse event",
            "line": " src\\libs\\vis\\vis.js:9484"
        },
        {
            "message": "Missing item type\nGet the vertical mouse position from a mouse event",
            "line": " src\\libs\\vis\\vis.js:9494"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:9506"
        },
        {
            "message": "Missing item type\n/**\n   * Expose `Emitter`.",
            "line": " src\\libs\\vis\\vis.js:9508"
        },
        {
            "message": "Missing item type\nInitialize a new `Emitter`.",
            "line": " src\\libs\\vis\\vis.js:9517"
        },
        {
            "message": "Missing item type\nMixin the emitter properties.",
            "line": " src\\libs\\vis\\vis.js:9527"
        },
        {
            "message": "Missing item type\nListen on the given `event` with `fn`.",
            "line": " src\\libs\\vis\\vis.js:9542"
        },
        {
            "message": "Missing item type\nAdds an `event` listener that will be invoked a single\ntime then automatically removed.",
            "line": " src\\libs\\vis\\vis.js:9559"
        },
        {
            "message": "Missing item type\nRemove the given callback for `event` or all\nregistered callbacks.",
            "line": " src\\libs\\vis\\vis.js:9583"
        },
        {
            "message": "Missing item type\nEmit `event` with the given args.",
            "line": " src\\libs\\vis\\vis.js:9627"
        },
        {
            "message": "Missing item type\nReturn array of callbacks for `event`.",
            "line": " src\\libs\\vis\\vis.js:9650"
        },
        {
            "message": "Missing item type\nCheck if this emitter has `event` handlers.",
            "line": " src\\libs\\vis\\vis.js:9663"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:9676"
        },
        {
            "message": "Missing item type\n\"use strict\";\n/**\n   * @prototype Point3d\n   * @param {Number} [x]\n   * @param {Number} [y]\n   * @param {Number} [z]",
            "line": " src\\libs\\vis\\vis.js:9678"
        },
        {
            "message": "Missing item type\nSubtract the two provided points, returns a-b",
            "line": " src\\libs\\vis\\vis.js:9694"
        },
        {
            "message": "Missing item type\nAdd the two provided points, returns a+b",
            "line": " src\\libs\\vis\\vis.js:9708"
        },
        {
            "message": "Missing item type\nCalculate the average of two 3d points",
            "line": " src\\libs\\vis\\vis.js:9722"
        },
        {
            "message": "Missing item type\nCalculate the cross product of the two provided points, returns axb\nDocumentation: http://en.wikipedia.org/wiki/Cross_product",
            "line": " src\\libs\\vis\\vis.js:9732"
        },
        {
            "message": "Missing item type\nRtrieve the length of the vector (or the distance from this point to the origin",
            "line": " src\\libs\\vis\\vis.js:9749"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:9759"
        },
        {
            "message": "Missing item type\n\"use strict\";\n/**\n   * @prototype Point2d\n   * @param {Number} [x]\n   * @param {Number} [y]",
            "line": " src\\libs\\vis\\vis.js:9761"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:9777"
        },
        {
            "message": "Missing item type\n'use strict';\nvar Point3d = __webpack_require__(13);\n/**\n   * @class Camera\n   * The camera is mounted on a (virtual) camera arm. The camera arm can rotate\n   * The camera is always looking in the direction of the origin of the arm.\n   * This way, the camera always rotates around one fixed point, the location\n   * of the camera arm.\n   *\n   * Documentation:\n   *   http://en.wikipedia.org/wiki/3D_projection",
            "line": " src\\libs\\vis\\vis.js:9779"
        },
        {
            "message": "Missing item type\nSet the location (origin) of the arm",
            "line": " src\\libs\\vis\\vis.js:9808"
        },
        {
            "message": "Missing item type\nSet the rotation of the camera arm",
            "line": " src\\libs\\vis\\vis.js:9822"
        },
        {
            "message": "Missing item type\nRetrieve the current arm rotation",
            "line": " src\\libs\\vis\\vis.js:9846"
        },
        {
            "message": "Missing item type\nSet the (normalized) length of the camera arm.",
            "line": " src\\libs\\vis\\vis.js:9858"
        },
        {
            "message": "Missing item type\nRetrieve the arm length",
            "line": " src\\libs\\vis\\vis.js:9876"
        },
        {
            "message": "Missing item type\nRetrieve the camera location",
            "line": " src\\libs\\vis\\vis.js:9884"
        },
        {
            "message": "Missing item type\nRetrieve the camera rotation",
            "line": " src\\libs\\vis\\vis.js:9892"
        },
        {
            "message": "Missing item type\nCalculate the location and rotation of the camera based on the\nposition and orientation of the camera arm",
            "line": " src\\libs\\vis\\vis.js:9900"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:9918"
        },
        {
            "message": "Missing item type\n'use strict';\nvar DataView = __webpack_require__(10);\n/**\n   * @class Filter\n   *\n   * @param {DataSet} data The google data table\n   * @param {Number}  column             The index of the column to be filtered\n   * @param {Graph} graph           The graph",
            "line": " src\\libs\\vis\\vis.js:9920"
        },
        {
            "message": "Missing item type\nReturn the label",
            "line": " src\\libs\\vis\\vis.js:9967"
        },
        {
            "message": "Missing item type\nReturn the loaded progress",
            "line": " src\\libs\\vis\\vis.js:9975"
        },
        {
            "message": "Missing item type\nReturn the label",
            "line": " src\\libs\\vis\\vis.js:9990"
        },
        {
            "message": "Missing item type\nReturn the columnIndex of the filter",
            "line": " src\\libs\\vis\\vis.js:9998"
        },
        {
            "message": "Missing item type\nReturn the currently selected value. Returns undefined if there is no selection",
            "line": " src\\libs\\vis\\vis.js:10006"
        },
        {
            "message": "Missing item type\nRetrieve all values of the filter",
            "line": " src\\libs\\vis\\vis.js:10016"
        },
        {
            "message": "Missing item type\nRetrieve one value of the filter",
            "line": " src\\libs\\vis\\vis.js:10024"
        },
        {
            "message": "Missing item type\nRetrieve the (filtered) dataPoints for the currently selected filter index",
            "line": " src\\libs\\vis\\vis.js:10035"
        },
        {
            "message": "Missing item type\nSet a callback function when the filter is fully loaded.",
            "line": " src\\libs\\vis\\vis.js:10064"
        },
        {
            "message": "Missing item type\nAdd a value to the list with available values for this filter\nNo double entries will be created.",
            "line": " src\\libs\\vis\\vis.js:10071"
        },
        {
            "message": "Missing item type\nLoad all filtered rows in the background one by one\nStart this method without providing an index!",
            "line": " src\\libs\\vis\\vis.js:10083"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:10129"
        },
        {
            "message": "Missing item type\n'use strict';\nvar util = __webpack_require__(1);\n/**\n   * @constructor Slider\n   *\n   * An html slider control with start/stop/prev/next buttons\n   * @param {Element} container  The element where the slider will be created\n   * @param {Object} options   Available options:\n   *                 {boolean} visible   If true (default) the\n   *                           slider is visible.",
            "line": " src\\libs\\vis\\vis.js:10131"
        },
        {
            "message": "Missing item type\nSelect the previous index",
            "line": " src\\libs\\vis\\vis.js:10221"
        },
        {
            "message": "Missing item type\nSelect the next index",
            "line": " src\\libs\\vis\\vis.js:10232"
        },
        {
            "message": "Missing item type\nSelect the next index",
            "line": " src\\libs\\vis\\vis.js:10243"
        },
        {
            "message": "Missing item type\nToggle start or stop playing",
            "line": " src\\libs\\vis\\vis.js:10273"
        },
        {
            "message": "Missing item type\nStart playing",
            "line": " src\\libs\\vis\\vis.js:10284"
        },
        {
            "message": "Missing item type\nStop playing",
            "line": " src\\libs\\vis\\vis.js:10298"
        },
        {
            "message": "Missing item type\nSet a callback function which will be triggered when the value of the\nslider bar has changed.",
            "line": " src\\libs\\vis\\vis.js:10310"
        },
        {
            "message": "Missing item type\nSet the interval for playing the list",
            "line": " src\\libs\\vis\\vis.js:10318"
        },
        {
            "message": "Missing item type\nRetrieve the current play interval",
            "line": " src\\libs\\vis\\vis.js:10326"
        },
        {
            "message": "Missing item type\nSet looping on or off",
            "line": " src\\libs\\vis\\vis.js:10334"
        },
        {
            "message": "Missing item type\nExecute the onchange callback function",
            "line": " src\\libs\\vis\\vis.js:10344"
        },
        {
            "message": "Missing item type\nredraw the slider on the correct place",
            "line": " src\\libs\\vis\\vis.js:10353"
        },
        {
            "message": "Missing item type\nSet the list with values for the slider",
            "line": " src\\libs\\vis\\vis.js:10368"
        },
        {
            "message": "Missing item type\nSelect a value by its index",
            "line": " src\\libs\\vis\\vis.js:10378"
        },
        {
            "message": "Missing item type\nretrieve the index of the currently selected vaue",
            "line": " src\\libs\\vis\\vis.js:10393"
        },
        {
            "message": "Missing item type\nretrieve the currently selected value",
            "line": " src\\libs\\vis\\vis.js:10401"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:10477"
        },
        {
            "message": "Missing item type\n\"use strict\";\n/**\n   * @prototype StepNumber\n   * The class StepNumber is an iterator for Numbers. You provide a start and end\n   * value, and a best step size. StepNumber itself rounds to fixed values and\n   * a finds the step that best fits the provided step.\n   *\n   * If prettyStep is true, the step size is chosen as close as possible to the\n   * provided step, but being a round value like 1, 2, 5, 10, 20, 50, ....\n   *\n   * Example usage:\n   *   var step = new StepNumber(0, 10, 2.5, true);\n   *   step.start();\n   *   while (!step.end()) {\n   *   alert(step.getCurrent());\n   *   step.next();\n   *   }\n   *\n   * Version: 1.0\n   *\n   * @param {Number} start     The start value\n   * @param {Number} end     The end value\n   * @param {Number} step    Optional. Step size. Must be a positive value.\n   * @param {boolean} prettyStep Optional. If true, the step size is rounded\n   *               To a pretty step size (like 1, 2, 5, 10, 20, 50, ...)",
            "line": " src\\libs\\vis\\vis.js:10479"
        },
        {
            "message": "Missing item type\nSet a new range: start, end and step.",
            "line": " src\\libs\\vis\\vis.js:10520"
        },
        {
            "message": "Missing item type\nSet a new step size",
            "line": " src\\libs\\vis\\vis.js:10536"
        },
        {
            "message": "Missing item type\nCalculate a nice step size, closest to the desired step size.\nReturns a value in one of the ranges 1*10^n, 2*10^n, or 5*10^n, where n is an\ninteger Number. For example 1, 2, 5, 10, 20, 50, etc...",
            "line": " src\\libs\\vis\\vis.js:10550"
        },
        {
            "message": "Missing item type\nreturns the current value of the step",
            "line": " src\\libs\\vis\\vis.js:10580"
        },
        {
            "message": "Missing item type\nreturns the current step size",
            "line": " src\\libs\\vis\\vis.js:10588"
        },
        {
            "message": "Missing item type\nSet the current value to the largest value smaller than start, which\nis a multiple of the step size",
            "line": " src\\libs\\vis\\vis.js:10596"
        },
        {
            "message": "Missing item type\nDo a step, add the step size to the current value",
            "line": " src\\libs\\vis\\vis.js:10604"
        },
        {
            "message": "Missing item type\nReturns true whether the end is reached",
            "line": " src\\libs\\vis\\vis.js:10611"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:10621"
        },
        {
            "message": "Missing item type\n'use strict';\nvar _Configurator = __webpack_require__(20);\nvar _Configurator2 = _interopRequireDefault(_Configurator);\nvar _Validator = __webpack_require__(26);\nvar _Validator2 = _interopRequireDefault(_Validator);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar Emitter = __webpack_require__(12);\n  var Hammer = __webpack_require__(22);\n  var moment = __webpack_require__(2);\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\n  var Range = __webpack_require__(27);\n  var Core = __webpack_require__(30);\n  var TimeAxis = __webpack_require__(41);\n  var CurrentTime = __webpack_require__(46);\n  var CustomTime = __webpack_require__(44);\n  var ItemSet = __webpack_require__(31);\nvar printStyle = __webpack_require__(26).printStyle;\n  var allOptions = __webpack_require__(47).allOptions;\n  var configureOptions = __webpack_require__(47).configureOptions;\n/**\n   * Create a timeline visualization\n   * @param {HTMLElement} container\n   * @param {vis.DataSet | vis.DataView | Array} [items]\n   * @param {vis.DataSet | vis.DataView | Array} [groups]\n   * @param {Object} [options]  See Timeline.setOptions for the available options.\n   * @constructor\n   * @extends Core",
            "line": " src\\libs\\vis\\vis.js:10623"
        },
        {
            "message": "Missing item type\nLoad a configurator",
            "line": " src\\libs\\vis\\vis.js:10801"
        },
        {
            "message": "Missing item type\nForce a redraw. The size of all items will be recalculated.\nCan be useful to manually redraw when option autoResize=false and the window\nhas been resized, or when the items CSS has been changed.\n\nNote: this function will be overridden on construction with a trottled version",
            "line": " src\\libs\\vis\\vis.js:10810"
        },
        {
            "message": "Missing item type\nSet items",
            "line": " src\\libs\\vis\\vis.js:10847"
        },
        {
            "message": "Missing item type\nSet groups",
            "line": " src\\libs\\vis\\vis.js:10873"
        },
        {
            "message": "Missing item type\nSet both items and groups in one go",
            "line": " src\\libs\\vis\\vis.js:10893"
        },
        {
            "message": "Missing item type\nSet selected items by their id. Replaces the current selection\nUnknown id's are silently ignored.",
            "line": " src\\libs\\vis\\vis.js:10907"
        },
        {
            "message": "Missing item type\nGet the selected items by their id",
            "line": " src\\libs\\vis\\vis.js:10932"
        },
        {
            "message": "Missing item type\nAdjust the visible window such that the selected item (or multiple items)\nare centered on screen.",
            "line": " src\\libs\\vis\\vis.js:10940"
        },
        {
            "message": "Missing item type\nSet Timeline window such that it fits all items",
            "line": " src\\libs\\vis\\vis.js:10991"
        },
        {
            "message": "Missing item type\nDetermine the range of the items, taking into account their actual width\nand a margin of 10 pixels on both sides.",
            "line": " src\\libs\\vis\\vis.js:11007"
        },
        {
            "message": "Missing item type\nCalculate the data range of the items start and end dates",
            "line": " src\\libs\\vis\\vis.js:11087"
        },
        {
            "message": "Missing item type\nGenerate Timeline related information from an event",
            "line": " src\\libs\\vis\\vis.js:11115"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:11171"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _ColorPicker = __webpack_require__(21);\nvar _ColorPicker2 = _interopRequireDefault(_ColorPicker);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\n/**\n   * The way this works is for all properties of this.possible options, you can supply the property name in any form to list the options.\n   * Boolean options are recognised as Boolean\n   * Number options should be written as array: [default value, min value, max value, stepsize]\n   * Colors should be written as array: ['color', '#ffffff']\n   * Strings with should be written as array: [option1, option2, option3, ..]\n   *\n   * The options are matched with their counterparts in each of the modules and the values used in the configuration are\n   *\n   * @param parentModule        | the location where parentModule.setOptions() can be called\n   * @param defaultContainer    | the default container of the module\n   * @param configureOptions    | the fully configured and predefined options set found in allOptions.js\n   * @param pixelRatio          | canvas pixel ratio",
            "line": " src\\libs\\vis\\vis.js:11173"
        },
        {
            "message": "Missing item type\nrefresh all options.\nBecause all modules parse their options by themselves, we just use their options. We copy them here.",
            "line": " src\\libs\\vis\\vis.js:11242"
        },
        {
            "message": "Missing item type\nCreate all DOM elements",
            "line": " src\\libs\\vis\\vis.js:11304"
        },
        {
            "message": "Missing item type\ndraw all DOM elements on the screen",
            "line": " src\\libs\\vis\\vis.js:11375"
        },
        {
            "message": "Missing item type\ndelete all DOM elements",
            "line": " src\\libs\\vis\\vis.js:11393"
        },
        {
            "message": "Missing item type\nget the value from the actualOptions if it exists",
            "line": " src\\libs\\vis\\vis.js:11414"
        },
        {
            "message": "Missing item type\nall option elements are wrapped in an item",
            "line": " src\\libs\\vis\\vis.js:11436"
        },
        {
            "message": "Missing item type\nheader for major subjects",
            "line": " src\\libs\\vis\\vis.js:11474"
        },
        {
            "message": "Missing item type\nmake a label, if it is an object label, it gets different styling.",
            "line": " src\\libs\\vis\\vis.js:11489"
        },
        {
            "message": "Missing item type\nmake a dropdown list for multiple possible string optoins",
            "line": " src\\libs\\vis\\vis.js:11513"
        },
        {
            "message": "Missing item type\nmake a range object for numeric options",
            "line": " src\\libs\\vis\\vis.js:11552"
        },
        {
            "message": "Missing item type\nprepare the popup",
            "line": " src\\libs\\vis\\vis.js:11623"
        },
        {
            "message": "Missing item type\nremove the popup from the dom",
            "line": " src\\libs\\vis\\vis.js:11648"
        },
        {
            "message": "Missing item type\nShow the popup if it is needed.",
            "line": " src\\libs\\vis\\vis.js:11664"
        },
        {
            "message": "Missing item type\nmake a checkbox for boolean options.",
            "line": " src\\libs\\vis\\vis.js:11689"
        },
        {
            "message": "Missing item type\nmake a text input field for string options.",
            "line": " src\\libs\\vis\\vis.js:11726"
        },
        {
            "message": "Missing item type\nmake a color field with a color picker for color fields",
            "line": " src\\libs\\vis\\vis.js:11754"
        },
        {
            "message": "Missing item type\nused by the color buttons to call the color picker.",
            "line": " src\\libs\\vis\\vis.js:11787"
        },
        {
            "message": "Missing item type\nparse an object and draw the correct items",
            "line": " src\\libs\\vis\\vis.js:11822"
        },
        {
            "message": "Missing item type\nhandle the array type of option",
            "line": " src\\libs\\vis\\vis.js:11902"
        },
        {
            "message": "Missing item type\ncalled to update the network with the new settings.",
            "line": " src\\libs\\vis\\vis.js:11932"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:11997"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar Hammer = __webpack_require__(22);\n  var hammerUtil = __webpack_require__(25);\n  var util = __webpack_require__(1);\nvar ColorPicker = function () {\n    function ColorPicker() {\n      var pixelRatio = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n    _classCallCheck(this, ColorPicker);\n    this.pixelRatio = pixelRatio;\n      this.generated = false;\n      this.centerCoordinates = { x: 289 / 2, y: 289 / 2 };\n      this.r = 289 * 0.49;\n      this.color = { r: 255, g: 255, b: 255, a: 1.0 };\n      this.hueCircle = undefined;\n      this.initialColor = { r: 255, g: 255, b: 255, a: 1.0 };\n      this.previousColor = undefined;\n      this.applied = false;\n    // bound by\n      this.updateCallback = function () {};\n      this.closeCallback = function () {};\n    // create all DOM elements\n      this._create();\n    }\n  /**\n     * this inserts the colorPicker into a div from the DOM\n     * @param container",
            "line": " src\\libs\\vis\\vis.js:11999"
        },
        {
            "message": "Missing item type\nthe callback is executed on apply and save. Bind it to the application",
            "line": " src\\libs\\vis\\vis.js:12059"
        },
        {
            "message": "Missing item type\nthe callback is executed on apply and save. Bind it to the application",
            "line": " src\\libs\\vis\\vis.js:12074"
        },
        {
            "message": "Missing item type\nSet the color of the colorPicker\nSupported formats:\n'red'                   --> HTML color string\n'#ffffff'               --> hex string\n'rbg(255,255,255)'      --> rgb string\n'rgba(255,255,255,1.0)' --> rgba string\n{r:255,g:255,b:255}     --> rgb object\n{r:255,g:255,b:255,a:1.0} --> rgba object",
            "line": " src\\libs\\vis\\vis.js:12097"
        },
        {
            "message": "Missing item type\nthis shows the color picker.\nThe hue circle is constructed once and stored.",
            "line": " src\\libs\\vis\\vis.js:12156"
        },
        {
            "message": "Missing item type\nHide the picker. Is called by the cancel button.\nOptional boolean to store the previous color for easy access later on.",
            "line": " src\\libs\\vis\\vis.js:12176"
        },
        {
            "message": "Missing item type\nbound to the save button. Saves and hides.",
            "line": " src\\libs\\vis\\vis.js:12211"
        },
        {
            "message": "Missing item type\nBound to apply button. Saves but does not close. Is undone by the cancel button.",
            "line": " src\\libs\\vis\\vis.js:12224"
        },
        {
            "message": "Missing item type\nload the color from the previous session.",
            "line": " src\\libs\\vis\\vis.js:12237"
        },
        {
            "message": "Missing item type\nset the color, place the picker",
            "line": " src\\libs\\vis\\vis.js:12252"
        },
        {
            "message": "Missing item type\nbound to opacity control",
            "line": " src\\libs\\vis\\vis.js:12283"
        },
        {
            "message": "Missing item type\nbound to brightness control",
            "line": " src\\libs\\vis\\vis.js:12296"
        },
        {
            "message": "Missing item type\nupdate the color picker. A black circle overlays the hue circle to mimic the brightness decreasing.",
            "line": " src\\libs\\vis\\vis.js:12313"
        },
        {
            "message": "Missing item type\nused by create to set the size of the canvas.",
            "line": " src\\libs\\vis\\vis.js:12348"
        },
        {
            "message": "Missing item type\ncreate all dom elements\nTODO: cleanup, lots of similar dom elements",
            "line": " src\\libs\\vis\\vis.js:12363"
        },
        {
            "message": "Missing item type\nbind hammer to the color picker",
            "line": " src\\libs\\vis\\vis.js:12494"
        },
        {
            "message": "Missing item type\ngenerate the hue circle. This is relatively heavy (200ms) and is done only once on the first time it is shown.",
            "line": " src\\libs\\vis\\vis.js:12526"
        },
        {
            "message": "Missing item type\nmove the selector. This is called by hammer functions.",
            "line": " src\\libs\\vis\\vis.js:12575"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:12626"
        },
        {
            "message": "Missing item type\n'use strict';\n// Only load hammer.js when in a browser environment\n  // (loading hammer.js in a node.js environment gives errors)\n  if (typeof window !== 'undefined') {\n    var propagating = __webpack_require__(23);\n    var Hammer = window['Hammer'] || __webpack_require__(24);\n    module.exports = propagating(Hammer, {\n      preventDefault: 'mouse'\n    });\n  } else {\n    module.exports = function () {\n      throw Error('hammer.js is only available in a browser, not in node.js.');\n    };\n  }\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:12628"
        },
        {
            "message": "Missing item type\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n(function (factory) {\n    if (true) {\n      // AMD. Register as an anonymous module.\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports === 'object') {\n      // Node. Does not work with strict CommonJS, but\n      // only CommonJS-like environments that support module.exports,\n      // like Node.\n      module.exports = factory();\n    } else {\n      // Browser globals (root is window)\n      window.propagating = factory();\n    }\n  }(function () {\n    var _firstTarget = null; // singleton, will contain the target element where the touch event started\n  /**\n     * Extend an Hammer.js instance with event propagation.\n     *\n     * Features:\n     * - Events emitted by hammer will propagate in order from child to parent\n     *   elements.\n     * - Events are extended with a function `event.stopPropagation()` to stop\n     *   propagation to parent elements.\n     * - An option `preventDefault` to stop all default browser behavior.\n     *\n     * Usage:\n     *   var hammer = propagatingHammer(new Hammer(element));\n     *   var hammer = propagatingHammer(new Hammer(element), {preventDefault: true});\n     *\n     * @param {Hammer.Manager} hammer   An hammer instance.\n     * @param {Object} [options]        Available options:\n     *                                  - `preventDefault: true | false | 'mouse' | 'touch' | 'pen'`.\n     *                                    Enforce preventing the default browser behavior.\n     *                                    Cannot be set to `false`.\n     * @return {Hammer.Manager} Returns the same hammer instance with extended\n     *                          functionality",
            "line": " src\\libs\\vis\\vis.js:12648"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:12737"
        },
        {
            "message": "Missing item type\nRegister a handler for one or multiple events",
            "line": " src\\libs\\vis\\vis.js:12740"
        },
        {
            "message": "Missing item type\nUnregister a handler for one or multiple events",
            "line": " src\\libs\\vis\\vis.js:12762"
        },
        {
            "message": "Missing item type\nEmit to the event listeners",
            "line": " src\\libs\\vis\\vis.js:12793"
        },
        {
            "message": "Missing item type\nA static event handler, applying event propagation.",
            "line": " src\\libs\\vis\\vis.js:12822"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:12883"
        },
        {
            "message": "Missing item type\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.6 - 2015-12-23\n   * http://hammerjs.github.io/\n   *\n   * Copyright (c) 2015 Jorik Tangelder;",
            "line": " src\\libs\\vis\\vis.js:12885"
        },
        {
            "message": "Missing item type\nset a timeout with a given scope",
            "line": " src\\libs\\vis\\vis.js:12904"
        },
        {
            "message": "Missing item type\nif the argument is an array, we want to execute the fn on each entry\nif it aint an array we don't want to do a thing.\nthis is used by all the methods that accept a single and array argument.",
            "line": " src\\libs\\vis\\vis.js:12915"
        },
        {
            "message": "Missing item type\nwalk objects and arrays",
            "line": " src\\libs\\vis\\vis.js:12932"
        },
        {
            "message": "Missing item type\nwrap a method with a deprecation warning and stack trace",
            "line": " src\\libs\\vis\\vis.js:12960"
        },
        {
            "message": "Missing item type\nextend object.\nmeans that properties in dest will be overwritten by the ones in src.",
            "line": " src\\libs\\vis\\vis.js:12983"
        },
        {
            "message": "Missing item type\nextend object.\nmeans that properties in dest will be overwritten by the ones in src.",
            "line": " src\\libs\\vis\\vis.js:13014"
        },
        {
            "message": "Missing item type\nmerge the values from src in the dest.\nmeans that properties that exist in dest will not be overwritten by src",
            "line": " src\\libs\\vis\\vis.js:13034"
        },
        {
            "message": "Missing item type\nsimple class inheritance",
            "line": " src\\libs\\vis\\vis.js:13045"
        },
        {
            "message": "Missing item type\nsimple function bind",
            "line": " src\\libs\\vis\\vis.js:13064"
        },
        {
            "message": "Missing item type\nlet a boolean value also be a function that must return a boolean\nthis first item in args will be used as the context",
            "line": " src\\libs\\vis\\vis.js:13076"
        },
        {
            "message": "Missing item type\nuse the val2 when val1 is undefined",
            "line": " src\\libs\\vis\\vis.js:13090"
        },
        {
            "message": "Missing item type\naddEventListener with multiple events at once",
            "line": " src\\libs\\vis\\vis.js:13100"
        },
        {
            "message": "Missing item type\nremoveEventListener with multiple events at once",
            "line": " src\\libs\\vis\\vis.js:13112"
        },
        {
            "message": "Missing item type\nsmall indexOf wrapper",
            "line": " src\\libs\\vis\\vis.js:13141"
        },
        {
            "message": "Missing item type\nsplit string on whitespace",
            "line": " src\\libs\\vis\\vis.js:13151"
        },
        {
            "message": "Missing item type\nfind if a array contains the object using indexOf or a simple polyFill",
            "line": " src\\libs\\vis\\vis.js:13160"
        },
        {
            "message": "Missing item type\nconvert array-like objects to real arrays",
            "line": " src\\libs\\vis\\vis.js:13182"
        },
        {
            "message": "Missing item type\nunique array with objects based on a key (like 'id') or just by the array's value",
            "line": " src\\libs\\vis\\vis.js:13191"
        },
        {
            "message": "Missing item type\nget the prefixed property",
            "line": " src\\libs\\vis\\vis.js:13225"
        },
        {
            "message": "Missing item type\nget a unique id",
            "line": " src\\libs\\vis\\vis.js:13248"
        },
        {
            "message": "Missing item type\nget the window object of an element",
            "line": " src\\libs\\vis\\vis.js:13257"
        },
        {
            "message": "Missing item type\ncreate new input type manager",
            "line": " src\\libs\\vis\\vis.js:13298"
        },
        {
            "message": "Missing item type\nshould handle the inputEvent data and trigger the callback",
            "line": " src\\libs\\vis\\vis.js:13325"
        },
        {
            "message": "Missing item type\nbind the events",
            "line": " src\\libs\\vis\\vis.js:13331"
        },
        {
            "message": "Missing item type\nunbind the events",
            "line": " src\\libs\\vis\\vis.js:13340"
        },
        {
            "message": "Missing item type\ncreate new input type manager\ncalled by the Manager constructor",
            "line": " src\\libs\\vis\\vis.js:13350"
        },
        {
            "message": "Missing item type\nhandle input events",
            "line": " src\\libs\\vis\\vis.js:13374"
        },
        {
            "message": "Missing item type\nextend the data with some usable properties like scale, rotate, velocity etc",
            "line": " src\\libs\\vis\\vis.js:13407"
        },
        {
            "message": "Missing item type\nvelocity is calculated every x ms",
            "line": " src\\libs\\vis\\vis.js:13486"
        },
        {
            "message": "Missing item type\ncreate a simple clone from the input used for storage of firstInput and firstMultiple",
            "line": " src\\libs\\vis\\vis.js:13521"
        },
        {
            "message": "Missing item type\nget the center of all the pointers",
            "line": " src\\libs\\vis\\vis.js:13548"
        },
        {
            "message": "Missing item type\ncalculate the velocity between two points. unit is in px per ms.",
            "line": " src\\libs\\vis\\vis.js:13577"
        },
        {
            "message": "Missing item type\nget the direction between two points",
            "line": " src\\libs\\vis\\vis.js:13591"
        },
        {
            "message": "Missing item type\ncalculate the absolute distance between two points",
            "line": " src\\libs\\vis\\vis.js:13608"
        },
        {
            "message": "Missing item type\ncalculate the angle between two coordinates",
            "line": " src\\libs\\vis\\vis.js:13625"
        },
        {
            "message": "Missing item type\ncalculate the rotation degrees between two pointersets",
            "line": " src\\libs\\vis\\vis.js:13641"
        },
        {
            "message": "Missing item type\ncalculate the scale factor between two pointersets\nno scale is 1, and goes down to 0 when pinched together, and bigger when pinched out",
            "line": " src\\libs\\vis\\vis.js:13651"
        },
        {
            "message": "Missing item type\nMouse events input",
            "line": " src\\libs\\vis\\vis.js:13671"
        },
        {
            "message": "Missing item type\nhandle mouse events",
            "line": " src\\libs\\vis\\vis.js:13687"
        },
        {
            "message": "Missing item type\nPointer events input",
            "line": " src\\libs\\vis\\vis.js:13746"
        },
        {
            "message": "Missing item type\nhandle mouse events",
            "line": " src\\libs\\vis\\vis.js:13761"
        },
        {
            "message": "Missing item type\nTouch events input",
            "line": " src\\libs\\vis\\vis.js:13820"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:13862"
        },
        {
            "message": "Missing item type\nMulti-user touch events input",
            "line": " src\\libs\\vis\\vis.js:13888"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:13917"
        },
        {
            "message": "Missing item type\nCombined touch and mouse input\n\nTouch has a higher priority then mouse, and while touching no mouse events are allowed.\nThis because touch devices also emit mouse events while doing a touch.",
            "line": " src\\libs\\vis\\vis.js:13978"
        },
        {
            "message": "Missing item type\nhandle mouse and touch events",
            "line": " src\\libs\\vis\\vis.js:13996"
        },
        {
            "message": "Missing item type\nremove the event listeners",
            "line": " src\\libs\\vis\\vis.js:14022"
        },
        {
            "message": "Missing item type\nTouch Action\nsets the touchAction property or uses the js alternative",
            "line": " src\\libs\\vis\\vis.js:14042"
        },
        {
            "message": "Missing item type\nset the touchAction value on the element or enable the polyfill",
            "line": " src\\libs\\vis\\vis.js:14055"
        },
        {
            "message": "Missing item type\njust re-set the touchAction value",
            "line": " src\\libs\\vis\\vis.js:14071"
        },
        {
            "message": "Missing item type\ncompute the value for the touchAction property based on the recognizer's settings",
            "line": " src\\libs\\vis\\vis.js:14078"
        },
        {
            "message": "Missing item type\nthis method is called on each input cycle and provides the preventing of the browser behavior",
            "line": " src\\libs\\vis\\vis.js:14092"
        },
        {
            "message": "Missing item type\ncall preventDefault to prevent the browser's default behavior (scrolling in most cases)",
            "line": " src\\libs\\vis\\vis.js:14140"
        },
        {
            "message": "Missing item type\nwhen the touchActions are collected they are not a valid value, so we need to clean things up. *",
            "line": " src\\libs\\vis\\vis.js:14150"
        },
        {
            "message": "Missing item type\nRecognizer flow explained; *\nAll recognizers have the initial state of POSSIBLE when a input session starts.\nThe definition of a input session is from the first input until the last input, with all it's movement in it. *\nExample session for mouse-input: mousedown -> mousemove -> mouseup\n\nOn each recognizing cycle (see Manager.recognize) the .recognize() method is executed\nwhich determines with state it should be.\n\nIf the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\nPOSSIBLE to give it another change on the next cycle.\n\n              Possible\n                 |\n           +-----+---------------+\n           |                     |\n     +-----+-----+               |\n     |           |               |\n  Failed      Cancelled          |\n                         +-------+------+\n                         |              |\n                     Recognized       Began\n                                        |\n                                     Changed\n                                        |\n                                 Ended/Recognized",
            "line": " src\\libs\\vis\\vis.js:14185"
        },
        {
            "message": "Missing item type\nRecognizer\nEvery recognizer needs to extend from this class.",
            "line": " src\\libs\\vis\\vis.js:14220"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:14243"
        },
        {
            "message": "Missing item type\nset options",
            "line": " src\\libs\\vis\\vis.js:14249"
        },
        {
            "message": "Missing item type\nrecognize simultaneous with an other recognizer.",
            "line": " src\\libs\\vis\\vis.js:14262"
        },
        {
            "message": "Missing item type\ndrop the simultaneous link. it doesnt remove the link on the other recognizer.",
            "line": " src\\libs\\vis\\vis.js:14281"
        },
        {
            "message": "Missing item type\nrecognizer can only run when an other is failing",
            "line": " src\\libs\\vis\\vis.js:14296"
        },
        {
            "message": "Missing item type\ndrop the requireFailure link. it does not remove the link on the other recognizer.",
            "line": " src\\libs\\vis\\vis.js:14315"
        },
        {
            "message": "Missing item type\nhas require failures boolean",
            "line": " src\\libs\\vis\\vis.js:14333"
        },
        {
            "message": "Missing item type\nif the recognizer can recognize simultaneous with an other recognizer",
            "line": " src\\libs\\vis\\vis.js:14341"
        },
        {
            "message": "Missing item type\nYou should use `tryEmit` instead of `emit` directly to check\nthat all the needed recognizers has failed before emitting.",
            "line": " src\\libs\\vis\\vis.js:14350"
        },
        {
            "message": "Missing item type\nCheck that all the require failure recognizers has failed,\nif true, it emits a gesture event,\notherwise, setup the state to FAILED.",
            "line": " src\\libs\\vis\\vis.js:14380"
        },
        {
            "message": "Missing item type\ncan we emit?",
            "line": " src\\libs\\vis\\vis.js:14394"
        },
        {
            "message": "Missing item type\nupdate the recognizer",
            "line": " src\\libs\\vis\\vis.js:14409"
        },
        {
            "message": "Missing item type\nreturn the state of the recognizer\nthe actual recognizing happens in this method",
            "line": " src\\libs\\vis\\vis.js:14439"
        },
        {
            "message": "Missing item type\nreturn the preferred touch-action",
            "line": " src\\libs\\vis\\vis.js:14448"
        },
        {
            "message": "Missing item type\ncalled when the gesture isn't allowed to recognize\nlike when another is being recognized or it is disabled",
            "line": " src\\libs\\vis\\vis.js:14455"
        },
        {
            "message": "Missing item type\nget a usable string, used as event postfix",
            "line": " src\\libs\\vis\\vis.js:14463"
        },
        {
            "message": "Missing item type\ndirection cons to string",
            "line": " src\\libs\\vis\\vis.js:14481"
        },
        {
            "message": "Missing item type\nget a recognizer by name if it is bound to a manager",
            "line": " src\\libs\\vis\\vis.js:14499"
        },
        {
            "message": "Missing item type\nThis recognizer is just used as a base for the simple attribute recognizers.",
            "line": " src\\libs\\vis\\vis.js:14513"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:14523"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:14528"
        },
        {
            "message": "Missing item type\nUsed to check if it the recognizer receives valid input, like input.distance > 10.",
            "line": " src\\libs\\vis\\vis.js:14535"
        },
        {
            "message": "Missing item type\nProcess the input and return the state for the recognizer",
            "line": " src\\libs\\vis\\vis.js:14546"
        },
        {
            "message": "Missing item type\nPan\nRecognized when the pointer is down and moved in the allowed direction.",
            "line": " src\\libs\\vis\\vis.js:14574"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:14588"
        },
        {
            "message": "Missing item type\nPinch\nRecognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).",
            "line": " src\\libs\\vis\\vis.js:14654"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:14665"
        },
        {
            "message": "Missing item type\nPress\nRecognized when the pointer is down for x ms without any movement.",
            "line": " src\\libs\\vis\\vis.js:14693"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:14707"
        },
        {
            "message": "Missing item type\nRotate\nRecognized when two or more pointer are moving in a circular motion.",
            "line": " src\\libs\\vis\\vis.js:14764"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:14775"
        },
        {
            "message": "Missing item type\nSwipe\nRecognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.",
            "line": " src\\libs\\vis\\vis.js:14795"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:14806"
        },
        {
            "message": "Missing item type\nA tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\nbetween the given interval and position. The delay option can be used to recognize multi-taps without firing\na single tap.\n\nThe eventData from the emitted event contains the property `tapCount`, which contains the amount of\nmulti-taps being recognized.",
            "line": " src\\libs\\vis\\vis.js:14851"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:14875"
        },
        {
            "message": "Missing item type\nSimple way to create a manager with a default set of recognizers.",
            "line": " src\\libs\\vis\\vis.js:14966"
        },
        {
            "message": "Missing item type\ndefault settings",
            "line": " src\\libs\\vis\\vis.js:14983"
        },
        {
            "message": "Missing item type\nset if DOM events are being triggered.\nBut this is slower and unused by simple implementations, so disabled by default.",
            "line": " src\\libs\\vis\\vis.js:14988"
        },
        {
            "message": "Missing item type\nThe value for the touchAction property/fallback.\nWhen set to `compute` it will magically set the correct value based on the added recognizers.",
            "line": " src\\libs\\vis\\vis.js:14996"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:15004"
        },
        {
            "message": "Missing item type\nEXPERIMENTAL FEATURE -- can be removed/changed\nChange the parent input target element.\nIf Null, then it is being set the to main element.",
            "line": " src\\libs\\vis\\vis.js:15010"
        },
        {
            "message": "Missing item type\nforce an input class",
            "line": " src\\libs\\vis\\vis.js:15019"
        },
        {
            "message": "Missing item type\nDefault recognizer setup when calling `Hammer()`\nWhen creating a new Manager these will be skipped.",
            "line": " src\\libs\\vis\\vis.js:15026"
        },
        {
            "message": "Missing item type\nSome CSS properties can be used to improve the working of Hammer.\nAdd them to this method and they will be set when creating a new Manager.",
            "line": " src\\libs\\vis\\vis.js:15042"
        },
        {
            "message": "Missing item type\nDisables text selection to improve the dragging gesture. Mainly for desktop browsers.",
            "line": " src\\libs\\vis\\vis.js:15048"
        },
        {
            "message": "Missing item type\nDisable the Windows Phone grippers when pressing an element.",
            "line": " src\\libs\\vis\\vis.js:15055"
        },
        {
            "message": "Missing item type\nDisables the default callout shown when you touch and hold a touch target.\nOn iOS, when you touch and hold a touch target such as a link, Safari displays\na callout containing information about the link. This property allows you to disable that callout.",
            "line": " src\\libs\\vis\\vis.js:15062"
        },
        {
            "message": "Missing item type\nSpecifies whether zooming is enabled. Used by IE10>",
            "line": " src\\libs\\vis\\vis.js:15071"
        },
        {
            "message": "Missing item type\nSpecifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.",
            "line": " src\\libs\\vis\\vis.js:15078"
        },
        {
            "message": "Missing item type\nOverrides the highlight color shown when the user taps a link or a JavaScript\nclickable element in iOS. This property obeys the alpha value, if specified.",
            "line": " src\\libs\\vis\\vis.js:15085"
        },
        {
            "message": "Missing item type\nManager",
            "line": " src\\libs\\vis\\vis.js:15098"
        },
        {
            "message": "Missing item type\nset options",
            "line": " src\\libs\\vis\\vis.js:15127"
        },
        {
            "message": "Missing item type\nstop recognizing for this session.\nThis session will be discarded, when a new [input]start event is fired.\nWhen forced, the recognizer cycle is stopped immediately.",
            "line": " src\\libs\\vis\\vis.js:15148"
        },
        {
            "message": "Missing item type\nrun the recognizers!\ncalled by the inputHandler function on every movement of the pointers (touches)\nit walks through all the recognizers and tries to detect the gesture that is being made",
            "line": " src\\libs\\vis\\vis.js:15158"
        },
        {
            "message": "Missing item type\nget a recognizer by its event name.",
            "line": " src\\libs\\vis\\vis.js:15214"
        },
        {
            "message": "Missing item type\nadd a recognizer to the manager\nexisting recognizers with the same event name will be removed",
            "line": " src\\libs\\vis\\vis.js:15233"
        },
        {
            "message": "Missing item type\nremove a recognizer by name or instance",
            "line": " src\\libs\\vis\\vis.js:15257"
        },
        {
            "message": "Missing item type\nbind event",
            "line": " src\\libs\\vis\\vis.js:15283"
        },
        {
            "message": "Missing item type\nunbind event, leave emit blank to remove all handlers",
            "line": " src\\libs\\vis\\vis.js:15298"
        },
        {
            "message": "Missing item type\nemit event to the listeners",
            "line": " src\\libs\\vis\\vis.js:15316"
        },
        {
            "message": "Missing item type\ndestroy the manager and unbinds all events\nit doesn't unbind dom events, that is the user own responsibility",
            "line": " src\\libs\\vis\\vis.js:15345"
        },
        {
            "message": "Missing item type\nadd/remove the css properties as defined in manager.options.cssProps",
            "line": " src\\libs\\vis\\vis.js:15359"
        },
        {
            "message": "Missing item type\ntrigger dom event",
            "line": " src\\libs\\vis\\vis.js:15374"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:15457"
        },
        {
            "message": "Missing item type\n'use strict';\nvar Hammer = __webpack_require__(22);\n/**\n   * Register a touch event, taking place before a gesture\n   * @param {Hammer} hammer       A hammer instance\n   * @param {function} callback   Callback, called as callback(event)",
            "line": " src\\libs\\vis\\vis.js:15459"
        },
        {
            "message": "Missing item type\nRegister a release event, taking place after a gesture",
            "line": " src\\libs\\vis\\vis.js:15480"
        },
        {
            "message": "Missing item type\nUnregister a touch event, taking place before a gesture",
            "line": " src\\libs\\vis\\vis.js:15495"
        },
        {
            "message": "Missing item type\nUnregister a release event, taking place before a gesture",
            "line": " src\\libs\\vis\\vis.js:15504"
        },
        {
            "message": "Missing item type\nHack the PinchRecognizer such that it doesn't prevent default behavior\nfor vertical panning.\n\nYeah ... this is quite a hack ... see https://github.com/hammerjs/hammer.js/issues/932",
            "line": " src\\libs\\vis\\vis.js:15511"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:15531"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar errorFound = false;\n  var allOptions = void 0;\n  var printStyle = 'background: #FFeeee; color: #dd0000';\n  /**\n   *  Used to validate options.",
            "line": " src\\libs\\vis\\vis.js:15533"
        },
        {
            "message": "Missing item type\nMain function to be called",
            "line": " src\\libs\\vis\\vis.js:15561"
        },
        {
            "message": "Missing item type\nWill traverse an object recursively and check every value",
            "line": " src\\libs\\vis\\vis.js:15582"
        },
        {
            "message": "Missing item type\nCheck every value. If the value is an object, call the parse function on that object.",
            "line": " src\\libs\\vis\\vis.js:15599"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:15631"
        },
        {
            "message": "Missing item type\ntraverse the options in search for a match.",
            "line": " src\\libs\\vis\\vis.js:15730"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:15855"
        },
        {
            "message": "Missing item type\n'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar util = __webpack_require__(1);\n  var hammerUtil = __webpack_require__(25);\n  var moment = __webpack_require__(2);\n  var Component = __webpack_require__(28);\n  var DateUtil = __webpack_require__(29);\n/**\n   * @constructor Range\n   * A Range controls a numeric range with a start and end value.\n   * The Range adjusts the range based on mouse events or programmatic changes,\n   * and triggers events when the range is changing or has been changed.\n   * @param {{dom: Object, domProps: Object, emitter: Emitter}} body\n   * @param {Object} [options]    See description at Range.setOptions",
            "line": " src\\libs\\vis\\vis.js:15857"
        },
        {
            "message": "Missing item type\nSet options for the range controller",
            "line": " src\\libs\\vis\\vis.js:15925"
        },
        {
            "message": "Missing item type\nTest whether direction has a valid value",
            "line": " src\\libs\\vis\\vis.js:15954"
        },
        {
            "message": "Missing item type\nSet a new start and end range",
            "line": " src\\libs\\vis\\vis.js:15964"
        },
        {
            "message": "Missing item type\nStop an animation",
            "line": " src\\libs\\vis\\vis.js:16040"
        },
        {
            "message": "Missing item type\nSet a new start and end range. This method is the same as setRange, but\ndoes not trigger a range change and range changed event, and it returns\ntrue when the range is changed",
            "line": " src\\libs\\vis\\vis.js:16051"
        },
        {
            "message": "Missing item type\nRetrieve the current range.",
            "line": " src\\libs\\vis\\vis.js:16165"
        },
        {
            "message": "Missing item type\nCalculate the conversion offset and scale for current range, based on\nthe provided width",
            "line": " src\\libs\\vis\\vis.js:16176"
        },
        {
            "message": "Missing item type\nStatic method to calculate the conversion offset and scale for a range,\nbased on the provided start, end, and width",
            "line": " src\\libs\\vis\\vis.js:16186"
        },
        {
            "message": "Missing item type\nStart dragging horizontally or vertically",
            "line": " src\\libs\\vis\\vis.js:16211"
        },
        {
            "message": "Missing item type\nPerform dragging operation",
            "line": " src\\libs\\vis\\vis.js:16239"
        },
        {
            "message": "Missing item type\nStop dragging operation",
            "line": " src\\libs\\vis\\vis.js:16295"
        },
        {
            "message": "Missing item type\nEvent handler for mouse wheel event, used to zoom\nCode from http://adomas.org/javascript-mouse-wheel/",
            "line": " src\\libs\\vis\\vis.js:16324"
        },
        {
            "message": "Missing item type\nStart of a touch gesture",
            "line": " src\\libs\\vis\\vis.js:16379"
        },
        {
            "message": "Missing item type\nHandle pinch event",
            "line": " src\\libs\\vis\\vis.js:16392"
        },
        {
            "message": "Missing item type\nTest whether the mouse from a mouse event is inside the visible window,\nbetween the current start and end date",
            "line": " src\\libs\\vis\\vis.js:16438"
        },
        {
            "message": "Missing item type\nHelper function to calculate the center date for zooming",
            "line": " src\\libs\\vis\\vis.js:16455"
        },
        {
            "message": "Missing item type\nGet the pointer location relative to the location of the dom element",
            "line": " src\\libs\\vis\\vis.js:16476"
        },
        {
            "message": "Missing item type\nZoom the range the given scale in or out. Start and end date will\nbe adjusted, and the timeline will be redrawn. You can optionally give a\ndate around which to zoom.\nFor example, try scale = 0.9 or 1.1",
            "line": " src\\libs\\vis\\vis.js:16490"
        },
        {
            "message": "Missing item type\nMove the range with a given delta to the left or right. Start and end\nvalue will be adjusted. For example, try delta = 0.1 or -0.1",
            "line": " src\\libs\\vis\\vis.js:16530"
        },
        {
            "message": "Missing item type\nMove the range to a new center point",
            "line": " src\\libs\\vis\\vis.js:16550"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:16568"
        },
        {
            "message": "Missing item type\n\"use strict\";\n/**\n   * Prototype for visual components\n   * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} [body]\n   * @param {Object} [options]",
            "line": " src\\libs\\vis\\vis.js:16570"
        },
        {
            "message": "Missing item type\nSet options for the component. The new options will be merged into the\ncurrent options.",
            "line": " src\\libs\\vis\\vis.js:16584"
        },
        {
            "message": "Missing item type\nRepaint the component",
            "line": " src\\libs\\vis\\vis.js:16595"
        },
        {
            "message": "Missing item type\nDestroy the component. Cleanup DOM and event listeners",
            "line": " src\\libs\\vis\\vis.js:16604"
        },
        {
            "message": "Missing item type\nTest whether the component is resized since the last time _isResized() was\ncalled.",
            "line": " src\\libs\\vis\\vis.js:16611"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:16628"
        },
        {
            "message": "Missing item type\n\"use strict\";\n/**\n   * used in Core to convert the options into a volatile variable\n   * \n   * @param {function} moment\n   * @param {Object} body\n   * @param {Array | Object} hiddenDates",
            "line": " src\\libs\\vis\\vis.js:16630"
        },
        {
            "message": "Missing item type\ncreate new entrees for the repeating hidden dates",
            "line": " src\\libs\\vis\\vis.js:16664"
        },
        {
            "message": "Missing item type\nremove duplicates from the hidden dates list. Duplicates are evil. They mess everything up.\nScales with N^2",
            "line": " src\\libs\\vis\\vis.js:16815"
        },
        {
            "message": "Missing item type\nUsed in TimeStep to avoid the hidden times.",
            "line": " src\\libs\\vis\\vis.js:16862"
        },
        {
            "message": "Missing item type\nreplaces the Core toScreen methods",
            "line": " src\\libs\\vis\\vis.js:16919"
        },
        {
            "message": "Missing item type\nReplaces the core toTime methods",
            "line": " src\\libs\\vis\\vis.js:16944"
        },
        {
            "message": "Missing item type\nSupport function",
            "line": " src\\libs\\vis\\vis.js:16967"
        },
        {
            "message": "Missing item type\nSupport function",
            "line": " src\\libs\\vis\\vis.js:16987"
        },
        {
            "message": "Missing item type\nsum the duration from start to finish, including the hidden duration,\nuntil the required amount has been reached, return the accumulated hidden duration",
            "line": " src\\libs\\vis\\vis.js:17018"
        },
        {
            "message": "Missing item type\nused to step over to either side of a hidden block. Correction is disabled on tablets, might be set to true",
            "line": " src\\libs\\vis\\vis.js:17049"
        },
        {
            "message": "Missing item type\nCheck if a time is hidden",
            "line": " src\\libs\\vis\\vis.js:17078"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:17099"
        },
        {
            "message": "Missing item type\n'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar Emitter = __webpack_require__(12);\n  var Hammer = __webpack_require__(22);\n  var hammerUtil = __webpack_require__(25);\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\n  var Range = __webpack_require__(27);\n  var ItemSet = __webpack_require__(31);\n  var TimeAxis = __webpack_require__(41);\n  var Activator = __webpack_require__(42);\n  var DateUtil = __webpack_require__(29);\n  var CustomTime = __webpack_require__(44);\n/**\n   * Create a timeline visualization\n   * @constructor",
            "line": " src\\libs\\vis\\vis.js:17101"
        },
        {
            "message": "Missing item type\nCreate the main DOM for the Core: a root panel containing left, right,\ntop, bottom, content, and background panel.",
            "line": " src\\libs\\vis\\vis.js:17129"
        },
        {
            "message": "Missing item type\nSet options. Options will be passed to all components loaded in the Timeline.",
            "line": " src\\libs\\vis\\vis.js:17296"
        },
        {
            "message": "Missing item type\nReturns true when the Timeline is active.",
            "line": " src\\libs\\vis\\vis.js:17428"
        },
        {
            "message": "Missing item type\nDestroy the Core, clean up all DOM elements and event listeners.",
            "line": " src\\libs\\vis\\vis.js:17436"
        },
        {
            "message": "Missing item type\nSet a custom time bar",
            "line": " src\\libs\\vis\\vis.js:17479"
        },
        {
            "message": "Missing item type\nRetrieve the current custom time.",
            "line": " src\\libs\\vis\\vis.js:17498"
        },
        {
            "message": "Missing item type\nSet a custom title for the custom time bar.",
            "line": " src\\libs\\vis\\vis.js:17514"
        },
        {
            "message": "Missing item type\nRetrieve meta information from an event.\nShould be overridden by classes extending Core",
            "line": " src\\libs\\vis\\vis.js:17532"
        },
        {
            "message": "Missing item type\nAdd custom vertical bar",
            "line": " src\\libs\\vis\\vis.js:17542"
        },
        {
            "message": "Missing item type\nRemove previously added custom bar",
            "line": " src\\libs\\vis\\vis.js:17574"
        },
        {
            "message": "Missing item type\nGet the id's of the currently visible items.",
            "line": " src\\libs\\vis\\vis.js:17595"
        },
        {
            "message": "Missing item type\nSet Core window such that it fits all items",
            "line": " src\\libs\\vis\\vis.js:17603"
        },
        {
            "message": "Missing item type\nCalculate the data range of the items start and end dates",
            "line": " src\\libs\\vis\\vis.js:17630"
        },
        {
            "message": "Missing item type\nSet the visible window. Both parameters are optional, you can change only\nstart or only end. Syntax:\n\n    TimeLine.setWindow(start, end)\n    TimeLine.setWindow(start, end, options)\n    TimeLine.setWindow(range)\n\nWhere start and end can be a Date, number, or string, and range is an\nobject with properties start and end.",
            "line": " src\\libs\\vis\\vis.js:17640"
        },
        {
            "message": "Missing item type\nMove the window such that given time is centered on screen.",
            "line": " src\\libs\\vis\\vis.js:17673"
        },
        {
            "message": "Missing item type\nGet the visible window",
            "line": " src\\libs\\vis\\vis.js:17695"
        },
        {
            "message": "Missing item type\nForce a redraw. Can be overridden by implementations of Core\n\nNote: this function will be overridden on construction with a trottled version",
            "line": " src\\libs\\vis\\vis.js:17707"
        },
        {
            "message": "Missing item type\nRedraw for internal use. Redraws all components. See also the public\nmethod redraw.",
            "line": " src\\libs\\vis\\vis.js:17716"
        },
        {
            "message": "Missing item type\nSet a current time. This can be used for example to ensure that a client's\ntime is synchronized with a shared server time.\nOnly applicable when option `showCurrentTime` is true.",
            "line": " src\\libs\\vis\\vis.js:17892"
        },
        {
            "message": "Missing item type\nGet the current time.\nOnly applicable when option `showCurrentTime` is true.",
            "line": " src\\libs\\vis\\vis.js:17907"
        },
        {
            "message": "Missing item type\nConvert a position on screen (pixels) to a datetime",
            "line": " src\\libs\\vis\\vis.js:17920"
        },
        {
            "message": "Missing item type\nConvert a position on the global screen (pixels) to a datetime",
            "line": " src\\libs\\vis\\vis.js:17931"
        },
        {
            "message": "Missing item type\nConvert a datetime (Date object) into a position on the screen",
            "line": " src\\libs\\vis\\vis.js:17944"
        },
        {
            "message": "Missing item type\nConvert a datetime (Date object) into a position on the root\nThis is used to get the pixel density estimate for the screen, not the center panel",
            "line": " src\\libs\\vis\\vis.js:17956"
        },
        {
            "message": "Missing item type\nInitialize watching when option autoResize is true",
            "line": " src\\libs\\vis\\vis.js:17971"
        },
        {
            "message": "Missing item type\nWatch for changes in the size of the container. On resize, the Panel will\nautomatically redraw itself.",
            "line": " src\\libs\\vis\\vis.js:17983"
        },
        {
            "message": "Missing item type\nStop watching for a resize of the frame.",
            "line": " src\\libs\\vis\\vis.js:18026"
        },
        {
            "message": "Missing item type\nStart moving the timeline vertically",
            "line": " src\\libs\\vis\\vis.js:18043"
        },
        {
            "message": "Missing item type\nStart moving the timeline vertically",
            "line": " src\\libs\\vis\\vis.js:18053"
        },
        {
            "message": "Missing item type\nMove the timeline vertically",
            "line": " src\\libs\\vis\\vis.js:18062"
        },
        {
            "message": "Missing item type\nApply a scrollTop",
            "line": " src\\libs\\vis\\vis.js:18082"
        },
        {
            "message": "Missing item type\nUpdate the current scrollTop when the height of  the containers has been changed",
            "line": " src\\libs\\vis\\vis.js:18094"
        },
        {
            "message": "Missing item type\nGet the current scrollTop",
            "line": " src\\libs\\vis\\vis.js:18118"
        },
        {
            "message": "Missing item type\nLoad a configurator",
            "line": " src\\libs\\vis\\vis.js:18127"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:18138"
        },
        {
            "message": "Missing item type\n'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar Hammer = __webpack_require__(22);\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\n  var TimeStep = __webpack_require__(32);\n  var Component = __webpack_require__(28);\n  var Group = __webpack_require__(33);\n  var BackgroundGroup = __webpack_require__(37);\n  var BoxItem = __webpack_require__(38);\n  var PointItem = __webpack_require__(39);\n  var RangeItem = __webpack_require__(35);\n  var BackgroundItem = __webpack_require__(40);\nvar UNGROUPED = '__ungrouped__'; // reserved group id for ungrouped items\n  var BACKGROUND = '__background__'; // reserved group id for background items without group\n/**\n   * An ItemSet holds a set of items and ranges which can be displayed in a\n   * range. The width is determined by the parent of the ItemSet, and the height\n   * is determined by the size of the items.\n   * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} body\n   * @param {Object} [options]      See ItemSet.setOptions for the available options.\n   * @constructor ItemSet\n   * @extends Component",
            "line": " src\\libs\\vis\\vis.js:18140"
        },
        {
            "message": "Missing item type\nCreate the HTML DOM for the ItemSet",
            "line": " src\\libs\\vis\\vis.js:18313"
        },
        {
            "message": "Missing item type\nSet options for the ItemSet. Existing options will be extended/overwritten.",
            "line": " src\\libs\\vis\\vis.js:18388"
        },
        {
            "message": "Missing item type\nMark the ItemSet dirty so it will refresh everything with next redraw.\nOptionally, all items can be marked as dirty and be refreshed.",
            "line": " src\\libs\\vis\\vis.js:18522"
        },
        {
            "message": "Missing item type\nDestroy the ItemSet",
            "line": " src\\libs\\vis\\vis.js:18539"
        },
        {
            "message": "Missing item type\nHide the component from the DOM",
            "line": " src\\libs\\vis\\vis.js:18553"
        },
        {
            "message": "Missing item type\nShow the component in the DOM (when not already visible).",
            "line": " src\\libs\\vis\\vis.js:18573"
        },
        {
            "message": "Missing item type\nSet selected items by their id. Replaces the current selection\nUnknown id's are silently ignored.",
            "line": " src\\libs\\vis\\vis.js:18594"
        },
        {
            "message": "Missing item type\nGet the selected items by their id",
            "line": " src\\libs\\vis\\vis.js:18626"
        },
        {
            "message": "Missing item type\nGet the id's of the currently visible items.",
            "line": " src\\libs\\vis\\vis.js:18634"
        },
        {
            "message": "Missing item type\nDeselect a selected item",
            "line": " src\\libs\\vis\\vis.js:18664"
        },
        {
            "message": "Missing item type\nRepaint the component",
            "line": " src\\libs\\vis\\vis.js:18680"
        },
        {
            "message": "Missing item type\nGet the first group, aligned with the axis",
            "line": " src\\libs\\vis\\vis.js:18754"
        },
        {
            "message": "Missing item type\nCreate or delete the group holding all ungrouped items. This group is used when\nthere are no groups specified.",
            "line": " src\\libs\\vis\\vis.js:18767"
        },
        {
            "message": "Missing item type\nGet the element for the labelset",
            "line": " src\\libs\\vis\\vis.js:18813"
        },
        {
            "message": "Missing item type\nSet items",
            "line": " src\\libs\\vis\\vis.js:18821"
        },
        {
            "message": "Missing item type\nGet the current items",
            "line": " src\\libs\\vis\\vis.js:18868"
        },
        {
            "message": "Missing item type\nSet groups",
            "line": " src\\libs\\vis\\vis.js:18876"
        },
        {
            "message": "Missing item type\nGet the current groups",
            "line": " src\\libs\\vis\\vis.js:18926"
        },
        {
            "message": "Missing item type\nRemove an item by its id",
            "line": " src\\libs\\vis\\vis.js:18934"
        },
        {
            "message": "Missing item type\nGet the time of an item based on it's data and options.type",
            "line": " src\\libs\\vis\\vis.js:18954"
        },
        {
            "message": "Missing item type\nGet the group id for an item",
            "line": " src\\libs\\vis\\vis.js:18964"
        },
        {
            "message": "Missing item type\nHandle updated items",
            "line": " src\\libs\\vis\\vis.js:18979"
        },
        {
            "message": "Missing item type\nHandle added items",
            "line": " src\\libs\\vis\\vis.js:19031"
        },
        {
            "message": "Missing item type\nHandle removed items",
            "line": " src\\libs\\vis\\vis.js:19038"
        },
        {
            "message": "Missing item type\nUpdate the order of item in all groups",
            "line": " src\\libs\\vis\\vis.js:19062"
        },
        {
            "message": "Missing item type\nHandle updated groups",
            "line": " src\\libs\\vis\\vis.js:19074"
        },
        {
            "message": "Missing item type\nHandle changed groups (added or updated)",
            "line": " src\\libs\\vis\\vis.js:19083"
        },
        {
            "message": "Missing item type\nHandle removed groups",
            "line": " src\\libs\\vis\\vis.js:19130"
        },
        {
            "message": "Missing item type\nReorder the groups if needed",
            "line": " src\\libs\\vis\\vis.js:19151"
        },
        {
            "message": "Missing item type\nAdd a new item",
            "line": " src\\libs\\vis\\vis.js:19185"
        },
        {
            "message": "Missing item type\nUpdate an existing item",
            "line": " src\\libs\\vis\\vis.js:19199"
        },
        {
            "message": "Missing item type\nDelete an item from the ItemSet: remove it from the DOM, from the map\nwith items, and from the map with visible items, and from the selection",
            "line": " src\\libs\\vis\\vis.js:19223"
        },
        {
            "message": "Missing item type\nCreate an array containing all items being a range (having an end date)",
            "line": " src\\libs\\vis\\vis.js:19244"
        },
        {
            "message": "Missing item type\nRegister the clicked item on touch, before dragStart is initiated.\n\ndragStart is initiated from a mousemove event, AFTER the mouse/touch is\nalready moving. Therefore, the mouse/touch can sometimes be above an other\nDOM element than the item itself.",
            "line": " src\\libs\\vis\\vis.js:19261"
        },
        {
            "message": "Missing item type\nGiven an group id, returns the index it has.",
            "line": " src\\libs\\vis\\vis.js:19279"
        },
        {
            "message": "Missing item type\nStart dragging the selected events",
            "line": " src\\libs\\vis\\vis.js:19291"
        },
        {
            "message": "Missing item type\nStart creating a new range item by dragging.",
            "line": " src\\libs\\vis\\vis.js:19359"
        },
        {
            "message": "Missing item type\nDrag selected items",
            "line": " src\\libs\\vis\\vis.js:19405"
        },
        {
            "message": "Missing item type\nMove an item to another group",
            "line": " src\\libs\\vis\\vis.js:19515"
        },
        {
            "message": "Missing item type\nEnd of dragging selected items",
            "line": " src\\libs\\vis\\vis.js:19534"
        },
        {
            "message": "Missing item type\nHandle selecting/deselecting an item when tapping it",
            "line": " src\\libs\\vis\\vis.js:19756"
        },
        {
            "message": "Missing item type\nHandle creation and updates of an item on double tap",
            "line": " src\\libs\\vis\\vis.js:19789"
        },
        {
            "message": "Missing item type\nHandle selecting/deselecting multiple items when holding an item",
            "line": " src\\libs\\vis\\vis.js:19849"
        },
        {
            "message": "Missing item type\nCalculate the time range of a list of items",
            "line": " src\\libs\\vis\\vis.js:19921"
        },
        {
            "message": "Missing item type\nFind an item from an event target:\nsearches for the attribute 'timeline-item' in the event target's element tree",
            "line": " src\\libs\\vis\\vis.js:19953"
        },
        {
            "message": "Missing item type\nFind the Group from an event target:\nsearches for the attribute 'timeline-group' in the event target's element tree",
            "line": " src\\libs\\vis\\vis.js:19971"
        },
        {
            "message": "Missing item type\nFind the ItemSet from an event target:\nsearches for the attribute 'timeline-itemset' in the event target's element tree",
            "line": " src\\libs\\vis\\vis.js:20002"
        },
        {
            "message": "Missing item type\nClone the data of an item, and \"normalize\" it: convert the start and end date\nto the type (Date, Moment, ...) configured in the DataSet. If not configured,\nstart and end are converted to Date.",
            "line": " src\\libs\\vis\\vis.js:20020"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:20049"
        },
        {
            "message": "Missing item type\n'use strict';\nvar moment = __webpack_require__(2);\n  var DateUtil = __webpack_require__(29);\n  var util = __webpack_require__(1);\n/**\n   * @constructor  TimeStep\n   * The class TimeStep is an iterator for dates. You provide a start date and an\n   * end date. The class itself determines the best scale (step size) based on the\n   * provided start Date, end Date, and minimumStep.\n   *\n   * If minimumStep is provided, the step size is chosen as close as possible\n   * to the minimumStep but larger than minimumStep. If minimumStep is not\n   * provided, the scale is set to 1 DAY.\n   * The minimumStep should correspond with the onscreen size of about 6 characters\n   *\n   * Alternatively, you can set a scale by hand.\n   * After creation, you can initialize the class by executing first(). Then you\n   * can iterate from the start date to the end date via next(). You can check if\n   * the end date is reached with the function hasNext(). After each step, you can\n   * retrieve the current date via getCurrent().\n   * The TimeStep has scales ranging from milliseconds, seconds, minutes, hours,\n   * days, to years.\n   *\n   * Version: 1.2\n   *\n   * @param {Date} [start]         The start date, for example new Date(2010, 9, 21)\n   *                               or new Date(2010, 9, 21, 23, 45, 00)\n   * @param {Date} [end]           The end date\n   * @param {Number} [minimumStep] Optional. Minimum step size in milliseconds",
            "line": " src\\libs\\vis\\vis.js:20051"
        },
        {
            "message": "Missing item type\nSet custom constructor function for moment. Can be used to set dates\nto UTC or to set a utcOffset.",
            "line": " src\\libs\\vis\\vis.js:20139"
        },
        {
            "message": "Missing item type\nSet custom formatting for the minor an major labels of the TimeStep.\nBoth `minorLabels` and `majorLabels` are an Object with properties:\n'millisecond', 'second', 'minute', 'hour', 'weekday', 'day', 'month', 'year'.",
            "line": " src\\libs\\vis\\vis.js:20153"
        },
        {
            "message": "Missing item type\nSet a new range\nIf minimumStep is provided, the step size is chosen as close as possible\nto the minimumStep but larger than minimumStep. If minimumStep is not\nprovided, the scale is set to 1 DAY.\nThe minimumStep should correspond with the onscreen size of about 6 characters",
            "line": " src\\libs\\vis\\vis.js:20164"
        },
        {
            "message": "Missing item type\nSet the range iterator to the start date.",
            "line": " src\\libs\\vis\\vis.js:20187"
        },
        {
            "message": "Missing item type\nRound the current date to the first minor date value\nThis must be executed once when the current date is set to start Date",
            "line": " src\\libs\\vis\\vis.js:20195"
        },
        {
            "message": "Missing item type\nCheck if the there is a next step",
            "line": " src\\libs\\vis\\vis.js:20245"
        },
        {
            "message": "Missing item type\nDo the next step",
            "line": " src\\libs\\vis\\vis.js:20253"
        },
        {
            "message": "Missing item type\nGet the current datetime",
            "line": " src\\libs\\vis\\vis.js:20338"
        },
        {
            "message": "Missing item type\nSet a custom scale. Autoscaling will be disabled.\nFor example setScale('minute', 5) will result\nin minor steps of 5 minutes, and major steps of an hour.",
            "line": " src\\libs\\vis\\vis.js:20346"
        },
        {
            "message": "Missing item type\nEnable or disable autoscaling",
            "line": " src\\libs\\vis\\vis.js:20366"
        },
        {
            "message": "Missing item type\nAutomatically determine the scale that bests fits the provided minimum step",
            "line": " src\\libs\\vis\\vis.js:20374"
        },
        {
            "message": "Missing item type\nSnap a date to a rounded value.\nThe snap intervals are dependent on the current scale and step.\nStatic function",
            "line": " src\\libs\\vis\\vis.js:20483"
        },
        {
            "message": "Missing item type\nCheck if the current value is a major value (for example when the step\nis DAY, a major value is each first day of the MONTH)",
            "line": " src\\libs\\vis\\vis.js:20586"
        },
        {
            "message": "Missing item type\nReturns formatted text for the minor axislabel, depending on the current\ndate and the scale. For example when scale is MINUTE, the current time is\nformatted as \"hh:mm\".",
            "line": " src\\libs\\vis\\vis.js:20655"
        },
        {
            "message": "Missing item type\nReturns formatted text for the major axis label, depending on the current\ndate and the scale. For example when scale is MINUTE, the major scale is\nhours, and the hour will be formatted as \"hh\".",
            "line": " src\\libs\\vis\\vis.js:20670"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:20759"
        },
        {
            "message": "Missing item type\n'use strict';\nvar util = __webpack_require__(1);\n  var stack = __webpack_require__(34);\n  var RangeItem = __webpack_require__(35);\n/**\n   * @constructor Group\n   * @param {Number | String} groupId\n   * @param {Object} data\n   * @param {ItemSet} itemSet",
            "line": " src\\libs\\vis\\vis.js:20761"
        },
        {
            "message": "Missing item type\nCreate DOM elements for the group",
            "line": " src\\libs\\vis\\vis.js:20808"
        },
        {
            "message": "Missing item type\nSet the group data for this group",
            "line": " src\\libs\\vis\\vis.js:20846"
        },
        {
            "message": "Missing item type\nGet the width of the group label",
            "line": " src\\libs\\vis\\vis.js:20907"
        },
        {
            "message": "Missing item type\nRepaint this group",
            "line": " src\\libs\\vis\\vis.js:20915"
        },
        {
            "message": "Missing item type\nrecalculate the height of the subgroups",
            "line": " src\\libs\\vis\\vis.js:21009"
        },
        {
            "message": "Missing item type\nrecalculate the height of the group",
            "line": " src\\libs\\vis\\vis.js:21028"
        },
        {
            "message": "Missing item type\nShow this group: attach to the DOM",
            "line": " src\\libs\\vis\\vis.js:21062"
        },
        {
            "message": "Missing item type\nHide this group: remove from the DOM",
            "line": " src\\libs\\vis\\vis.js:21083"
        },
        {
            "message": "Missing item type\nAdd an item to the group",
            "line": " src\\libs\\vis\\vis.js:21108"
        },
        {
            "message": "Missing item type\nRemove an item from the group",
            "line": " src\\libs\\vis\\vis.js:21165"
        },
        {
            "message": "Missing item type\nRemove an item from the corresponding DataSet",
            "line": " src\\libs\\vis\\vis.js:21191"
        },
        {
            "message": "Missing item type\nReorder the items",
            "line": " src\\libs\\vis\\vis.js:21199"
        },
        {
            "message": "Missing item type\nUpdate the visible items",
            "line": " src\\libs\\vis\\vis.js:21222"
        },
        {
            "message": "Missing item type\nthis function is very similar to the _checkIfInvisible() but it does not\nreturn booleans, hides the item if it should not be seen and always adds to\nthe visibleItems.\nthis one is for brute forcing and hiding.",
            "line": " src\\libs\\vis\\vis.js:21338"
        },
        {
            "message": "Missing item type\nthis function is very similar to the _checkIfInvisible() but it does not\nreturn booleans, hides the item if it should not be seen and always adds to\nthe visibleItems.\nthis one is for brute forcing and hiding.",
            "line": " src\\libs\\vis\\vis.js:21360"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:21384"
        },
        {
            "message": "Missing item type\n'use strict';\n// Utility functions for ordering and stacking of items\n  var EPSILON = 0.001; // used when checking collisions, to prevent round-off errors\n/**\n   * Order items by their start data\n   * @param {Item[]} items",
            "line": " src\\libs\\vis\\vis.js:21386"
        },
        {
            "message": "Missing item type\nOrder items by their end date. If they have no end date, their start date\nis used.",
            "line": " src\\libs\\vis\\vis.js:21403"
        },
        {
            "message": "Missing item type\nAdjust vertical positions of the items such that they don't overlap each\nother.",
            "line": " src\\libs\\vis\\vis.js:21417"
        },
        {
            "message": "Missing item type\nAdjust vertical positions of the items without stacking them",
            "line": " src\\libs\\vis\\vis.js:21466"
        },
        {
            "message": "Missing item type\nTest if the two provided items collide\nThe items must have parameters left, width, top, and height.",
            "line": " src\\libs\\vis\\vis.js:21494"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:21508"
        },
        {
            "message": "Missing item type\n'use strict';\nvar Hammer = __webpack_require__(22);\n  var Item = __webpack_require__(36);\n/**\n   * @constructor RangeItem\n   * @extends Item\n   * @param {Object} data             Object containing parameters start, end\n   *                                  content, className.\n   * @param {{toScreen: function, toTime: function}} conversion\n   *                                  Conversion functions from time to screen and vice versa\n   * @param {Object} [options]        Configuration options\n   *                                  // TODO: describe options",
            "line": " src\\libs\\vis\\vis.js:21510"
        },
        {
            "message": "Missing item type\nCheck whether this item is visible inside given range",
            "line": " src\\libs\\vis\\vis.js:21552"
        },
        {
            "message": "Missing item type\nRepaint the item",
            "line": " src\\libs\\vis\\vis.js:21562"
        },
        {
            "message": "Missing item type\nShow the item in the DOM (when not already visible). The items DOM will\nbe created when needed.",
            "line": " src\\libs\\vis\\vis.js:21640"
        },
        {
            "message": "Missing item type\nHide the item from the DOM (when visible)",
            "line": " src\\libs\\vis\\vis.js:21650"
        },
        {
            "message": "Missing item type\nReposition the item horizontally",
            "line": " src\\libs\\vis\\vis.js:21666"
        },
        {
            "message": "Missing item type\nReposition the item vertically",
            "line": " src\\libs\\vis\\vis.js:21743"
        },
        {
            "message": "Missing item type\nRepaint a drag area on the left side of the range when the range is selected",
            "line": " src\\libs\\vis\\vis.js:21758"
        },
        {
            "message": "Missing item type\nRepaint a drag area on the right side of the range when the range is selected",
            "line": " src\\libs\\vis\\vis.js:21780"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:21804"
        },
        {
            "message": "Missing item type\n'use strict';\nvar Hammer = __webpack_require__(22);\n  var util = __webpack_require__(1);\n/**\n   * @constructor Item\n   * @param {Object} data             Object containing (optional) parameters type,\n   *                                  start, end, content, group, className.\n   * @param {{toScreen: function, toTime: function}} conversion\n   *                                  Conversion functions from time to screen and vice versa\n   * @param {Object} options          Configuration options\n   *                                  // TODO: describe available options",
            "line": " src\\libs\\vis\\vis.js:21806"
        },
        {
            "message": "Missing item type\nSelect current item",
            "line": " src\\libs\\vis\\vis.js:21847"
        },
        {
            "message": "Missing item type\nUnselect current item",
            "line": " src\\libs\\vis\\vis.js:21856"
        },
        {
            "message": "Missing item type\nSet data for the item. Existing data will be updated. The id should not\nbe changed. When the item is displayed, it will be redrawn immediately.",
            "line": " src\\libs\\vis\\vis.js:21865"
        },
        {
            "message": "Missing item type\nSet a parent for the item",
            "line": " src\\libs\\vis\\vis.js:21885"
        },
        {
            "message": "Missing item type\nCheck whether this item is visible inside given range",
            "line": " src\\libs\\vis\\vis.js:21901"
        },
        {
            "message": "Missing item type\nShow the Item in the DOM (when not already visible)",
            "line": " src\\libs\\vis\\vis.js:21911"
        },
        {
            "message": "Missing item type\nHide the Item from the DOM (when visible)",
            "line": " src\\libs\\vis\\vis.js:21919"
        },
        {
            "message": "Missing item type\nRepaint the item",
            "line": " src\\libs\\vis\\vis.js:21927"
        },
        {
            "message": "Missing item type\nReposition the Item horizontally",
            "line": " src\\libs\\vis\\vis.js:21934"
        },
        {
            "message": "Missing item type\nReposition the Item vertically",
            "line": " src\\libs\\vis\\vis.js:21941"
        },
        {
            "message": "Missing item type\nRepaint a delete button on the top right of the item when the item is selected",
            "line": " src\\libs\\vis\\vis.js:21948"
        },
        {
            "message": "Missing item type\nSet HTML contents for the item",
            "line": " src\\libs\\vis\\vis.js:21981"
        },
        {
            "message": "Missing item type\nSet HTML contents for the item",
            "line": " src\\libs\\vis\\vis.js:22013"
        },
        {
            "message": "Missing item type\nProcess dataAttributes timeline option and set as data- attributes on dom.content",
            "line": " src\\libs\\vis\\vis.js:22026"
        },
        {
            "message": "Missing item type\nUpdate custom styles of the element",
            "line": " src\\libs\\vis\\vis.js:22056"
        },
        {
            "message": "Missing item type\nStringify the items contents",
            "line": " src\\libs\\vis\\vis.js:22075"
        },
        {
            "message": "Missing item type\nReturn the width of the item left from its start date",
            "line": " src\\libs\\vis\\vis.js:22087"
        },
        {
            "message": "Missing item type\nReturn the width of the item right from the max of its start and end date",
            "line": " src\\libs\\vis\\vis.js:22095"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:22105"
        },
        {
            "message": "Missing item type\n'use strict';\nvar util = __webpack_require__(1);\n  var Group = __webpack_require__(33);\n/**\n   * @constructor BackgroundGroup\n   * @param {Number | String} groupId\n   * @param {Object} data\n   * @param {ItemSet} itemSet",
            "line": " src\\libs\\vis\\vis.js:22107"
        },
        {
            "message": "Missing item type\nRepaint this group",
            "line": " src\\libs\\vis\\vis.js:22131"
        },
        {
            "message": "Missing item type\nShow this group: attach to the DOM",
            "line": " src\\libs\\vis\\vis.js:22158"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:22169"
        },
        {
            "message": "Missing item type\n'use strict';\nvar Item = __webpack_require__(36);\n  var util = __webpack_require__(1);\n/**\n   * @constructor BoxItem\n   * @extends Item\n   * @param {Object} data             Object containing parameters start\n   *                                  content, className.\n   * @param {{toScreen: function, toTime: function}} conversion\n   *                                  Conversion functions from time to screen and vice versa\n   * @param {Object} [options]        Configuration options\n   *                                  // TODO: describe available options",
            "line": " src\\libs\\vis\\vis.js:22171"
        },
        {
            "message": "Missing item type\nCheck whether this item is visible inside given range",
            "line": " src\\libs\\vis\\vis.js:22212"
        },
        {
            "message": "Missing item type\nRepaint the item",
            "line": " src\\libs\\vis\\vis.js:22224"
        },
        {
            "message": "Missing item type\nShow the item in the DOM (when not already displayed). The items DOM will\nbe created when needed.",
            "line": " src\\libs\\vis\\vis.js:22308"
        },
        {
            "message": "Missing item type\nHide the item from the DOM (when visible)",
            "line": " src\\libs\\vis\\vis.js:22318"
        },
        {
            "message": "Missing item type\nReposition the item horizontally",
            "line": " src\\libs\\vis\\vis.js:22333"
        },
        {
            "message": "Missing item type\nReposition the item vertically",
            "line": " src\\libs\\vis\\vis.js:22367"
        },
        {
            "message": "Missing item type\nReturn the width of the item left from its start date",
            "line": " src\\libs\\vis\\vis.js:22396"
        },
        {
            "message": "Missing item type\nReturn the width of the item right from its start date",
            "line": " src\\libs\\vis\\vis.js:22404"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:22414"
        },
        {
            "message": "Missing item type\n'use strict';\nvar Item = __webpack_require__(36);\n/**\n   * @constructor PointItem\n   * @extends Item\n   * @param {Object} data             Object containing parameters start\n   *                                  content, className.\n   * @param {{toScreen: function, toTime: function}} conversion\n   *                                  Conversion functions from time to screen and vice versa\n   * @param {Object} [options]        Configuration options\n   *                                  // TODO: describe available options",
            "line": " src\\libs\\vis\\vis.js:22416"
        },
        {
            "message": "Missing item type\nCheck whether this item is visible inside given range",
            "line": " src\\libs\\vis\\vis.js:22457"
        },
        {
            "message": "Missing item type\nRepaint the item",
            "line": " src\\libs\\vis\\vis.js:22469"
        },
        {
            "message": "Missing item type\nShow the item in the DOM (when not already visible). The items DOM will\nbe created when needed.",
            "line": " src\\libs\\vis\\vis.js:22551"
        },
        {
            "message": "Missing item type\nHide the item from the DOM (when visible)",
            "line": " src\\libs\\vis\\vis.js:22561"
        },
        {
            "message": "Missing item type\nReposition the item horizontally",
            "line": " src\\libs\\vis\\vis.js:22574"
        },
        {
            "message": "Missing item type\nReposition the item vertically",
            "line": " src\\libs\\vis\\vis.js:22587"
        },
        {
            "message": "Missing item type\nReturn the width of the item left from its start date",
            "line": " src\\libs\\vis\\vis.js:22602"
        },
        {
            "message": "Missing item type\nReturn the width of the item right from  its start date",
            "line": " src\\libs\\vis\\vis.js:22610"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:22620"
        },
        {
            "message": "Missing item type\n'use strict';\nvar Hammer = __webpack_require__(22);\n  var Item = __webpack_require__(36);\n  var BackgroundGroup = __webpack_require__(37);\n  var RangeItem = __webpack_require__(35);\n/**\n   * @constructor BackgroundItem\n   * @extends Item\n   * @param {Object} data             Object containing parameters start, end\n   *                                  content, className.\n   * @param {{toScreen: function, toTime: function}} conversion\n   *                                  Conversion functions from time to screen and vice versa\n   * @param {Object} [options]        Configuration options\n   *                                  // TODO: describe options",
            "line": " src\\libs\\vis\\vis.js:22622"
        },
        {
            "message": "Missing item type\nCheck whether this item is visible inside given range",
            "line": " src\\libs\\vis\\vis.js:22668"
        },
        {
            "message": "Missing item type\nRepaint the item",
            "line": " src\\libs\\vis\\vis.js:22678"
        },
        {
            "message": "Missing item type\nShow the item in the DOM (when not already visible). The items DOM will\nbe created when needed.",
            "line": " src\\libs\\vis\\vis.js:22747"
        },
        {
            "message": "Missing item type\nHide the item from the DOM (when visible)",
            "line": " src\\libs\\vis\\vis.js:22753"
        },
        {
            "message": "Missing item type\nReposition the item horizontally",
            "line": " src\\libs\\vis\\vis.js:22759"
        },
        {
            "message": "Missing item type\nReposition the item vertically",
            "line": " src\\libs\\vis\\vis.js:22765"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:22841"
        },
        {
            "message": "Missing item type\n'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar util = __webpack_require__(1);\n  var Component = __webpack_require__(28);\n  var TimeStep = __webpack_require__(32);\n  var DateUtil = __webpack_require__(29);\n  var moment = __webpack_require__(2);\n/**\n   * A horizontal time axis\n   * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} body\n   * @param {Object} [options]        See TimeAxis.setOptions for the available\n   *                                  options.\n   * @constructor TimeAxis\n   * @extends Component",
            "line": " src\\libs\\vis\\vis.js:22843"
        },
        {
            "message": "Missing item type\nSet options for the TimeAxis.\nParameters will be merged in current options.",
            "line": " src\\libs\\vis\\vis.js:22907"
        },
        {
            "message": "Missing item type\nCreate the HTML DOM for the TimeAxis",
            "line": " src\\libs\\vis\\vis.js:22944"
        },
        {
            "message": "Missing item type\nDestroy the TimeAxis",
            "line": " src\\libs\\vis\\vis.js:22955"
        },
        {
            "message": "Missing item type\nRepaint the component",
            "line": " src\\libs\\vis\\vis.js:22970"
        },
        {
            "message": "Missing item type\nRepaint major and minor text labels and vertical grid lines",
            "line": " src\\libs\\vis\\vis.js:23026"
        },
        {
            "message": "Missing item type\nCreate a minor label for the axis at position x",
            "line": " src\\libs\\vis\\vis.js:23150"
        },
        {
            "message": "Missing item type\nCreate a Major label for the axis at position x",
            "line": " src\\libs\\vis\\vis.js:23182"
        },
        {
            "message": "Missing item type\nCreate a minor line for the axis at position x",
            "line": " src\\libs\\vis\\vis.js:23214"
        },
        {
            "message": "Missing item type\nCreate a Major line for the axis at position x",
            "line": " src\\libs\\vis\\vis.js:23248"
        },
        {
            "message": "Missing item type\nDetermine the size of text on the axis (both major and minor axis).\nThe size is calculated only once and then cached in this.props.",
            "line": " src\\libs\\vis\\vis.js:23282"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:23320"
        },
        {
            "message": "Missing item type\n'use strict';\nvar keycharm = __webpack_require__(43);\n  var Emitter = __webpack_require__(12);\n  var Hammer = __webpack_require__(22);\n  var util = __webpack_require__(1);\n/**\n   * Turn an element into an clickToUse element.\n   * When not active, the element has a transparent overlay. When the overlay is\n   * clicked, the mode is changed to active.\n   * When active, the element is displayed with a blue border around it, and\n   * the interactive contents of the element can be used. When clicked outside\n   * the element, the elements mode is changed to inactive.\n   * @param {Element} container\n   * @constructor",
            "line": " src\\libs\\vis\\vis.js:23322"
        },
        {
            "message": "Missing item type\nDestroy the activator. Cleans up all created DOM and event listeners",
            "line": " src\\libs\\vis\\vis.js:23390"
        },
        {
            "message": "Missing item type\nActivate the element\nOverlay is hidden, element is decorated with a blue shadow border",
            "line": " src\\libs\\vis\\vis.js:23410"
        },
        {
            "message": "Missing item type\nDeactivate the element\nOverlay is displayed on top of the element",
            "line": " src\\libs\\vis\\vis.js:23433"
        },
        {
            "message": "Missing item type\nHandle a tap event: activate the container",
            "line": " src\\libs\\vis\\vis.js:23447"
        },
        {
            "message": "Missing item type\nTest whether the element has the requested parent element somewhere in\nits chain of parent nodes.",
            "line": " src\\libs\\vis\\vis.js:23458"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:23479"
        },
        {
            "message": "Missing item type\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n  /**\n   * Created by Alex on 11/6/2014.",
            "line": " src\\libs\\vis\\vis.js:23481"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:23678"
        },
        {
            "message": "Missing item type\n'use strict';\nvar Hammer = __webpack_require__(22);\n  var util = __webpack_require__(1);\n  var Component = __webpack_require__(28);\n  var moment = __webpack_require__(2);\n  var locales = __webpack_require__(45);\n/**\n   * A custom time bar\n   * @param {{range: Range, dom: Object}} body\n   * @param {Object} [options]        Available parameters:\n   *                                  {number | string} id\n   *                                  {string} locales\n   *                                  {string} locale\n   * @constructor CustomTime\n   * @extends Component",
            "line": " src\\libs\\vis\\vis.js:23680"
        },
        {
            "message": "Missing item type\nSet options for the component. Options will be merged in current options.",
            "line": " src\\libs\\vis\\vis.js:23730"
        },
        {
            "message": "Missing item type\nCreate the DOM for the custom time",
            "line": " src\\libs\\vis\\vis.js:23744"
        },
        {
            "message": "Missing item type\nDestroy the CustomTime bar",
            "line": " src\\libs\\vis\\vis.js:23773"
        },
        {
            "message": "Missing item type\nRepaint the component",
            "line": " src\\libs\\vis\\vis.js:23785"
        },
        {
            "message": "Missing item type\nRemove the CustomTime from the DOM",
            "line": " src\\libs\\vis\\vis.js:23823"
        },
        {
            "message": "Missing item type\nSet custom time.",
            "line": " src\\libs\\vis\\vis.js:23833"
        },
        {
            "message": "Missing item type\nRetrieve the current custom time.",
            "line": " src\\libs\\vis\\vis.js:23842"
        },
        {
            "message": "Missing item type\nSet custom title.",
            "line": " src\\libs\\vis\\vis.js:23850"
        },
        {
            "message": "Missing item type\nStart moving horizontally",
            "line": " src\\libs\\vis\\vis.js:23858"
        },
        {
            "message": "Missing item type\nPerform moving operating.",
            "line": " src\\libs\\vis\\vis.js:23870"
        },
        {
            "message": "Missing item type\nStop moving operating.",
            "line": " src\\libs\\vis\\vis.js:23892"
        },
        {
            "message": "Missing item type\nFind a custom time from an event target:\nsearches for the attribute 'custom-time' in the event target's element tree",
            "line": " src\\libs\\vis\\vis.js:23909"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:23929"
        },
        {
            "message": "Missing item type\n'use strict';\n// English\n  exports['en'] = {\n    current: 'current',\n    time: 'time'\n  };\n  exports['en_EN'] = exports['en'];\n  exports['en_US'] = exports['en'];\n// Dutch\n  exports['nl'] = {\n    current: 'huidige',\n    time: 'tijd'\n  };\n  exports['nl_NL'] = exports['nl'];\n  exports['nl_BE'] = exports['nl'];\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:23931"
        },
        {
            "message": "Missing item type\n'use strict';\nvar util = __webpack_require__(1);\n  var Component = __webpack_require__(28);\n  var moment = __webpack_require__(2);\n  var locales = __webpack_require__(45);\n/**\n   * A current time bar\n   * @param {{range: Range, dom: Object, domProps: Object}} body\n   * @param {Object} [options]        Available parameters:\n   *                                  {Boolean} [showCurrentTime]\n   * @constructor CurrentTime\n   * @extends Component",
            "line": " src\\libs\\vis\\vis.js:23953"
        },
        {
            "message": "Missing item type\nCreate the HTML DOM for the current time bar",
            "line": " src\\libs\\vis\\vis.js:23991"
        },
        {
            "message": "Missing item type\nDestroy the CurrentTime bar",
            "line": " src\\libs\\vis\\vis.js:24005"
        },
        {
            "message": "Missing item type\nSet options for the component. Options will be merged in current options.",
            "line": " src\\libs\\vis\\vis.js:24015"
        },
        {
            "message": "Missing item type\nRepaint the component",
            "line": " src\\libs\\vis\\vis.js:24027"
        },
        {
            "message": "Missing item type\nStart auto refreshing the current time bar",
            "line": " src\\libs\\vis\\vis.js:24071"
        },
        {
            "message": "Missing item type\nStop auto refreshing the current time bar",
            "line": " src\\libs\\vis\\vis.js:24096"
        },
        {
            "message": "Missing item type\nSet a current time. This can be used for example to ensure that a client's\ntime is synchronized with a shared server time.",
            "line": " src\\libs\\vis\\vis.js:24106"
        },
        {
            "message": "Missing item type\nGet the current time.",
            "line": " src\\libs\\vis\\vis.js:24119"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:24129"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * This object contains all possible options. It will check if the types are correct, if required if the option is one\n   * of the allowed values.\n   *\n   * __any__ means that the name of the property does not matter.\n   * __type__ is a required field for all objects and contains the allowed types of all objects",
            "line": " src\\libs\\vis\\vis.js:24131"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:24370"
        },
        {
            "message": "Missing item type\n'use strict';\nvar _Configurator = __webpack_require__(20);\nvar _Configurator2 = _interopRequireDefault(_Configurator);\nvar _Validator = __webpack_require__(26);\nvar _Validator2 = _interopRequireDefault(_Validator);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar Emitter = __webpack_require__(12);\n  var Hammer = __webpack_require__(22);\n  var moment = __webpack_require__(2);\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\n  var Range = __webpack_require__(27);\n  var Core = __webpack_require__(30);\n  var TimeAxis = __webpack_require__(41);\n  var CurrentTime = __webpack_require__(46);\n  var CustomTime = __webpack_require__(44);\n  var LineGraph = __webpack_require__(49);\nvar printStyle = __webpack_require__(26).printStyle;\n  var allOptions = __webpack_require__(57).allOptions;\n  var configureOptions = __webpack_require__(57).configureOptions;\n/**\n   * Create a timeline visualization\n   * @param {HTMLElement} container\n   * @param {vis.DataSet | Array} [items]\n   * @param {Object} [options]  See Graph2d.setOptions for the available options.\n   * @constructor\n   * @extends Core",
            "line": " src\\libs\\vis\\vis.js:24372"
        },
        {
            "message": "Missing item type\nSet items",
            "line": " src\\libs\\vis\\vis.js:24527"
        },
        {
            "message": "Missing item type\nSet groups",
            "line": " src\\libs\\vis\\vis.js:24565"
        },
        {
            "message": "Missing item type\nReturns an object containing an SVG element with the icon of the group (size determined by iconWidth and iconHeight), the label of the group (content) and the yAxisOrientation of the group (left or right).",
            "line": " src\\libs\\vis\\vis.js:24585"
        },
        {
            "message": "Missing item type\nThis checks if the visible option of the supplied group (by ID) is true or false.",
            "line": " src\\libs\\vis\\vis.js:24605"
        },
        {
            "message": "Missing item type\nGet the data range of the item set.",
            "line": " src\\libs\\vis\\vis.js:24618"
        },
        {
            "message": "Missing item type\nGenerate Timeline related information from an event",
            "line": " src\\libs\\vis\\vis.js:24648"
        },
        {
            "message": "Missing item type\nLoad a configurator",
            "line": " src\\libs\\vis\\vis.js:24707"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:24718"
        },
        {
            "message": "Missing item type\n'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar util = __webpack_require__(1);\n  var DOMutil = __webpack_require__(7);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\n  var Component = __webpack_require__(28);\n  var DataAxis = __webpack_require__(50);\n  var GraphGroup = __webpack_require__(52);\n  var Legend = __webpack_require__(56);\n  var Bars = __webpack_require__(53);\n  var Lines = __webpack_require__(55);\n  var Points = __webpack_require__(54);\nvar UNGROUPED = '__ungrouped__'; // reserved group id for ungrouped items\n/**\n   * This is the constructor of the LineGraph. It requires a Timeline body and options.\n   *\n   * @param body\n   * @param options\n   * @constructor",
            "line": " src\\libs\\vis\\vis.js:24720"
        },
        {
            "message": "Missing item type\nCreate the HTML DOM for the ItemSet",
            "line": " src\\libs\\vis\\vis.js:24850"
        },
        {
            "message": "Missing item type\nset the options of the LineGraph. the mergeOptions is used for subObjects that have an enabled element.",
            "line": " src\\libs\\vis\\vis.js:24880"
        },
        {
            "message": "Missing item type\nHide the component from the DOM",
            "line": " src\\libs\\vis\\vis.js:24943"
        },
        {
            "message": "Missing item type\nShow the component in the DOM (when not already visible).",
            "line": " src\\libs\\vis\\vis.js:24953"
        },
        {
            "message": "Missing item type\nSet items",
            "line": " src\\libs\\vis\\vis.js:24964"
        },
        {
            "message": "Missing item type\nSet groups",
            "line": " src\\libs\\vis\\vis.js:25006"
        },
        {
            "message": "Missing item type\nthis cleans the group out off the legends and the dataaxis, updates the ungrouped and updates the graph",
            "line": " src\\libs\\vis\\vis.js:25066"
        },
        {
            "message": "Missing item type\nthis cleans the group out off the legends and the dataaxis",
            "line": " src\\libs\\vis\\vis.js:25079"
        },
        {
            "message": "Missing item type\nupdate a group object with the group dataset entree",
            "line": " src\\libs\\vis\\vis.js:25099"
        },
        {
            "message": "Missing item type\nthis updates all groups, it is used when there is an update the the itemset.",
            "line": " src\\libs\\vis\\vis.js:25136"
        },
        {
            "message": "Missing item type\nRedraw the component, mandatory function",
            "line": " src\\libs\\vis\\vis.js:25209"
        },
        {
            "message": "Missing item type\nUpdate and redraw the graph.",
            "line": " src\\libs\\vis\\vis.js:25297"
        },
        {
            "message": "Missing item type\nfirst select and preprocess the data from the datasets.\nthe groups have their preselection of data, we now loop over this data to see\nwhat data we need to draw. Sorted data is much faster.\nmore optimization is possible by doing the sampling before and using the binary search\nto find the end date to determine the increment.",
            "line": " src\\libs\\vis\\vis.js:25473"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:25516"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:25551"
        },
        {
            "message": "Missing item type\nthis sets the Y ranges for the Y axis. It also determines which of the axis should be shown or hidden.",
            "line": " src\\libs\\vis\\vis.js:25589"
        },
        {
            "message": "Missing item type\nThis shows or hides the Y axis if needed. If there is a change, the changed event is emitted by the updateYAxis function",
            "line": " src\\libs\\vis\\vis.js:25685"
        },
        {
            "message": "Missing item type\nThis uses the DataAxis object to generate the correct X coordinate on the SVG window. It uses the\nutil function toScreen to get the x coordinate from the timestamp. It also pre-filters the data and get the minMax ranges for\nthe yAxis.",
            "line": " src\\libs\\vis\\vis.js:25709"
        },
        {
            "message": "Missing item type\nThis uses the DataAxis object to generate the correct X coordinate on the SVG window. It uses the\nutil function toScreen to get the x coordinate from the timestamp. It also pre-filters the data and get the minMax ranges for\nthe yAxis.",
            "line": " src\\libs\\vis\\vis.js:25726"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:25750"
        },
        {
            "message": "Missing item type\n'use strict';\nvar util = __webpack_require__(1);\n  var DOMutil = __webpack_require__(7);\n  var Component = __webpack_require__(28);\n  var DataScale = __webpack_require__(51);\n  /**\n   * A horizontal time axis\n   * @param {Object} [options]        See DataAxis.setOptions for the available\n   *                                  options.\n   * @constructor DataAxis\n   * @extends Component\n   * @param body",
            "line": " src\\libs\\vis\\vis.js:25752"
        },
        {
            "message": "Missing item type\nCreate the HTML DOM for the DataAxis",
            "line": " src\\libs\\vis\\vis.js:25886"
        },
        {
            "message": "Missing item type\nCreate the HTML DOM for the DataAxis",
            "line": " src\\libs\\vis\\vis.js:25949"
        },
        {
            "message": "Missing item type\nCreate the HTML DOM for the DataAxis",
            "line": " src\\libs\\vis\\vis.js:25967"
        },
        {
            "message": "Missing item type\nSet a range (start and end)",
            "line": " src\\libs\\vis\\vis.js:25981"
        },
        {
            "message": "Missing item type\nRepaint the component",
            "line": " src\\libs\\vis\\vis.js:25992"
        },
        {
            "message": "Missing item type\nRepaint major and minor text labels and vertical grid lines",
            "line": " src\\libs\\vis\\vis.js:26076"
        },
        {
            "message": "Missing item type\nCreate a label for the axis at position x",
            "line": " src\\libs\\vis\\vis.js:26172"
        },
        {
            "message": "Missing item type\nCreate a minor line for the axis at position y",
            "line": " src\\libs\\vis\\vis.js:26204"
        },
        {
            "message": "Missing item type\nCreate a title for the axis",
            "line": " src\\libs\\vis\\vis.js:26229"
        },
        {
            "message": "Missing item type\nDetermine the size of text on the axis (both major and minor axis).\nThe size is calculated only once and then cached in this.props.",
            "line": " src\\libs\\vis\\vis.js:26261"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:26310"
        },
        {
            "message": "Missing item type\n'use strict';\n/**\n   * Created by ludo on 25-1-16.",
            "line": " src\\libs\\vis\\vis.js:26312"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:26552"
        },
        {
            "message": "Missing item type\n'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar util = __webpack_require__(1);\n  var DOMutil = __webpack_require__(7);\n  var Bars = __webpack_require__(53);\n  var Lines = __webpack_require__(55);\n  var Points = __webpack_require__(54);\n/**\n   * /**\n   * @param {object} group            | the object of the group from the dataset\n   * @param {string} groupId          | ID of the group\n   * @param {object} options          | the default options\n   * @param {array} groupsUsingDefaultStyles  | this array has one entree.\n   *                                            It is passed as an array so it is passed by reference.\n   *                                            It enumerates through the default styles\n   * @constructor",
            "line": " src\\libs\\vis\\vis.js:26554"
        },
        {
            "message": "Missing item type\nthis loads a reference to all items in this group into this group.",
            "line": " src\\libs\\vis\\vis.js:26591"
        },
        {
            "message": "Missing item type\nthis is used for barcharts and shading, this way, we only have to calculate it once.",
            "line": " src\\libs\\vis\\vis.js:26612"
        },
        {
            "message": "Missing item type\nset the options of the graph group over the default options.",
            "line": " src\\libs\\vis\\vis.js:26620"
        },
        {
            "message": "Missing item type\nthis updates the current group class with the latest group dataset entree, used in _updateGroup in linegraph",
            "line": " src\\libs\\vis\\vis.js:26657"
        },
        {
            "message": "Missing item type\nreturn the legend entree for this group.",
            "line": " src\\libs\\vis\\vis.js:26670"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:26715"
        },
        {
            "message": "Missing item type\n'use strict';\nvar DOMutil = __webpack_require__(7);\n  var Points = __webpack_require__(54);\nfunction Bargraph(groupId, options) {}\nBargraph.drawIcon = function (group, x, y, iconWidth, iconHeight, framework) {\n    var fillHeight = iconHeight * 0.5;\n    var path, fillPath;\n  var outline = DOMutil.getSVGElement(\"rect\", framework.svgElements, framework.svg);\n    outline.setAttributeNS(null, \"x\", x);\n    outline.setAttributeNS(null, \"y\", y - fillHeight);\n    outline.setAttributeNS(null, \"width\", iconWidth);\n    outline.setAttributeNS(null, \"height\", 2 * fillHeight);\n    outline.setAttributeNS(null, \"class\", \"vis-outline\");\n  var barWidth = Math.round(0.3 * iconWidth);\n    var originalWidth = group.options.barChart.width;\n    var scale = originalWidth / barWidth;\n    var bar1Height = Math.round(0.4 * iconHeight);\n    var bar2Height = Math.round(0.75 * iconHeight);\n  var offset = Math.round((iconWidth - 2 * barWidth) / 3);\n  DOMutil.drawBar(x + 0.5 * barWidth + offset, y + fillHeight - bar1Height - 1, barWidth, bar1Height, group.className + ' vis-bar', framework.svgElements, framework.svg, group.style);\n    DOMutil.drawBar(x + 1.5 * barWidth + offset + 2, y + fillHeight - bar2Height - 1, barWidth, bar2Height, group.className + ' vis-bar', framework.svgElements, framework.svg, group.style);\n  if (group.options.drawPoints.enabled == true) {\n      var groupTemplate = {\n        style: group.options.drawPoints.style,\n        styles: group.options.drawPoints.styles,\n        size: group.options.drawPoints.size / scale,\n        className: group.className\n      };\n      DOMutil.drawPoint(x + 0.5 * barWidth + offset, y + fillHeight - bar1Height - 1, groupTemplate, framework.svgElements, framework.svg);\n      DOMutil.drawPoint(x + 1.5 * barWidth + offset + 2, y + fillHeight - bar2Height - 1, groupTemplate, framework.svgElements, framework.svg);\n    }\n  };\n/**\n   * draw a bar graph\n   *\n   * @param groupIds\n   * @param processedGroupData",
            "line": " src\\libs\\vis\\vis.js:26717"
        },
        {
            "message": "Missing item type\nFill the intersections object with counters of how many datapoints share the same x coordinates",
            "line": " src\\libs\\vis\\vis.js:26862"
        },
        {
            "message": "Missing item type\nGet the width and offset for bargraphs based on the coredistance between datapoints",
            "line": " src\\libs\\vis\\vis.js:26892"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:26976"
        },
        {
            "message": "Missing item type\n'use strict';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar DOMutil = __webpack_require__(7);\nfunction Points(groupId, options) {}\n/**\n   * draw the data points\n   *\n   * @param {Array} dataset\n   * @param {Object} JSONcontainer\n   * @param {Object} svg            | SVG DOM element\n   * @param {GraphGroup} group\n   * @param {Number} [offset]",
            "line": " src\\libs\\vis\\vis.js:26978"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:27055"
        },
        {
            "message": "Missing item type\n\"use strict\";\nvar DOMutil = __webpack_require__(7);\nfunction Line(groupId, options) {}\nLine.calcPath = function (dataset, group) {\n      if (dataset != null) {\n          if (dataset.length > 0) {\n              var d = [];\n            // construct path from dataset\n              if (group.options.interpolation.enabled == true) {\n                  d = Line._catmullRom(dataset, group);\n              } else {\n                  d = Line._linear(dataset);\n              }\n              return d;\n          }\n      }\n  };\nLine.drawIcon = function (group, x, y, iconWidth, iconHeight, framework) {\n      var fillHeight = iconHeight * 0.5;\n      var path, fillPath;\n    var outline = DOMutil.getSVGElement(\"rect\", framework.svgElements, framework.svg);\n      outline.setAttributeNS(null, \"x\", x);\n      outline.setAttributeNS(null, \"y\", y - fillHeight);\n      outline.setAttributeNS(null, \"width\", iconWidth);\n      outline.setAttributeNS(null, \"height\", 2 * fillHeight);\n      outline.setAttributeNS(null, \"class\", \"vis-outline\");\n    path = DOMutil.getSVGElement(\"path\", framework.svgElements, framework.svg);\n      path.setAttributeNS(null, \"class\", group.className);\n      if (group.style !== undefined) {\n          path.setAttributeNS(null, \"style\", group.style);\n      }\n    path.setAttributeNS(null, \"d\", \"M\" + x + \",\" + y + \" L\" + (x + iconWidth) + \",\" + y + \"\");\n      if (group.options.shaded.enabled == true) {\n          fillPath = DOMutil.getSVGElement(\"path\", framework.svgElements, framework.svg);\n          if (group.options.shaded.orientation == 'top') {\n              fillPath.setAttributeNS(null, \"d\", \"M\" + x + \", \" + (y - fillHeight) + \"L\" + x + \",\" + y + \" L\" + (x + iconWidth) + \",\" + y + \" L\" + (x + iconWidth) + \",\" + (y - fillHeight));\n          } else {\n              fillPath.setAttributeNS(null, \"d\", \"M\" + x + \",\" + y + \" \" + \"L\" + x + \",\" + (y + fillHeight) + \" \" + \"L\" + (x + iconWidth) + \",\" + (y + fillHeight) + \"L\" + (x + iconWidth) + \",\" + y);\n          }\n          fillPath.setAttributeNS(null, \"class\", group.className + \" vis-icon-fill\");\n          if (group.options.shaded.style !== undefined && group.options.shaded.style !== \"\") {\n              fillPath.setAttributeNS(null, \"style\", group.options.shaded.style);\n          }\n      }\n    if (group.options.drawPoints.enabled == true) {\n          var groupTemplate = {\n              style: group.options.drawPoints.style,\n              styles: group.options.drawPoints.styles,\n              size: group.options.drawPoints.size,\n              className: group.className\n          };\n          DOMutil.drawPoint(x + 0.5 * iconWidth, y, groupTemplate, framework.svgElements, framework.svg);\n      }\n  };\nLine.drawShading = function (pathArray, group, subPathArray, framework) {\n      // append shading to the path\n      if (group.options.shaded.enabled == true) {\n          var svgHeight = Number(framework.svg.style.height.replace('px', ''));\n          var fillPath = DOMutil.getSVGElement('path', framework.svgElements, framework.svg);\n          var type = \"L\";\n          if (group.options.interpolation.enabled == true) {\n              type = \"C\";\n          }\n          var dFill;\n          var zero = 0;\n          if (group.options.shaded.orientation == 'top') {\n              zero = 0;\n          } else if (group.options.shaded.orientation == 'bottom') {\n              zero = svgHeight;\n          } else {\n              zero = Math.min(Math.max(0, group.zeroPosition), svgHeight);\n          }\n          if (group.options.shaded.orientation == 'group' && subPathArray != null && subPathArray != undefined) {\n              dFill = 'M' + pathArray[0][0] + \",\" + pathArray[0][1] + \" \" + this.serializePath(pathArray, type, false) + ' L' + subPathArray[subPathArray.length - 1][0] + \",\" + subPathArray[subPathArray.length - 1][1] + \" \" + this.serializePath(subPathArray, type, true) + subPathArray[0][0] + \",\" + subPathArray[0][1] + \" Z\";\n          } else {\n              dFill = 'M' + pathArray[0][0] + \",\" + pathArray[0][1] + \" \" + this.serializePath(pathArray, type, false) + ' V' + zero + ' H' + pathArray[0][0] + \" Z\";\n          }\n        fillPath.setAttributeNS(null, 'class', group.className + ' vis-fill');\n          if (group.options.shaded.style !== undefined) {\n              fillPath.setAttributeNS(null, 'style', group.options.shaded.style);\n          }\n          fillPath.setAttributeNS(null, 'd', dFill);\n      }\n  };\n/**\n   * draw a line graph\n   *\n   * @param dataset\n   * @param group",
            "line": " src\\libs\\vis\\vis.js:27057"
        },
        {
            "message": "Missing item type\nThis uses an uniform parametrization of the interpolation algorithm:\n'On the Parameterization of Catmull-Rom Curves' by Cem Yuksel et al.",
            "line": " src\\libs\\vis\\vis.js:27196"
        },
        {
            "message": "Missing item type\nThis uses either the chordal or centripetal parameterization of the catmull-rom algorithm.\nBy default, the centripetal parameterization is used because this gives the nicest results.\nThese parameterizations are relatively heavy because the distance between 4 points have to be calculated.\n\nOne optimization can be used to reuse distances since this is a sliding window approach.",
            "line": " src\\libs\\vis\\vis.js:27242"
        },
        {
            "message": "Missing item type\nthis generates the SVG path for a linear drawing between datapoints.",
            "line": " src\\libs\\vis\\vis.js:27327"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:27344"
        },
        {
            "message": "Missing item type\n'use strict';\nvar util = __webpack_require__(1);\n  var DOMutil = __webpack_require__(7);\n  var Component = __webpack_require__(28);\n/**\n   * Legend for Graph2d",
            "line": " src\\libs\\vis\\vis.js:27346"
        },
        {
            "message": "Missing item type\nHide the component from the DOM",
            "line": " src\\libs\\vis\\vis.js:27439"
        },
        {
            "message": "Missing item type\nShow the component in the DOM (when not already visible).",
            "line": " src\\libs\\vis\\vis.js:27449"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:27563"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * This object contains all possible options. It will check if the types are correct, if required if the option is one\n   * of the allowed values.\n   *\n   * __any__ means that the name of the property does not matter.\n   * __type__ is a required field for all objects and contains the allowed types of all objects",
            "line": " src\\libs\\vis\\vis.js:27565"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:27849"
        },
        {
            "message": "Missing item type\n'use strict';\nvar _Images = __webpack_require__(59);\nvar _Images2 = _interopRequireDefault(_Images);\nvar _Groups = __webpack_require__(60);\nvar _Groups2 = _interopRequireDefault(_Groups);\nvar _NodesHandler = __webpack_require__(61);\nvar _NodesHandler2 = _interopRequireDefault(_NodesHandler);\nvar _EdgesHandler = __webpack_require__(81);\nvar _EdgesHandler2 = _interopRequireDefault(_EdgesHandler);\nvar _PhysicsEngine = __webpack_require__(90);\nvar _PhysicsEngine2 = _interopRequireDefault(_PhysicsEngine);\nvar _Clustering = __webpack_require__(99);\nvar _Clustering2 = _interopRequireDefault(_Clustering);\nvar _CanvasRenderer = __webpack_require__(102);\nvar _CanvasRenderer2 = _interopRequireDefault(_CanvasRenderer);\nvar _Canvas = __webpack_require__(103);\nvar _Canvas2 = _interopRequireDefault(_Canvas);\nvar _View = __webpack_require__(104);\nvar _View2 = _interopRequireDefault(_View);\nvar _InteractionHandler = __webpack_require__(105);\nvar _InteractionHandler2 = _interopRequireDefault(_InteractionHandler);\nvar _SelectionHandler = __webpack_require__(108);\nvar _SelectionHandler2 = _interopRequireDefault(_SelectionHandler);\nvar _LayoutEngine = __webpack_require__(109);\nvar _LayoutEngine2 = _interopRequireDefault(_LayoutEngine);\nvar _ManipulationSystem = __webpack_require__(110);\nvar _ManipulationSystem2 = _interopRequireDefault(_ManipulationSystem);\nvar _Configurator = __webpack_require__(20);\nvar _Configurator2 = _interopRequireDefault(_Configurator);\nvar _Validator = __webpack_require__(26);\nvar _Validator2 = _interopRequireDefault(_Validator);\nvar _options = __webpack_require__(111);\nvar _KamadaKawai = __webpack_require__(112);\nvar _KamadaKawai2 = _interopRequireDefault(_KamadaKawai);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// Load custom shapes into CanvasRenderingContext2D\n  __webpack_require__(114);\nvar Emitter = __webpack_require__(12);\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\n  var dotparser = __webpack_require__(115);\n  var gephiParser = __webpack_require__(116);\n  var Activator = __webpack_require__(42);\n  var locales = __webpack_require__(117);\n/**\n   * @constructor Network\n   * Create a network visualization, displaying nodes and edges.\n   *\n   * @param {Element} container   The DOM element in which the Network will\n   *                                  be created. Normally a div element.\n   * @param {Object} data         An object containing parameters\n   *                              {Array} nodes\n   *                              {Array} edges\n   * @param {Object} options      Options",
            "line": " src\\libs\\vis\\vis.js:27851"
        },
        {
            "message": "Missing item type\nSet options",
            "line": " src\\libs\\vis\\vis.js:28042"
        },
        {
            "message": "Missing item type\nUpdate the this.body.nodeIndices with the most recent node index list",
            "line": " src\\libs\\vis\\vis.js:28138"
        },
        {
            "message": "Missing item type\nBind all events",
            "line": " src\\libs\\vis\\vis.js:28165"
        },
        {
            "message": "Missing item type\nSet nodes and edges, and optionally options as well.",
            "line": " src\\libs\\vis\\vis.js:28191"
        },
        {
            "message": "Missing item type\nCleans up all bindings of the network, removing it fully from the memory IF the variable is set to null after calling this function.\nvar network = new vis.Network(..);\nnetwork.destroy();\nnetwork = null;",
            "line": " src\\libs\\vis\\vis.js:28243"
        },
        {
            "message": "Missing item type\nUpdate the values of all object in the given array according to the current\nvalue range of the objects in the array.",
            "line": " src\\libs\\vis\\vis.js:28282"
        },
        {
            "message": "Missing item type\nReturns true when the Network is active.",
            "line": " src\\libs\\vis\\vis.js:28318"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:28484"
        },
        {
            "message": "Missing item type\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n      value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n   * @class Images\n   * This class loads images and keeps them stored.",
            "line": " src\\libs\\vis\\vis.js:28486"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:28512"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:28532"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:28557"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:28569"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:28614"
        },
        {
            "message": "Missing item type\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\n/**\n   * @class Groups\n   * This class can store groups and options specific for groups.",
            "line": " src\\libs\\vis\\vis.js:28616"
        },
        {
            "message": "Missing item type\nClear all groups",
            "line": " src\\libs\\vis\\vis.js:28693"
        },
        {
            "message": "Missing item type\nget group options of a groupname. If groupname is not found, a new group\nis added.",
            "line": " src\\libs\\vis\\vis.js:28704"
        },
        {
            "message": "Missing item type\nAdd a custom group style",
            "line": " src\\libs\\vis\\vis.js:28736"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:28758"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _Node = __webpack_require__(62);\nvar _Node2 = _interopRequireDefault(_Node);\nvar _Label = __webpack_require__(63);\nvar _Label2 = _interopRequireDefault(_Label);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\nvar NodesHandler = function () {\n    function NodesHandler(body, images, groups, layoutEngine) {\n      var _this = this;\n    _classCallCheck(this, NodesHandler);\n    this.body = body;\n      this.images = images;\n      this.groups = groups;\n      this.layoutEngine = layoutEngine;\n    // create the node API in the body container\n      this.body.functions.createNode = this.create.bind(this);\n    this.nodesListeners = {\n        add: function add(event, params) {\n          _this.add(params.items);\n        },\n        update: function update(event, params) {\n          _this.update(params.items, params.data);\n        },\n        remove: function remove(event, params) {\n          _this.remove(params.items);\n        }\n      };\n    this.options = {};\n      this.defaultOptions = {\n        borderWidth: 1,\n        borderWidthSelected: 2,\n        brokenImage: undefined,\n        color: {\n          border: '#2B7CE9',\n          background: '#97C2FC',\n          highlight: {\n            border: '#2B7CE9',\n            background: '#D2E5FF'\n          },\n          hover: {\n            border: '#2B7CE9',\n            background: '#D2E5FF'\n          }\n        },\n        fixed: {\n          x: false,\n          y: false\n        },\n        font: {\n          color: '#343434',\n          size: 14, // px\n          face: 'arial',\n          background: 'none',\n          strokeWidth: 0, // px\n          strokeColor: '#ffffff',\n          align: 'center'\n        },\n        group: undefined,\n        hidden: false,\n        icon: {\n          face: 'FontAwesome', //'FontAwesome',\n          code: undefined, //'\\uf007',\n          size: 50, //50,\n          color: '#2B7CE9' //'#aa00ff'\n        },\n        image: undefined, // --> URL\n        label: undefined,\n        labelHighlightBold: true,\n        level: undefined,\n        mass: 1,\n        physics: true,\n        scaling: {\n          min: 10,\n          max: 30,\n          label: {\n            enabled: false,\n            min: 14,\n            max: 30,\n            maxVisible: 30,\n            drawThreshold: 5\n          },\n          customScalingFunction: function customScalingFunction(min, max, total, value) {\n            if (max === min) {\n              return 0.5;\n            } else {\n              var scale = 1 / (max - min);\n              return Math.max(0, (value - min) * scale);\n            }\n          }\n        },\n        shadow: {\n          enabled: false,\n          color: 'rgba(0,0,0,0.5)',\n          size: 10,\n          x: 5,\n          y: 5\n        },\n        shape: 'ellipse',\n        shapeProperties: {\n          borderDashes: false, // only for borders\n          borderRadius: 6, // only for box shape\n          interpolation: true, // only for image and circularImage shapes\n          useImageSize: false, // only for image and circularImage shapes\n          useBorderWithImage: false // only for image shape\n        },\n        size: 25,\n        title: undefined,\n        value: undefined,\n        x: undefined,\n        y: undefined\n      };\n      util.extend(this.options, this.defaultOptions);\n    this.bindEventListeners();\n    }\n  _createClass(NodesHandler, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this2 = this;\n      // refresh the nodes. Used when reverting from hierarchical layout\n        this.body.emitter.on('refreshNodes', this.refresh.bind(this));\n        this.body.emitter.on('refresh', this.refresh.bind(this));\n        this.body.emitter.on('destroy', function () {\n          util.forEach(_this2.nodesListeners, function (callback, event) {\n            if (_this2.body.data.nodes) _this2.body.data.nodes.off(event, callback);\n          });\n          delete _this2.body.functions.createNode;\n          delete _this2.nodesListeners.add;\n          delete _this2.nodesListeners.update;\n          delete _this2.nodesListeners.remove;\n          delete _this2.nodesListeners;\n        });\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          _Node2.default.parseOptions(this.options, options);\n        // update the shape in all nodes\n          if (options.shape !== undefined) {\n            for (var nodeId in this.body.nodes) {\n              if (this.body.nodes.hasOwnProperty(nodeId)) {\n                this.body.nodes[nodeId].updateShape();\n              }\n            }\n          }\n        // update the font in all nodes\n          if (options.font !== undefined) {\n            _Label2.default.parseOptions(this.options.font, options);\n            for (var _nodeId in this.body.nodes) {\n              if (this.body.nodes.hasOwnProperty(_nodeId)) {\n                this.body.nodes[_nodeId].updateLabelModule();\n                this.body.nodes[_nodeId]._reset();\n              }\n            }\n          }\n        // update the shape size in all nodes\n          if (options.size !== undefined) {\n            for (var _nodeId2 in this.body.nodes) {\n              if (this.body.nodes.hasOwnProperty(_nodeId2)) {\n                this.body.nodes[_nodeId2]._reset();\n              }\n            }\n          }\n        // update the state of the letiables if needed\n          if (options.hidden !== undefined || options.physics !== undefined) {\n            this.body.emitter.emit('_dataChanged');\n          }\n        }\n      }\n    /**\n       * Set a data set with nodes for the network\n       * @param {Array | DataSet | DataView} nodes         The data containing the nodes.\n       * @private",
            "line": " src\\libs\\vis\\vis.js:28760"
        },
        {
            "message": "Missing item type\nAdd nodes",
            "line": " src\\libs\\vis\\vis.js:29017"
        },
        {
            "message": "Missing item type\nUpdate existing nodes, or create them when not yet existing",
            "line": " src\\libs\\vis\\vis.js:29045"
        },
        {
            "message": "Missing item type\nRemove existing nodes. If nodes do not exist, the method will just ignore it.",
            "line": " src\\libs\\vis\\vis.js:29077"
        },
        {
            "message": "Missing item type\ncreate a node",
            "line": " src\\libs\\vis\\vis.js:29096"
        },
        {
            "message": "Missing item type\nReturns the positions of the nodes.",
            "line": " src\\libs\\vis\\vis.js:29131"
        },
        {
            "message": "Missing item type\nLoad the XY positions of the nodes into the dataset.",
            "line": " src\\libs\\vis\\vis.js:29164"
        },
        {
            "message": "Missing item type\nget the bounding box of a node.",
            "line": " src\\libs\\vis\\vis.js:29186"
        },
        {
            "message": "Missing item type\nGet the Ids of nodes connected to this node.",
            "line": " src\\libs\\vis\\vis.js:29200"
        },
        {
            "message": "Missing item type\nGet the ids of the edges connected to this node.",
            "line": " src\\libs\\vis\\vis.js:29233"
        },
        {
            "message": "Missing item type\nMove a node.",
            "line": " src\\libs\\vis\\vis.js:29254"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:29283"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _Label = __webpack_require__(63);\nvar _Label2 = _interopRequireDefault(_Label);\nvar _Box = __webpack_require__(64);\nvar _Box2 = _interopRequireDefault(_Box);\nvar _Circle = __webpack_require__(66);\nvar _Circle2 = _interopRequireDefault(_Circle);\nvar _CircularImage = __webpack_require__(68);\nvar _CircularImage2 = _interopRequireDefault(_CircularImage);\nvar _Database = __webpack_require__(69);\nvar _Database2 = _interopRequireDefault(_Database);\nvar _Diamond = __webpack_require__(70);\nvar _Diamond2 = _interopRequireDefault(_Diamond);\nvar _Dot = __webpack_require__(72);\nvar _Dot2 = _interopRequireDefault(_Dot);\nvar _Ellipse = __webpack_require__(73);\nvar _Ellipse2 = _interopRequireDefault(_Ellipse);\nvar _Icon = __webpack_require__(74);\nvar _Icon2 = _interopRequireDefault(_Icon);\nvar _Image = __webpack_require__(75);\nvar _Image2 = _interopRequireDefault(_Image);\nvar _Square = __webpack_require__(76);\nvar _Square2 = _interopRequireDefault(_Square);\nvar _Star = __webpack_require__(77);\nvar _Star2 = _interopRequireDefault(_Star);\nvar _Text = __webpack_require__(78);\nvar _Text2 = _interopRequireDefault(_Text);\nvar _Triangle = __webpack_require__(79);\nvar _Triangle2 = _interopRequireDefault(_Triangle);\nvar _TriangleDown = __webpack_require__(80);\nvar _TriangleDown2 = _interopRequireDefault(_TriangleDown);\nvar _Validator = __webpack_require__(26);\nvar _Validator2 = _interopRequireDefault(_Validator);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\n/**\n   * @class Node\n   * A node. A node can be connected to other nodes via one or multiple edges.\n   * @param {object} options An object containing options for the node. All\n   *                            options are optional, except for the id.\n   *                              {number} id     Id of the node. Required\n   *                              {string} label  Text label for the node\n   *                              {number} x      Horizontal position of the node\n   *                              {number} y      Vertical position of the node\n   *                              {string} shape  Node shape, available:\n   *                                              \"database\", \"circle\", \"ellipse\",\n   *                                              \"box\", \"image\", \"text\", \"dot\",\n   *                                              \"star\", \"triangle\", \"triangleDown\",\n   *                                              \"square\", \"icon\"\n   *                              {string} image  An image url\n   *                              {string} title  An title text, can be HTML\n   *                              {anytype} group A group name or number\n   * @param {Network.Images} imagelist    A list with images. Only needed\n   *                                            when the node has an image\n   * @param {Network.Groups} grouplist    A list with groups. Needed for\n   *                                            retrieving group options\n   * @param {Object}               constants    An object with default values for\n   *                                            example for the color\n   *",
            "line": " src\\libs\\vis\\vis.js:29285"
        },
        {
            "message": "Missing item type\nAttach a edge to the node",
            "line": " src\\libs\\vis\\vis.js:29419"
        },
        {
            "message": "Missing item type\nDetach a edge from the node",
            "line": " src\\libs\\vis\\vis.js:29433"
        },
        {
            "message": "Missing item type\nSet or overwrite options for the node",
            "line": " src\\libs\\vis\\vis.js:29447"
        },
        {
            "message": "Missing item type\nThis process all possible shorthands in the new options and makes sure that the parentOptions are fully defined.\nStatic so it can also be used by the handler.",
            "line": " src\\libs\\vis\\vis.js:29521"
        },
        {
            "message": "Missing item type\nselect this node",
            "line": " src\\libs\\vis\\vis.js:29599"
        },
        {
            "message": "Missing item type\nunselect this node",
            "line": " src\\libs\\vis\\vis.js:29610"
        },
        {
            "message": "Missing item type\nReset the calculated size of the node, forces it to recalculate its size",
            "line": " src\\libs\\vis\\vis.js:29621"
        },
        {
            "message": "Missing item type\nget the title of this node.",
            "line": " src\\libs\\vis\\vis.js:29633"
        },
        {
            "message": "Missing item type\nCalculate the distance to the border of the Node",
            "line": " src\\libs\\vis\\vis.js:29645"
        },
        {
            "message": "Missing item type\nCheck if this node has a fixed x and y position",
            "line": " src\\libs\\vis\\vis.js:29658"
        },
        {
            "message": "Missing item type\ncheck if this node is selecte",
            "line": " src\\libs\\vis\\vis.js:29669"
        },
        {
            "message": "Missing item type\nRetrieve the value of the node. Can be undefined",
            "line": " src\\libs\\vis\\vis.js:29680"
        },
        {
            "message": "Missing item type\nAdjust the value range of the node. The node will adjust it's size\nbased on its value.",
            "line": " src\\libs\\vis\\vis.js:29691"
        },
        {
            "message": "Missing item type\nDraw this node in the given canvas\nThe 2d context of a HTML canvas can be retrieved by canvas.getContext(\"2d\");",
            "line": " src\\libs\\vis\\vis.js:29717"
        },
        {
            "message": "Missing item type\nUpdate the bounding box of the shape",
            "line": " src\\libs\\vis\\vis.js:29729"
        },
        {
            "message": "Missing item type\nRecalculate the size of this node in the given canvas\nThe 2d context of a HTML canvas can be retrieved by canvas.getContext(\"2d\");",
            "line": " src\\libs\\vis\\vis.js:29739"
        },
        {
            "message": "Missing item type\nCheck if this object is overlapping with the provided object",
            "line": " src\\libs\\vis\\vis.js:29751"
        },
        {
            "message": "Missing item type\nCheck if this object is overlapping with the provided object",
            "line": " src\\libs\\vis\\vis.js:29763"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:29828"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar Label = function () {\n    function Label(body, options) {\n      var edgelabel = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n    _classCallCheck(this, Label);\n    this.body = body;\n    this.pointToSelf = false;\n      this.baseSize = undefined;\n      this.fontOptions = {};\n      this.setOptions(options);\n      this.size = { top: 0, left: 0, width: 0, height: 0, yLine: 0 }; // could be cached\n      this.isEdgeLabel = edgelabel;\n    }\n  _createClass(Label, [{\n      key: 'setOptions',\n      value: function setOptions(options) {\n        var allowDeletion = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n      this.nodeOptions = options;\n      // We want to keep the font options seperated from the node options.\n        // The node options have to mirror the globals when they are not overruled.\n        this.fontOptions = util.deepExtend({}, options.font, true);\n      if (options.label !== undefined) {\n          this.labelDirty = true;\n        }\n      if (options.font !== undefined) {\n          Label.parseOptions(this.fontOptions, options, allowDeletion);\n          if (typeof options.font === 'string') {\n            this.baseSize = this.fontOptions.size;\n          } else if (_typeof(options.font) === 'object') {\n            if (options.font.size !== undefined) {\n              this.baseSize = options.font.size;\n            }\n          }\n        }\n      }\n    }, {\n      key: 'draw',\n\n    /**\n       * Main function. This is called from anything that wants to draw a label.\n       * @param ctx\n       * @param x\n       * @param y\n       * @param selected\n       * @param baseline",
            "line": " src\\libs\\vis\\vis.js:29830"
        },
        {
            "message": "Missing item type\nDraws the label background",
            "line": " src\\libs\\vis\\vis.js:29921"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:29956"
        },
        {
            "message": "Missing item type\nfade in when relative scale is between threshold and threshold - 1.\nIf the relative scale would be smaller than threshold -1 the draw function would have returned before coming here.",
            "line": " src\\libs\\vis\\vis.js:30046"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:30068"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:30088"
        },
        {
            "message": "Missing item type\nThis calculates the width as well as explodes the label string and calculates the amount of lines.",
            "line": " src\\libs\\vis\\vis.js:30120"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:30171"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NodeBase2 = __webpack_require__(65);\nvar _NodeBase3 = _interopRequireDefault(_NodeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Box = function (_NodeBase) {\n    _inherits(Box, _NodeBase);\n  function Box(options, body, labelModule) {\n      _classCallCheck(this, Box);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Box).call(this, options, body, labelModule));\n    }\n  _createClass(Box, [{\n      key: 'resize',\n      value: function resize(ctx, selected) {\n        if (this.width === undefined) {\n          var margin = 5;\n          var textSize = this.labelModule.getTextSize(ctx, selected);\n          this.width = textSize.width + 2 * margin;\n          this.height = textSize.height + 2 * margin;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx, selected);\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      var borderWidth = this.options.borderWidth;\n        var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\n      ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\n        ctx.lineWidth = selected ? selectionLineWidth : borderWidth;\n        ctx.lineWidth /= this.body.view.scale;\n        ctx.lineWidth = Math.min(this.width, ctx.lineWidth);\n      ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\n      var borderRadius = this.options.shapeProperties.borderRadius; // only effective for box\n        ctx.roundRect(this.left, this.top, this.width, this.height, borderRadius);\n      // draw shadow if enabled\n        this.enableShadow(ctx);\n        // draw the background\n        ctx.fill();\n        // disable shadows for other elements.\n        this.disableShadow(ctx);\n      //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\n        ctx.save();\n        // if borders are zero width, they will be drawn with width 1 by default. This prevents that\n        if (borderWidth > 0) {\n          this.enableBorderDashes(ctx);\n          //draw the border\n          ctx.stroke();\n          //disable dashed border for other elements\n          this.disableBorderDashes(ctx);\n        }\n        ctx.restore();\n      this.updateBoundingBox(x, y, ctx, selected);\n        this.labelModule.draw(ctx, x, y, selected);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y, ctx, selected) {\n        this.resize(ctx, selected);\n        this.left = x - this.width * 0.5;\n        this.top = y - this.height * 0.5;\n      var borderRadius = this.options.shapeProperties.borderRadius; // only effective for box\n        this.boundingBox.left = this.left - borderRadius;\n        this.boundingBox.top = this.top - borderRadius;\n        this.boundingBox.bottom = this.top + this.height + borderRadius;\n        this.boundingBox.right = this.left + this.width + borderRadius;\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        this.resize(ctx);\n        var borderWidth = this.options.borderWidth;\n      return Math.min(Math.abs(this.width / 2 / Math.cos(angle)), Math.abs(this.height / 2 / Math.sin(angle))) + borderWidth;\n      }\n    }]);\n  return Box;\n  }(_NodeBase3.default);\nexports.default = Box;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:30173"
        },
        {
            "message": "Missing item type\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar NodeBase = function () {\n    function NodeBase(options, body, labelModule) {\n      _classCallCheck(this, NodeBase);\n    this.body = body;\n      this.labelModule = labelModule;\n      this.setOptions(options);\n      this.top = undefined;\n      this.left = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this.radius = undefined;\n      this.boundingBox = { top: 0, left: 0, right: 0, bottom: 0 };\n    }\n  _createClass(NodeBase, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n    }, {\n      key: \"_distanceToBorder\",\n      value: function _distanceToBorder(ctx, angle) {\n        var borderWidth = this.options.borderWidth;\n        this.resize(ctx);\n        return Math.min(Math.abs(this.width / 2 / Math.cos(angle)), Math.abs(this.height / 2 / Math.sin(angle))) + borderWidth;\n      }\n    }, {\n      key: \"enableShadow\",\n      value: function enableShadow(ctx) {\n        if (this.options.shadow.enabled === true) {\n          ctx.shadowColor = this.options.shadow.color;\n          ctx.shadowBlur = this.options.shadow.size;\n          ctx.shadowOffsetX = this.options.shadow.x;\n          ctx.shadowOffsetY = this.options.shadow.y;\n        }\n      }\n    }, {\n      key: \"disableShadow\",\n      value: function disableShadow(ctx) {\n        if (this.options.shadow.enabled === true) {\n          ctx.shadowColor = 'rgba(0,0,0,0)';\n          ctx.shadowBlur = 0;\n          ctx.shadowOffsetX = 0;\n          ctx.shadowOffsetY = 0;\n        }\n      }\n    }, {\n      key: \"enableBorderDashes\",\n      value: function enableBorderDashes(ctx) {\n        if (this.options.shapeProperties.borderDashes !== false) {\n          if (ctx.setLineDash !== undefined) {\n            var dashes = this.options.shapeProperties.borderDashes;\n            if (dashes === true) {\n              dashes = [5, 15];\n            }\n            ctx.setLineDash(dashes);\n          } else {\n            console.warn(\"setLineDash is not supported in this browser. The dashed borders cannot be used.\");\n            this.options.shapeProperties.borderDashes = false;\n          }\n        }\n      }\n    }, {\n      key: \"disableBorderDashes\",\n      value: function disableBorderDashes(ctx) {\n        if (this.options.shapeProperties.borderDashes !== false) {\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash([0]);\n          } else {\n            console.warn(\"setLineDash is not supported in this browser. The dashed borders cannot be used.\");\n            this.options.shapeProperties.borderDashes = false;\n          }\n        }\n      }\n    }]);\n  return NodeBase;\n  }();\nexports.default = NodeBase;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:30287"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _CircleImageBase2 = __webpack_require__(67);\nvar _CircleImageBase3 = _interopRequireDefault(_CircleImageBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Circle = function (_CircleImageBase) {\n    _inherits(Circle, _CircleImageBase);\n  function Circle(options, body, labelModule) {\n      _classCallCheck(this, Circle);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Circle).call(this, options, body, labelModule));\n    }\n  _createClass(Circle, [{\n      key: 'resize',\n      value: function resize(ctx, selected) {\n        if (this.width === undefined) {\n          var margin = 5;\n          var textSize = this.labelModule.getTextSize(ctx, selected);\n          var diameter = Math.max(textSize.width, textSize.height) + 2 * margin;\n          this.options.size = diameter / 2;\n        this.width = diameter;\n          this.height = diameter;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx, selected);\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      this._drawRawCircle(ctx, x, y, selected, hover, this.options.size);\n      this.boundingBox.top = y - this.options.size;\n        this.boundingBox.left = x - this.options.size;\n        this.boundingBox.right = x + this.options.size;\n        this.boundingBox.bottom = y + this.options.size;\n      this.updateBoundingBox(x, y);\n        this.labelModule.draw(ctx, x, y, selected);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y) {\n        this.boundingBox.top = y - this.options.size;\n        this.boundingBox.left = x - this.options.size;\n        this.boundingBox.right = x + this.options.size;\n        this.boundingBox.bottom = y + this.options.size;\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        this.resize(ctx);\n        return this.width * 0.5;\n      }\n    }]);\n  return Circle;\n  }(_CircleImageBase3.default);\nexports.default = Circle;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:30383"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NodeBase2 = __webpack_require__(65);\nvar _NodeBase3 = _interopRequireDefault(_NodeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar CircleImageBase = function (_NodeBase) {\n    _inherits(CircleImageBase, _NodeBase);\n  function CircleImageBase(options, body, labelModule) {\n      _classCallCheck(this, CircleImageBase);\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(CircleImageBase).call(this, options, body, labelModule));\n    _this.labelOffset = 0;\n      _this.imageLoaded = false;\n      return _this;\n    }\n  _createClass(CircleImageBase, [{\n      key: 'setOptions',\n      value: function setOptions(options, imageObj) {\n        this.options = options;\n        if (imageObj) {\n          this.imageObj = imageObj;\n        }\n      }\n    /**\n       * This function resizes the image by the options size when the image has not yet loaded. If the image has loaded, we\n       * force the update of the size again.\n       *\n       * @private",
            "line": " src\\libs\\vis\\vis.js:30468"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:30667"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _CircleImageBase2 = __webpack_require__(67);\nvar _CircleImageBase3 = _interopRequireDefault(_CircleImageBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar CircularImage = function (_CircleImageBase) {\n    _inherits(CircularImage, _CircleImageBase);\n  function CircularImage(options, body, labelModule, imageObj) {\n      _classCallCheck(this, CircularImage);\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(CircularImage).call(this, options, body, labelModule));\n    _this.imageObj = imageObj;\n      _this._swapToImageResizeWhenImageLoaded = true;\n      return _this;\n    }\n  _createClass(CircularImage, [{\n      key: 'resize',\n      value: function resize() {\n        if (this.imageObj.src === undefined || this.imageObj.width === undefined || this.imageObj.height === undefined) {\n          if (!this.width) {\n            var diameter = this.options.size * 2;\n            this.width = diameter;\n            this.height = diameter;\n            this._swapToImageResizeWhenImageLoaded = true;\n            this.radius = 0.5 * this.width;\n          }\n        } else {\n          if (this._swapToImageResizeWhenImageLoaded) {\n            this.width = undefined;\n            this.height = undefined;\n            this._swapToImageResizeWhenImageLoaded = false;\n          }\n          this._resizeImage();\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize();\n      this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      var size = Math.min(0.5 * this.height, 0.5 * this.width);\n      // draw the background circle. IMPORTANT: the stroke in this method is used by the clip method below.\n        this._drawRawCircle(ctx, x, y, selected, hover, size);\n      // now we draw in the circle, we save so we can revert the clip operation after drawing.\n        ctx.save();\n        // clip is used to use the stroke in drawRawCircle as an area that we can draw in.\n        ctx.clip();\n        // draw the image\n        this._drawImageAtPosition(ctx);\n        // restore so we can again draw on the full canvas\n        ctx.restore();\n      this._drawImageLabel(ctx, x, y, selected);\n      this.updateBoundingBox(x, y);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y) {\n        this.boundingBox.top = y - this.options.size;\n        this.boundingBox.left = x - this.options.size;\n        this.boundingBox.right = x + this.options.size;\n        this.boundingBox.bottom = y + this.options.size;\n        this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left);\n        this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width);\n        this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelOffset);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        this.resize(ctx);\n        return this.width * 0.5;\n      }\n    }]);\n  return CircularImage;\n  }(_CircleImageBase3.default);\nexports.default = CircularImage;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:30669"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NodeBase2 = __webpack_require__(65);\nvar _NodeBase3 = _interopRequireDefault(_NodeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Database = function (_NodeBase) {\n    _inherits(Database, _NodeBase);\n  function Database(options, body, labelModule) {\n      _classCallCheck(this, Database);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Database).call(this, options, body, labelModule));\n    }\n  _createClass(Database, [{\n      key: 'resize',\n      value: function resize(ctx, selected) {\n        if (this.width === undefined) {\n          var margin = 5;\n          var textSize = this.labelModule.getTextSize(ctx, selected);\n          var size = textSize.width + 2 * margin;\n          this.width = size;\n          this.height = size;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx, selected);\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      var neutralborderWidth = this.options.borderWidth;\n        var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\n        var borderWidth = (selected ? selectionLineWidth : neutralborderWidth) / this.body.view.scale;\n        ctx.lineWidth = Math.min(this.width, borderWidth);\n      ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\n      ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\n        ctx.database(x - this.width / 2, y - this.height * 0.5, this.width, this.height);\n      // draw shadow if enabled\n        this.enableShadow(ctx);\n        // draw the background\n        ctx.fill();\n        // disable shadows for other elements.\n        this.disableShadow(ctx);\n      //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\n        ctx.save();\n        // if borders are zero width, they will be drawn with width 1 by default. This prevents that\n        if (borderWidth > 0) {\n          this.enableBorderDashes(ctx);\n          //draw the border\n          ctx.stroke();\n          //disable dashed border for other elements\n          this.disableBorderDashes(ctx);\n        }\n        ctx.restore();\n      this.updateBoundingBox(x, y, ctx, selected);\n        this.labelModule.draw(ctx, x, y, selected);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y, ctx, selected) {\n        this.resize(ctx, selected);\n      this.left = x - this.width * 0.5;\n        this.top = y - this.height * 0.5;\n      this.boundingBox.left = this.left;\n        this.boundingBox.top = this.top;\n        this.boundingBox.bottom = this.top + this.height;\n        this.boundingBox.right = this.left + this.width;\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return Database;\n  }(_NodeBase3.default);\nexports.default = Database;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:30776"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _ShapeBase2 = __webpack_require__(71);\nvar _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Diamond = function (_ShapeBase) {\n    _inherits(Diamond, _ShapeBase);\n  function Diamond(options, body, labelModule) {\n      _classCallCheck(this, Diamond);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Diamond).call(this, options, body, labelModule));\n    }\n  _createClass(Diamond, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'diamond', 4, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return Diamond;\n  }(_ShapeBase3.default);\nexports.default = Diamond;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:30885"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NodeBase2 = __webpack_require__(65);\nvar _NodeBase3 = _interopRequireDefault(_NodeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar ShapeBase = function (_NodeBase) {\n    _inherits(ShapeBase, _NodeBase);\n  function ShapeBase(options, body, labelModule) {\n      _classCallCheck(this, ShapeBase);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(ShapeBase).call(this, options, body, labelModule));\n    }\n  _createClass(ShapeBase, [{\n      key: '_resizeShape',\n      value: function _resizeShape() {\n        if (this.width === undefined) {\n          var size = 2 * this.options.size;\n          this.width = size;\n          this.height = size;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: '_drawShape',\n      value: function _drawShape(ctx, shape, sizeMultiplier, x, y, selected, hover) {\n        this._resizeShape();\n      this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      var neutralborderWidth = this.options.borderWidth;\n        var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\n        var borderWidth = (selected ? selectionLineWidth : neutralborderWidth) / this.body.view.scale;\n        ctx.lineWidth = Math.min(this.width, borderWidth);\n      ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\n        ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\n        ctx[shape](x, y, this.options.size);\n      // draw shadow if enabled\n        this.enableShadow(ctx);\n        // draw the background\n        ctx.fill();\n        // disable shadows for other elements.\n        this.disableShadow(ctx);\n      //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\n        ctx.save();\n        // if borders are zero width, they will be drawn with width 1 by default. This prevents that\n        if (borderWidth > 0) {\n          this.enableBorderDashes(ctx);\n          //draw the border\n          ctx.stroke();\n          //disable dashed border for other elements\n          this.disableBorderDashes(ctx);\n        }\n        ctx.restore();\n      if (this.options.label !== undefined) {\n          var yLabel = y + 0.5 * this.height + 3; // the + 3 is to offset it a bit below the node.\n          this.labelModule.draw(ctx, x, yLabel, selected, 'hanging');\n        }\n      this.updateBoundingBox(x, y);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y) {\n        this.boundingBox.top = y - this.options.size;\n        this.boundingBox.left = x - this.options.size;\n        this.boundingBox.right = x + this.options.size;\n        this.boundingBox.bottom = y + this.options.size;\n      if (this.options.label !== undefined && this.labelModule.size.width > 0) {\n          this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left);\n          this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width);\n          this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelModule.size.height + 3);\n        }\n      }\n    }]);\n  return ShapeBase;\n  }(_NodeBase3.default);\nexports.default = ShapeBase;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:30940"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _ShapeBase2 = __webpack_require__(71);\nvar _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Dot = function (_ShapeBase) {\n    _inherits(Dot, _ShapeBase);\n  function Dot(options, body, labelModule) {\n      _classCallCheck(this, Dot);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Dot).call(this, options, body, labelModule));\n    }\n  _createClass(Dot, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'circle', 2, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        this.resize(ctx);\n        return this.options.size;\n      }\n    }]);\n  return Dot;\n  }(_ShapeBase3.default);\nexports.default = Dot;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:31047"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NodeBase2 = __webpack_require__(65);\nvar _NodeBase3 = _interopRequireDefault(_NodeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Ellipse = function (_NodeBase) {\n    _inherits(Ellipse, _NodeBase);\n  function Ellipse(options, body, labelModule) {\n      _classCallCheck(this, Ellipse);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Ellipse).call(this, options, body, labelModule));\n    }\n  _createClass(Ellipse, [{\n      key: 'resize',\n      value: function resize(ctx, selected) {\n        if (this.width === undefined) {\n          var textSize = this.labelModule.getTextSize(ctx, selected);\n        this.width = textSize.width * 1.5;\n          this.height = textSize.height * 2;\n          if (this.width < this.height) {\n            this.width = this.height;\n          }\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx, selected);\n        this.left = x - this.width * 0.5;\n        this.top = y - this.height * 0.5;\n      var neutralborderWidth = this.options.borderWidth;\n        var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\n        var borderWidth = (selected ? selectionLineWidth : neutralborderWidth) / this.body.view.scale;\n        ctx.lineWidth = Math.min(this.width, borderWidth);\n      ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\n      ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\n        ctx.ellipse(this.left, this.top, this.width, this.height);\n      // draw shadow if enabled\n        this.enableShadow(ctx);\n        // draw the background\n        ctx.fill();\n        // disable shadows for other elements.\n        this.disableShadow(ctx);\n      //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\n        ctx.save();\n      // if borders are zero width, they will be drawn with width 1 by default. This prevents that\n        if (borderWidth > 0) {\n          this.enableBorderDashes(ctx);\n          //draw the border\n          ctx.stroke();\n          //disable dashed border for other elements\n          this.disableBorderDashes(ctx);\n        }\n      ctx.restore();\n      this.updateBoundingBox(x, y, ctx, selected);\n        this.labelModule.draw(ctx, x, y, selected);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y, ctx, selected) {\n        this.resize(ctx, selected); // just in case\n      this.left = x - this.width * 0.5;\n        this.top = y - this.height * 0.5;\n      this.boundingBox.left = this.left;\n        this.boundingBox.top = this.top;\n        this.boundingBox.bottom = this.top + this.height;\n        this.boundingBox.right = this.left + this.width;\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        this.resize(ctx);\n        var a = this.width * 0.5;\n        var b = this.height * 0.5;\n        var w = Math.sin(angle) * a;\n        var h = Math.cos(angle) * b;\n        return a * b / Math.sqrt(w * w + h * h);\n      }\n    }]);\n  return Ellipse;\n  }(_NodeBase3.default);\nexports.default = Ellipse;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:31103"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NodeBase2 = __webpack_require__(65);\nvar _NodeBase3 = _interopRequireDefault(_NodeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Icon = function (_NodeBase) {\n    _inherits(Icon, _NodeBase);\n  function Icon(options, body, labelModule) {\n      _classCallCheck(this, Icon);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Icon).call(this, options, body, labelModule));\n    }\n  _createClass(Icon, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        if (this.width === undefined) {\n          var margin = 5;\n          var iconSize = {\n            width: Number(this.options.icon.size),\n            height: Number(this.options.icon.size)\n          };\n          this.width = iconSize.width + 2 * margin;\n          this.height = iconSize.height + 2 * margin;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx);\n        this.options.icon.size = this.options.icon.size || 50;\n      this.left = x - this.width * 0.5;\n        this.top = y - this.height * 0.5;\n        this._icon(ctx, x, y, selected);\n      if (this.options.label !== undefined) {\n          var iconTextSpacing = 5;\n          this.labelModule.draw(ctx, x, y + this.height * 0.5 + iconTextSpacing, selected);\n        }\n      this.updateBoundingBox(x, y);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y) {\n        this.boundingBox.top = y - this.options.icon.size * 0.5;\n        this.boundingBox.left = x - this.options.icon.size * 0.5;\n        this.boundingBox.right = x + this.options.icon.size * 0.5;\n        this.boundingBox.bottom = y + this.options.icon.size * 0.5;\n      if (this.options.label !== undefined && this.labelModule.size.width > 0) {\n          var iconTextSpacing = 5;\n          this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left);\n          this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width);\n          this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelModule.size.height + iconTextSpacing);\n        }\n      }\n    }, {\n      key: '_icon',\n      value: function _icon(ctx, x, y, selected) {\n        var iconSize = Number(this.options.icon.size);\n      if (this.options.icon.code !== undefined) {\n          ctx.font = (selected ? \"bold \" : \"\") + iconSize + \"px \" + this.options.icon.face;\n        // draw icon\n          ctx.fillStyle = this.options.icon.color || \"black\";\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"middle\";\n        // draw shadow if enabled\n          this.enableShadow(ctx);\n          ctx.fillText(this.options.icon.code, x, y);\n        // disable shadows for other elements.\n          this.disableShadow(ctx);\n        } else {\n          console.error('When using the icon shape, you need to define the code in the icon options object. This can be done per node or globally.');\n        }\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return Icon;\n  }(_NodeBase3.default);\nexports.default = Icon;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:31221"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _CircleImageBase2 = __webpack_require__(67);\nvar _CircleImageBase3 = _interopRequireDefault(_CircleImageBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Image = function (_CircleImageBase) {\n    _inherits(Image, _CircleImageBase);\n  function Image(options, body, labelModule, imageObj) {\n      _classCallCheck(this, Image);\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Image).call(this, options, body, labelModule));\n    _this.imageObj = imageObj;\n      return _this;\n    }\n  _createClass(Image, [{\n      key: 'resize',\n      value: function resize() {\n        this._resizeImage();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize();\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      if (this.options.shapeProperties.useBorderWithImage === true) {\n          var neutralborderWidth = this.options.borderWidth;\n          var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\n          var borderWidth = (selected ? selectionLineWidth : neutralborderWidth) / this.body.view.scale;\n          ctx.lineWidth = Math.min(this.width, borderWidth);\n        ctx.beginPath();\n        // setup the line properties.\n          ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\n        // set a fillstyle\n          ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\n        // draw a rectangle to form the border around. This rectangle is filled so the opacity of a picture (in future vis releases?) can be used to tint the image\n          ctx.rect(this.left - 0.5 * ctx.lineWidth, this.top - 0.5 * ctx.lineWidth, this.width + ctx.lineWidth, this.height + ctx.lineWidth);\n          ctx.fill();\n        //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\n          ctx.save();\n          // if borders are zero width, they will be drawn with width 1 by default. This prevents that\n          if (borderWidth > 0) {\n            this.enableBorderDashes(ctx);\n            //draw the border\n            ctx.stroke();\n            //disable dashed border for other elements\n            this.disableBorderDashes(ctx);\n          }\n          ctx.restore();\n        ctx.closePath();\n        }\n      this._drawImageAtPosition(ctx);\n      this._drawImageLabel(ctx, x, y, selected || hover);\n      this.updateBoundingBox(x, y);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y) {\n        this.resize();\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      this.boundingBox.top = this.top;\n        this.boundingBox.left = this.left;\n        this.boundingBox.right = this.left + this.width;\n        this.boundingBox.bottom = this.top + this.height;\n      if (this.options.label !== undefined && this.labelModule.size.width > 0) {\n          this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left);\n          this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width);\n          this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelOffset);\n        }\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return Image;\n  }(_CircleImageBase3.default);\nexports.default = Image;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:31335"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _ShapeBase2 = __webpack_require__(71);\nvar _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Square = function (_ShapeBase) {\n    _inherits(Square, _ShapeBase);\n  function Square(options, body, labelModule) {\n      _classCallCheck(this, Square);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Square).call(this, options, body, labelModule));\n    }\n  _createClass(Square, [{\n      key: 'resize',\n      value: function resize() {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'square', 2, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return Square;\n  }(_ShapeBase3.default);\nexports.default = Square;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:31452"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _ShapeBase2 = __webpack_require__(71);\nvar _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Star = function (_ShapeBase) {\n    _inherits(Star, _ShapeBase);\n  function Star(options, body, labelModule) {\n      _classCallCheck(this, Star);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Star).call(this, options, body, labelModule));\n    }\n  _createClass(Star, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'star', 4, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return Star;\n  }(_ShapeBase3.default);\nexports.default = Star;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:31507"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NodeBase2 = __webpack_require__(65);\nvar _NodeBase3 = _interopRequireDefault(_NodeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Text = function (_NodeBase) {\n    _inherits(Text, _NodeBase);\n  function Text(options, body, labelModule) {\n      _classCallCheck(this, Text);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Text).call(this, options, body, labelModule));\n    }\n  _createClass(Text, [{\n      key: 'resize',\n      value: function resize(ctx, selected) {\n        if (this.width === undefined) {\n          var margin = 5;\n          var textSize = this.labelModule.getTextSize(ctx, selected);\n          this.width = textSize.width + 2 * margin;\n          this.height = textSize.height + 2 * margin;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx, selected || hover);\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      // draw shadow if enabled\n        this.enableShadow(ctx);\n        this.labelModule.draw(ctx, x, y, selected || hover);\n      // disable shadows for other elements.\n        this.disableShadow(ctx);\n      this.updateBoundingBox(x, y, ctx, selected);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y, ctx, selected) {\n        this.resize(ctx, selected);\n      this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n      this.boundingBox.top = this.top;\n        this.boundingBox.left = this.left;\n        this.boundingBox.right = this.left + this.width;\n        this.boundingBox.bottom = this.top + this.height;\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return Text;\n  }(_NodeBase3.default);\nexports.default = Text;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:31562"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _ShapeBase2 = __webpack_require__(71);\nvar _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar Triangle = function (_ShapeBase) {\n    _inherits(Triangle, _ShapeBase);\n  function Triangle(options, body, labelModule) {\n      _classCallCheck(this, Triangle);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Triangle).call(this, options, body, labelModule));\n    }\n  _createClass(Triangle, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'triangle', 3, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return Triangle;\n  }(_ShapeBase3.default);\nexports.default = Triangle;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:31647"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _ShapeBase2 = __webpack_require__(71);\nvar _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar TriangleDown = function (_ShapeBase) {\n    _inherits(TriangleDown, _ShapeBase);\n  function TriangleDown(options, body, labelModule) {\n      _classCallCheck(this, TriangleDown);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(TriangleDown).call(this, options, body, labelModule));\n    }\n  _createClass(TriangleDown, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'triangleDown', 3, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n  return TriangleDown;\n  }(_ShapeBase3.default);\nexports.default = TriangleDown;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:31702"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _Edge = __webpack_require__(82);\nvar _Edge2 = _interopRequireDefault(_Edge);\nvar _Label = __webpack_require__(63);\nvar _Label2 = _interopRequireDefault(_Label);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\n  var DataSet = __webpack_require__(8);\n  var DataView = __webpack_require__(10);\nvar EdgesHandler = function () {\n    function EdgesHandler(body, images, groups) {\n      var _this = this;\n    _classCallCheck(this, EdgesHandler);\n    this.body = body;\n      this.images = images;\n      this.groups = groups;\n    // create the edge API in the body container\n      this.body.functions.createEdge = this.create.bind(this);\n    this.edgesListeners = {\n        add: function add(event, params) {\n          _this.add(params.items);\n        },\n        update: function update(event, params) {\n          _this.update(params.items);\n        },\n        remove: function remove(event, params) {\n          _this.remove(params.items);\n        }\n      };\n    this.options = {};\n      this.defaultOptions = {\n        arrows: {\n          to: { enabled: false, scaleFactor: 1 }, // boolean / {arrowScaleFactor:1} / {enabled: false, arrowScaleFactor:1}\n          middle: { enabled: false, scaleFactor: 1 },\n          from: { enabled: false, scaleFactor: 1 }\n        },\n        arrowStrikethrough: true,\n        color: {\n          color: '#848484',\n          highlight: '#848484',\n          hover: '#848484',\n          inherit: 'from',\n          opacity: 1.0\n        },\n        dashes: false,\n        font: {\n          color: '#343434',\n          size: 14, // px\n          face: 'arial',\n          background: 'none',\n          strokeWidth: 2, // px\n          strokeColor: '#ffffff',\n          align: 'horizontal'\n        },\n        hidden: false,\n        hoverWidth: 1.5,\n        label: undefined,\n        labelHighlightBold: true,\n        length: undefined,\n        physics: true,\n        scaling: {\n          min: 1,\n          max: 15,\n          label: {\n            enabled: true,\n            min: 14,\n            max: 30,\n            maxVisible: 30,\n            drawThreshold: 5\n          },\n          customScalingFunction: function customScalingFunction(min, max, total, value) {\n            if (max === min) {\n              return 0.5;\n            } else {\n              var scale = 1 / (max - min);\n              return Math.max(0, (value - min) * scale);\n            }\n          }\n        },\n        selectionWidth: 1.5,\n        selfReferenceSize: 20,\n        shadow: {\n          enabled: false,\n          color: 'rgba(0,0,0,0.5)',\n          size: 10,\n          x: 5,\n          y: 5\n        },\n        smooth: {\n          enabled: true,\n          type: \"dynamic\",\n          forceDirection: 'none',\n          roundness: 0.5\n        },\n        title: undefined,\n        width: 1,\n        value: undefined\n      };\n    util.extend(this.options, this.defaultOptions);\n    this.bindEventListeners();\n    }\n  _createClass(EdgesHandler, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this2 = this;\n      // this allows external modules to force all dynamic curves to turn static.\n        this.body.emitter.on(\"_forceDisableDynamicCurves\", function (type) {\n          if (type === 'dynamic') {\n            type = 'continuous';\n          }\n          var emitChange = false;\n          for (var edgeId in _this2.body.edges) {\n            if (_this2.body.edges.hasOwnProperty(edgeId)) {\n              var edge = _this2.body.edges[edgeId];\n              var edgeData = _this2.body.data.edges._data[edgeId];\n            // only forcibly remove the smooth curve if the data has been set of the edge has the smooth curves defined.\n              // this is because a change in the global would not affect these curves.\n              if (edgeData !== undefined) {\n                var edgeOptions = edgeData.smooth;\n                if (edgeOptions !== undefined) {\n                  if (edgeOptions.enabled === true && edgeOptions.type === 'dynamic') {\n                    if (type === undefined) {\n                      edge.setOptions({ smooth: false });\n                    } else {\n                      edge.setOptions({ smooth: { type: type } });\n                    }\n                    emitChange = true;\n                  }\n                }\n              }\n            }\n          }\n          if (emitChange === true) {\n            _this2.body.emitter.emit(\"_dataChanged\");\n          }\n        });\n      // this is called when options of EXISTING nodes or edges have changed.\n        this.body.emitter.on(\"_dataUpdated\", function () {\n          _this2.reconnectEdges();\n          _this2.markAllEdgesAsDirty();\n        });\n      // refresh the edges. Used when reverting from hierarchical layout\n        this.body.emitter.on(\"refreshEdges\", this.refresh.bind(this));\n        this.body.emitter.on(\"refresh\", this.refresh.bind(this));\n        this.body.emitter.on(\"destroy\", function () {\n          util.forEach(_this2.edgesListeners, function (callback, event) {\n            if (_this2.body.data.edges) _this2.body.data.edges.off(event, callback);\n          });\n          delete _this2.body.functions.createEdge;\n          delete _this2.edgesListeners.add;\n          delete _this2.edgesListeners.update;\n          delete _this2.edgesListeners.remove;\n          delete _this2.edgesListeners;\n        });\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          // use the parser from the Edge class to fill in all shorthand notations\n          _Edge2.default.parseOptions(this.options, options);\n        // handle multiple input cases for color\n          if (options.color !== undefined) {\n            this.markAllEdgesAsDirty();\n          }\n        // update smooth settings in all edges\n          var dataChanged = false;\n          if (options.smooth !== undefined) {\n            for (var edgeId in this.body.edges) {\n              if (this.body.edges.hasOwnProperty(edgeId)) {\n                dataChanged = this.body.edges[edgeId].updateEdgeType() || dataChanged;\n              }\n            }\n          }\n        // update fonts in all edges\n          if (options.font !== undefined) {\n            // use the parser from the Label class to fill in all shorthand notations\n            _Label2.default.parseOptions(this.options.font, options);\n            for (var _edgeId in this.body.edges) {\n              if (this.body.edges.hasOwnProperty(_edgeId)) {\n                this.body.edges[_edgeId].updateLabelModule();\n              }\n            }\n          }\n        // update the state of the variables if needed\n          if (options.hidden !== undefined || options.physics !== undefined || dataChanged === true) {\n            this.body.emitter.emit('_dataChanged');\n          }\n        }\n      }\n    /**\n       * Load edges by reading the data table\n       * @param {Array | DataSet | DataView} edges    The data containing the edges.\n       * @private\n       * @private",
            "line": " src\\libs\\vis\\vis.js:31757"
        },
        {
            "message": "Missing item type\nAdd edges",
            "line": " src\\libs\\vis\\vis.js:32036"
        },
        {
            "message": "Missing item type\nUpdate existing edges, or create them when not yet existing",
            "line": " src\\libs\\vis\\vis.js:32067"
        },
        {
            "message": "Missing item type\nRemove existing edges. Non existing ids will be ignored",
            "line": " src\\libs\\vis\\vis.js:32102"
        },
        {
            "message": "Missing item type\nReconnect all edges",
            "line": " src\\libs\\vis\\vis.js:32152"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:32201"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _Label = __webpack_require__(63);\nvar _Label2 = _interopRequireDefault(_Label);\nvar _CubicBezierEdge = __webpack_require__(83);\nvar _CubicBezierEdge2 = _interopRequireDefault(_CubicBezierEdge);\nvar _BezierEdgeDynamic = __webpack_require__(87);\nvar _BezierEdgeDynamic2 = _interopRequireDefault(_BezierEdgeDynamic);\nvar _BezierEdgeStatic = __webpack_require__(88);\nvar _BezierEdgeStatic2 = _interopRequireDefault(_BezierEdgeStatic);\nvar _StraightEdge = __webpack_require__(89);\nvar _StraightEdge2 = _interopRequireDefault(_StraightEdge);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\n/**\n   * @class Edge\n   *\n   * A edge connects two nodes\n   * @param {Object} properties     Object with options. Must contain\n   *                                At least options from and to.\n   *                                Available options: from (number),\n   *                                to (number), label (string, color (string),\n   *                                width (number), style (string),\n   *                                length (number), title (string)\n   * @param {Network} network       A Network object, used to find and edge to\n   *                                nodes.\n   * @param {Object} constants      An object with default values for\n   *                                example for the color",
            "line": " src\\libs\\vis\\vis.js:32203"
        },
        {
            "message": "Missing item type\nSet or overwrite options for the edge",
            "line": " src\\libs\\vis\\vis.js:32292"
        },
        {
            "message": "Missing item type\nupdate the options in the label module",
            "line": " src\\libs\\vis\\vis.js:32347"
        },
        {
            "message": "Missing item type\nupdate the edge type, set the options",
            "line": " src\\libs\\vis\\vis.js:32357"
        },
        {
            "message": "Missing item type\nConnect an edge to its nodes",
            "line": " src\\libs\\vis\\vis.js:32408"
        },
        {
            "message": "Missing item type\nDisconnect an edge from its nodes",
            "line": " src\\libs\\vis\\vis.js:32436"
        },
        {
            "message": "Missing item type\nget the title of this edge.",
            "line": " src\\libs\\vis\\vis.js:32455"
        },
        {
            "message": "Missing item type\ncheck if this node is selecte",
            "line": " src\\libs\\vis\\vis.js:32467"
        },
        {
            "message": "Missing item type\nRetrieve the value of the edge. Can be undefined",
            "line": " src\\libs\\vis\\vis.js:32478"
        },
        {
            "message": "Missing item type\nAdjust the value range of the edge. The edge will adjust it's width\nbased on its value.",
            "line": " src\\libs\\vis\\vis.js:32489"
        },
        {
            "message": "Missing item type\nRedraw a edge\nDraw this edge in the given canvas\nThe 2d context of a HTML canvas can be retrieved by canvas.getContext(\"2d\");",
            "line": " src\\libs\\vis\\vis.js:32532"
        },
        {
            "message": "Missing item type\nCheck if this object is overlapping with the provided object",
            "line": " src\\libs\\vis\\vis.js:32624"
        },
        {
            "message": "Missing item type\nRotates the canvas so the text is most readable",
            "line": " src\\libs\\vis\\vis.js:32650"
        },
        {
            "message": "Missing item type\nGet a point on a circle",
            "line": " src\\libs\\vis\\vis.js:32671"
        },
        {
            "message": "Missing item type\ncleans all required things on delete",
            "line": " src\\libs\\vis\\vis.js:32701"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:32817"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _CubicBezierEdgeBase2 = __webpack_require__(84);\nvar _CubicBezierEdgeBase3 = _interopRequireDefault(_CubicBezierEdgeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar CubicBezierEdge = function (_CubicBezierEdgeBase) {\n    _inherits(CubicBezierEdge, _CubicBezierEdgeBase);\n  function CubicBezierEdge(options, body, labelModule) {\n      _classCallCheck(this, CubicBezierEdge);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(CubicBezierEdge).call(this, options, body, labelModule));\n    }\n  /**\n     * Draw a line between two nodes\n     * @param {CanvasRenderingContext2D} ctx\n     * @private",
            "line": " src\\libs\\vis\\vis.js:32819"
        },
        {
            "message": "Missing item type\nCombined function of pointOnLine and pointOnBezier. This gives the coordinates of a point on the line at a certain percentage of the way",
            "line": " src\\libs\\vis\\vis.js:32931"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:32967"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _BezierEdgeBase2 = __webpack_require__(85);\nvar _BezierEdgeBase3 = _interopRequireDefault(_BezierEdgeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar CubicBezierEdgeBase = function (_BezierEdgeBase) {\n    _inherits(CubicBezierEdgeBase, _BezierEdgeBase);\n  function CubicBezierEdgeBase(options, body, labelModule) {\n      _classCallCheck(this, CubicBezierEdgeBase);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(CubicBezierEdgeBase).call(this, options, body, labelModule));\n    }\n  /**\n     * Calculate the distance between a point (x3,y3) and a line segment from\n     * (x1,y1) to (x2,y2).\n     * http://stackoverflow.com/questions/849211/shortest-distancae-between-a-point-and-a-line-segment\n     * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n     * @param {number} x1 from x\n     * @param {number} y1 from y\n     * @param {number} x2 to x\n     * @param {number} y2 to y\n     * @param {number} x3 point to check x\n     * @param {number} y3 point to check y\n     * @private",
            "line": " src\\libs\\vis\\vis.js:32969"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:33053"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _EdgeBase2 = __webpack_require__(86);\nvar _EdgeBase3 = _interopRequireDefault(_EdgeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar BezierEdgeBase = function (_EdgeBase) {\n    _inherits(BezierEdgeBase, _EdgeBase);\n  function BezierEdgeBase(options, body, labelModule) {\n      _classCallCheck(this, BezierEdgeBase);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(BezierEdgeBase).call(this, options, body, labelModule));\n    }\n  /**\n     * This function uses binary search to look for the point where the bezier curve crosses the border of the node.\n     *\n     * @param nearNode\n     * @param ctx\n     * @param viaNode\n     * @param nearNode\n     * @param ctx\n     * @param viaNode\n     * @param nearNode\n     * @param ctx\n     * @param viaNode",
            "line": " src\\libs\\vis\\vis.js:33055"
        },
        {
            "message": "Missing item type\nCalculate the distance between a point (x3,y3) and a line segment from\n(x1,y1) to (x2,y2).\nhttp://stackoverflow.com/questions/849211/shortest-distancae-between-a-point-and-a-line-segment",
            "line": " src\\libs\\vis\\vis.js:33151"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:33197"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar EdgeBase = function () {\n    function EdgeBase(options, body, labelModule) {\n      _classCallCheck(this, EdgeBase);\n    this.body = body;\n      this.labelModule = labelModule;\n      this.options = {};\n      this.setOptions(options);\n      this.colorDirty = true;\n      this.color = {};\n      this.selectionWidth = 2;\n      this.hoverWidth = 1.5;\n      this.fromPoint = this.from;\n      this.toPoint = this.to;\n    }\n  _createClass(EdgeBase, [{\n      key: 'connect',\n      value: function connect() {\n        this.from = this.body.nodes[this.options.from];\n        this.to = this.body.nodes[this.options.to];\n      }\n    }, {\n      key: 'cleanup',\n      value: function cleanup() {\n        return false;\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        this.options = options;\n        this.from = this.body.nodes[this.options.from];\n        this.to = this.body.nodes[this.options.to];\n        this.id = this.options.id;\n      }\n    /**\n       * Redraw a edge as a line\n       * Draw this edge in the given canvas\n       * The 2d context of a HTML canvas can be retrieved by canvas.getContext(\"2d\");\n       * @param {CanvasRenderingContext2D}   ctx\n       * @private",
            "line": " src\\libs\\vis\\vis.js:33199"
        },
        {
            "message": "Missing item type\nGet a point on a circle",
            "line": " src\\libs\\vis\\vis.js:33409"
        },
        {
            "message": "Missing item type\nThis function uses binary search to look for the point where the circle crosses the border of the node.",
            "line": " src\\libs\\vis\\vis.js:33429"
        },
        {
            "message": "Missing item type\nGet the line width of the edge. Depends on width and whether one of the\nconnected nodes is selected.",
            "line": " src\\libs\\vis\\vis.js:33489"
        },
        {
            "message": "Missing item type\nDraw a line from a node to itself, a circle",
            "line": " src\\libs\\vis\\vis.js:33567"
        },
        {
            "message": "Missing item type\nCalculate the distance between a point (x3,y3) and a line segment from\n(x1,y1) to (x2,y2).\nhttp://stackoverflow.com/questions/849211/shortest-distancae-between-a-point-and-a-line-segment",
            "line": " src\\libs\\vis\\vis.js:33591"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:33659"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:33743"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:33795"
        },
        {
            "message": "Missing item type\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _BezierEdgeBase2 = __webpack_require__(85);\nvar _BezierEdgeBase3 = _interopRequireDefault(_BezierEdgeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar BezierEdgeDynamic = function (_BezierEdgeBase) {\n    _inherits(BezierEdgeDynamic, _BezierEdgeBase);\n  function BezierEdgeDynamic(options, body, labelModule) {\n      _classCallCheck(this, BezierEdgeDynamic);\n    // --> this calls the setOptions below\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BezierEdgeDynamic).call(this, options, body, labelModule));\n      //this.via = undefined; // Here for completeness but not allowed to defined before super() is invoked.\n\n    _this._boundFunction = function () {\n        _this.positionBezierNode();\n      };\n      _this.body.emitter.on(\"_repositionBezierNodes\", _this._boundFunction);\n      return _this;\n    }\n  _createClass(BezierEdgeDynamic, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        // check if the physics has changed.\n        var physicsChange = false;\n        if (this.options.physics !== options.physics) {\n          physicsChange = true;\n        }\n      // set the options and the to and from nodes\n        this.options = options;\n        this.id = this.options.id;\n        this.from = this.body.nodes[this.options.from];\n        this.to = this.body.nodes[this.options.to];\n      // setup the support node and connect\n        this.setupSupportNode();\n        this.connect();\n      // when we change the physics state of the edge, we reposition the support node.\n        if (physicsChange === true) {\n          this.via.setOptions({ physics: this.options.physics });\n          this.positionBezierNode();\n        }\n      }\n    }, {\n      key: \"connect\",\n      value: function connect() {\n        this.from = this.body.nodes[this.options.from];\n        this.to = this.body.nodes[this.options.to];\n        if (this.from === undefined || this.to === undefined || this.options.physics === false) {\n          this.via.setOptions({ physics: false });\n        } else {\n          // fix weird behaviour where a self referencing node has physics enabled\n          if (this.from.id === this.to.id) {\n            this.via.setOptions({ physics: false });\n          } else {\n            this.via.setOptions({ physics: true });\n          }\n        }\n      }\n    /**\n       * remove the support nodes\n       * @returns {boolean}",
            "line": " src\\libs\\vis\\vis.js:33797"
        },
        {
            "message": "Missing item type\nBezier curves require an anchor point to calculate the smooth flow. These points are nodes. These nodes are invisible but\nare used for the force calculation.\n\nThe changed data is not called, if needed, it is returned by the main edge constructor.",
            "line": " src\\libs\\vis\\vis.js:33897"
        },
        {
            "message": "Missing item type\nDraw a line between two nodes",
            "line": " src\\libs\\vis\\vis.js:33934"
        },
        {
            "message": "Missing item type\nCombined function of pointOnLine and pointOnBezier. This gives the coordinates of a point on the line at a certain percentage of the way",
            "line": " src\\libs\\vis\\vis.js:33963"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:34000"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _BezierEdgeBase2 = __webpack_require__(85);\nvar _BezierEdgeBase3 = _interopRequireDefault(_BezierEdgeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar BezierEdgeStatic = function (_BezierEdgeBase) {\n    _inherits(BezierEdgeStatic, _BezierEdgeBase);\n  function BezierEdgeStatic(options, body, labelModule) {\n      _classCallCheck(this, BezierEdgeStatic);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(BezierEdgeStatic).call(this, options, body, labelModule));\n    }\n  /**\n     * Draw a line between two nodes\n     * @param {CanvasRenderingContext2D} ctx\n     * @private",
            "line": " src\\libs\\vis\\vis.js:34002"
        },
        {
            "message": "Missing item type\nWe do not use the to and fromPoints here to make the via nodes the same as edges without arrows.",
            "line": " src\\libs\\vis\\vis.js:34064"
        },
        {
            "message": "Missing item type\nCombined function of pointOnLine and pointOnBezier. This gives the coordinates of a point on the line at a certain percentage of the way",
            "line": " src\\libs\\vis\\vis.js:34242"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:34268"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _EdgeBase2 = __webpack_require__(86);\nvar _EdgeBase3 = _interopRequireDefault(_EdgeBase2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar StraightEdge = function (_EdgeBase) {\n    _inherits(StraightEdge, _EdgeBase);\n  function StraightEdge(options, body, labelModule) {\n      _classCallCheck(this, StraightEdge);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(StraightEdge).call(this, options, body, labelModule));\n    }\n  /**\n     * Draw a line between two nodes\n     * @param {CanvasRenderingContext2D} ctx\n     * @private",
            "line": " src\\libs\\vis\\vis.js:34270"
        },
        {
            "message": "Missing item type\nCombined function of pointOnLine and pointOnBezier. This gives the coordinates of a point on the line at a certain percentage of the way",
            "line": " src\\libs\\vis\\vis.js:34326"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:34378"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _BarnesHutSolver = __webpack_require__(91);\nvar _BarnesHutSolver2 = _interopRequireDefault(_BarnesHutSolver);\nvar _RepulsionSolver = __webpack_require__(92);\nvar _RepulsionSolver2 = _interopRequireDefault(_RepulsionSolver);\nvar _HierarchicalRepulsionSolver = __webpack_require__(93);\nvar _HierarchicalRepulsionSolver2 = _interopRequireDefault(_HierarchicalRepulsionSolver);\nvar _SpringSolver = __webpack_require__(94);\nvar _SpringSolver2 = _interopRequireDefault(_SpringSolver);\nvar _HierarchicalSpringSolver = __webpack_require__(95);\nvar _HierarchicalSpringSolver2 = _interopRequireDefault(_HierarchicalSpringSolver);\nvar _CentralGravitySolver = __webpack_require__(96);\nvar _CentralGravitySolver2 = _interopRequireDefault(_CentralGravitySolver);\nvar _FA2BasedRepulsionSolver = __webpack_require__(97);\nvar _FA2BasedRepulsionSolver2 = _interopRequireDefault(_FA2BasedRepulsionSolver);\nvar _FA2BasedCentralGravitySolver = __webpack_require__(98);\nvar _FA2BasedCentralGravitySolver2 = _interopRequireDefault(_FA2BasedCentralGravitySolver);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar PhysicsEngine = function () {\n    function PhysicsEngine(body) {\n      _classCallCheck(this, PhysicsEngine);\n    this.body = body;\n      this.physicsBody = { physicsNodeIndices: [], physicsEdgeIndices: [], forces: {}, velocities: {} };\n    this.physicsEnabled = true;\n      this.simulationInterval = 1000 / 60;\n      this.requiresTimeout = true;\n      this.previousStates = {};\n      this.referenceState = {};\n      this.freezeCache = {};\n      this.renderTimer = undefined;\n    // parameters for the adaptive timestep\n      this.adaptiveTimestep = false;\n      this.adaptiveTimestepEnabled = false;\n      this.adaptiveCounter = 0;\n      this.adaptiveInterval = 3;\n    this.stabilized = false;\n      this.startedStabilization = false;\n      this.stabilizationIterations = 0;\n      this.ready = false; // will be set to true if the stabilize\n    // default options\n      this.options = {};\n      this.defaultOptions = {\n        enabled: true,\n        barnesHut: {\n          theta: 0.5,\n          gravitationalConstant: -2000,\n          centralGravity: 0.3,\n          springLength: 95,\n          springConstant: 0.04,\n          damping: 0.09,\n          avoidOverlap: 0\n        },\n        forceAtlas2Based: {\n          theta: 0.5,\n          gravitationalConstant: -50,\n          centralGravity: 0.01,\n          springConstant: 0.08,\n          springLength: 100,\n          damping: 0.4,\n          avoidOverlap: 0\n        },\n        repulsion: {\n          centralGravity: 0.2,\n          springLength: 200,\n          springConstant: 0.05,\n          nodeDistance: 100,\n          damping: 0.09,\n          avoidOverlap: 0\n        },\n        hierarchicalRepulsion: {\n          centralGravity: 0.0,\n          springLength: 100,\n          springConstant: 0.01,\n          nodeDistance: 120,\n          damping: 0.09\n        },\n        maxVelocity: 50,\n        minVelocity: 0.75, // px/s\n        solver: 'barnesHut',\n        stabilization: {\n          enabled: true,\n          iterations: 1000, // maximum number of iteration to stabilize\n          updateInterval: 50,\n          onlyDynamicEdges: false,\n          fit: true\n        },\n        timestep: 0.5,\n        adaptiveTimestep: true\n      };\n      util.extend(this.options, this.defaultOptions);\n      this.timestep = 0.5;\n      this.layoutFailed = false;\n    this.bindEventListeners();\n    }\n  _createClass(PhysicsEngine, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this = this;\n      this.body.emitter.on('initPhysics', function () {\n          _this.initPhysics();\n        });\n        this.body.emitter.on('_layoutFailed', function () {\n          _this.layoutFailed = true;\n        });\n        this.body.emitter.on('resetPhysics', function () {\n          _this.stopSimulation();_this.ready = false;\n        });\n        this.body.emitter.on('disablePhysics', function () {\n          _this.physicsEnabled = false;_this.stopSimulation();\n        });\n        this.body.emitter.on('restorePhysics', function () {\n          _this.setOptions(_this.options);\n          if (_this.ready === true) {\n            _this.startSimulation();\n          }\n        });\n        this.body.emitter.on('startSimulation', function () {\n          if (_this.ready === true) {\n            _this.startSimulation();\n          }\n        });\n        this.body.emitter.on('stopSimulation', function () {\n          _this.stopSimulation();\n        });\n        this.body.emitter.on('destroy', function () {\n          _this.stopSimulation(false);\n          _this.body.emitter.off();\n        });\n        // this event will trigger a rebuilding of the cache everything. Used when nodes or edges have been added or removed.\n        this.body.emitter.on(\"_dataChanged\", function () {\n          // update shortcut lists\n          _this.updatePhysicsData();\n        });\n      // debug: show forces\n        // this.body.emitter.on(\"afterDrawing\", (ctx) => {this._drawForces(ctx);});\n      }\n    /**\n       * set the physics options\n       * @param options",
            "line": " src\\libs\\vis\\vis.js:34380"
        },
        {
            "message": "Missing item type\nconfigure the engine.",
            "line": " src\\libs\\vis\\vis.js:34590"
        },
        {
            "message": "Missing item type\ninitialize the engine",
            "line": " src\\libs\\vis\\vis.js:34624"
        },
        {
            "message": "Missing item type\nStart the simulation",
            "line": " src\\libs\\vis\\vis.js:34646"
        },
        {
            "message": "Missing item type\nStop the simulation, force stabilization.",
            "line": " src\\libs\\vis\\vis.js:34671"
        },
        {
            "message": "Missing item type\nThe viewFunction inserts this step into each render loop. It calls the physics tick and handles the cleanup at stabilized.",
            "line": " src\\libs\\vis\\vis.js:34693"
        },
        {
            "message": "Missing item type\ntrigger the stabilized event.",
            "line": " src\\libs\\vis\\vis.js:34719"
        },
        {
            "message": "Missing item type\nA single simulation step (or 'tick') in the physics simulation",
            "line": " src\\libs\\vis\\vis.js:34740"
        },
        {
            "message": "Missing item type\nNodes and edges can have the physics toggles on or off. A collection of indices is created here so we can skip the check all the time.",
            "line": " src\\libs\\vis\\vis.js:34819"
        },
        {
            "message": "Missing item type\nRevert the simulation one step. This is done so after stabilization, every new start of the simulation will also say stabilized.",
            "line": " src\\libs\\vis\\vis.js:34871"
        },
        {
            "message": "Missing item type\nThis compares the reference state to the current state",
            "line": " src\\libs\\vis\\vis.js:34901"
        },
        {
            "message": "Missing item type\nmove the nodes one timestep and check if they are stabilized",
            "line": " src\\libs\\vis\\vis.js:34930"
        },
        {
            "message": "Missing item type\nPerform the actual step",
            "line": " src\\libs\\vis\\vis.js:34959"
        },
        {
            "message": "Missing item type\ncalculate the forces for one physics iteration.",
            "line": " src\\libs\\vis\\vis.js:35005"
        },
        {
            "message": "Missing item type\nWhen initializing and stabilizing, we can freeze nodes with a predefined position. This greatly speeds up stabilization\nbecause only the supportnodes for the smoothCurves have to settle.",
            "line": " src\\libs\\vis\\vis.js:35017"
        },
        {
            "message": "Missing item type\nUnfreezes the nodes that have been frozen by _freezeDefinedNodes.",
            "line": " src\\libs\\vis\\vis.js:35039"
        },
        {
            "message": "Missing item type\nFind a stable position for all nodes",
            "line": " src\\libs\\vis\\vis.js:35060"
        },
        {
            "message": "Missing item type\nOne batch of stabilization",
            "line": " src\\libs\\vis\\vis.js:35108"
        },
        {
            "message": "Missing item type\nWrap up the stabilization, fit and emit the events.",
            "line": " src\\libs\\vis\\vis.js:35136"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:35199"
        },
        {
            "message": "Missing item type\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar BarnesHutSolver = function () {\n    function BarnesHutSolver(body, physicsBody, options) {\n      _classCallCheck(this, BarnesHutSolver);\n    this.body = body;\n      this.physicsBody = physicsBody;\n      this.barnesHutTree;\n      this.setOptions(options);\n      this.randomSeed = 5;\n    // debug: show grid\n      //this.body.emitter.on(\"afterDrawing\", (ctx) => {this._debug(ctx,'#ff0000')})\n    }\n  _createClass(BarnesHutSolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n        this.thetaInversed = 1 / this.options.theta;\n        this.overlapAvoidanceFactor = 1 - Math.max(0, Math.min(1, this.options.avoidOverlap)); // if 1 then min distance = 0.5, if 0.5 then min distance = 0.5 + 0.5*node.shape.radius\n      }\n    }, {\n      key: \"seededRandom\",\n      value: function seededRandom() {\n        var x = Math.sin(this.randomSeed++) * 10000;\n        return x - Math.floor(x);\n      }\n    /**\n       * This function calculates the forces the nodes apply on each other based on a gravitational model.\n       * The Barnes Hut method is used to speed up this N-body simulation.\n       *\n       * @private",
            "line": " src\\libs\\vis\\vis.js:35201"
        },
        {
            "message": "Missing item type\nThis function traverses the barnesHutTree. It checks when it can approximate distant nodes with their center of mass.\nIf a region contains a single node, we check if it is not itself, then we apply the force.",
            "line": " src\\libs\\vis\\vis.js:35277"
        },
        {
            "message": "Missing item type\nCalculate the forces based on the distance.",
            "line": " src\\libs\\vis\\vis.js:35323"
        },
        {
            "message": "Missing item type\nThis function constructs the barnesHut tree recursively. It creates the root, splits it and starts placing the nodes.",
            "line": " src\\libs\\vis\\vis.js:35356"
        },
        {
            "message": "Missing item type\nthis updates the mass of a branch. this is increased by adding a node.",
            "line": " src\\libs\\vis\\vis.js:35442"
        },
        {
            "message": "Missing item type\ndetermine in which branch the node will be placed.",
            "line": " src\\libs\\vis\\vis.js:35467"
        },
        {
            "message": "Missing item type\nactually place the node in a region (or branch)",
            "line": " src\\libs\\vis\\vis.js:35505"
        },
        {
            "message": "Missing item type\nthis function splits a branch into 4 sub branches. If the branch contained a node, we place it in the subbranch\nafter the split is complete.",
            "line": " src\\libs\\vis\\vis.js:35543"
        },
        {
            "message": "Missing item type\nThis function subdivides the region into four new segments.\nSpecifically, this inserts a single new segment.\nIt fills the children section of the parentBranch",
            "line": " src\\libs\\vis\\vis.js:35574"
        },
        {
            "message": "Missing item type\nThis function is for debugging purposed, it draws the tree.",
            "line": " src\\libs\\vis\\vis.js:35635"
        },
        {
            "message": "Missing item type\nThis function is for debugging purposes. It draws the branches recursively.",
            "line": " src\\libs\\vis\\vis.js:35654"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:35711"
        },
        {
            "message": "Missing item type\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar RepulsionSolver = function () {\n    function RepulsionSolver(body, physicsBody, options) {\n      _classCallCheck(this, RepulsionSolver);\n    this.body = body;\n      this.physicsBody = physicsBody;\n      this.setOptions(options);\n    }\n  _createClass(RepulsionSolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n      /**\n       * Calculate the forces the nodes apply on each other based on a repulsion field.\n       * This field is linearly approximated.\n       *\n       * @private",
            "line": " src\\libs\\vis\\vis.js:35713"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:35805"
        },
        {
            "message": "Missing item type\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar HierarchicalRepulsionSolver = function () {\n    function HierarchicalRepulsionSolver(body, physicsBody, options) {\n      _classCallCheck(this, HierarchicalRepulsionSolver);\n    this.body = body;\n      this.physicsBody = physicsBody;\n      this.setOptions(options);\n    }\n  _createClass(HierarchicalRepulsionSolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n    /**\n       * Calculate the forces the nodes apply on each other based on a repulsion field.\n       * This field is linearly approximated.\n       *\n       * @private",
            "line": " src\\libs\\vis\\vis.js:35807"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:35896"
        },
        {
            "message": "Missing item type\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar SpringSolver = function () {\n    function SpringSolver(body, physicsBody, options) {\n      _classCallCheck(this, SpringSolver);\n    this.body = body;\n      this.physicsBody = physicsBody;\n      this.setOptions(options);\n    }\n  _createClass(SpringSolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n    /**\n       * This function calculates the springforces on the nodes, accounting for the support nodes.\n       *\n       * @private",
            "line": " src\\libs\\vis\\vis.js:35898"
        },
        {
            "message": "Missing item type\nThis is the code actually performing the calculation for the function above.",
            "line": " src\\libs\\vis\\vis.js:35967"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:36007"
        },
        {
            "message": "Missing item type\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar HierarchicalSpringSolver = function () {\n    function HierarchicalSpringSolver(body, physicsBody, options) {\n      _classCallCheck(this, HierarchicalSpringSolver);\n    this.body = body;\n      this.physicsBody = physicsBody;\n      this.setOptions(options);\n    }\n  _createClass(HierarchicalSpringSolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n    /**\n       * This function calculates the springforces on the nodes, accounting for the support nodes.\n       *\n       * @private",
            "line": " src\\libs\\vis\\vis.js:36009"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:36136"
        },
        {
            "message": "Missing item type\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar CentralGravitySolver = function () {\n    function CentralGravitySolver(body, physicsBody, options) {\n      _classCallCheck(this, CentralGravitySolver);\n    this.body = body;\n      this.physicsBody = physicsBody;\n      this.setOptions(options);\n    }\n  _createClass(CentralGravitySolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n    }, {\n      key: \"solve\",\n      value: function solve() {\n        var dx = void 0,\n            dy = void 0,\n            distance = void 0,\n            node = void 0;\n        var nodes = this.body.nodes;\n        var nodeIndices = this.physicsBody.physicsNodeIndices;\n        var forces = this.physicsBody.forces;\n      for (var i = 0; i < nodeIndices.length; i++) {\n          var nodeId = nodeIndices[i];\n          node = nodes[nodeId];\n          dx = -node.x;\n          dy = -node.y;\n          distance = Math.sqrt(dx * dx + dy * dy);\n        this._calculateForces(distance, dx, dy, forces, node);\n        }\n      }\n    /**\n       * Calculate the forces based on the distance.\n       * @private",
            "line": " src\\libs\\vis\\vis.js:36138"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:36205"
        },
        {
            "message": "Missing item type\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _BarnesHutSolver2 = __webpack_require__(91);\nvar _BarnesHutSolver3 = _interopRequireDefault(_BarnesHutSolver2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar ForceAtlas2BasedRepulsionSolver = function (_BarnesHutSolver) {\n    _inherits(ForceAtlas2BasedRepulsionSolver, _BarnesHutSolver);\n  function ForceAtlas2BasedRepulsionSolver(body, physicsBody, options) {\n      _classCallCheck(this, ForceAtlas2BasedRepulsionSolver);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(ForceAtlas2BasedRepulsionSolver).call(this, body, physicsBody, options));\n    }\n  /**\n     * Calculate the forces based on the distance.\n     *\n     * @param distance\n     * @param dx\n     * @param dy\n     * @param node\n     * @param parentBranch\n     * @private",
            "line": " src\\libs\\vis\\vis.js:36207"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:36279"
        },
        {
            "message": "Missing item type\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _CentralGravitySolver2 = __webpack_require__(96);\nvar _CentralGravitySolver3 = _interopRequireDefault(_CentralGravitySolver2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar ForceAtlas2BasedCentralGravitySolver = function (_CentralGravitySolver) {\n    _inherits(ForceAtlas2BasedCentralGravitySolver, _CentralGravitySolver);\n  function ForceAtlas2BasedCentralGravitySolver(body, physicsBody, options) {\n      _classCallCheck(this, ForceAtlas2BasedCentralGravitySolver);\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(ForceAtlas2BasedCentralGravitySolver).call(this, body, physicsBody, options));\n    }\n  /**\n     * Calculate the forces based on the distance.\n     * @private",
            "line": " src\\libs\\vis\\vis.js:36281"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:36335"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NetworkUtil = __webpack_require__(100);\nvar _NetworkUtil2 = _interopRequireDefault(_NetworkUtil);\nvar _Cluster = __webpack_require__(101);\nvar _Cluster2 = _interopRequireDefault(_Cluster);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar ClusterEngine = function () {\n    function ClusterEngine(body) {\n      var _this = this;\n    _classCallCheck(this, ClusterEngine);\n    this.body = body;\n      this.clusteredNodes = {};\n      this.clusteredEdges = {};\n    this.options = {};\n      this.defaultOptions = {};\n      util.extend(this.options, this.defaultOptions);\n    this.body.emitter.on('_resetData', function () {\n        _this.clusteredNodes = {};_this.clusteredEdges = {};\n      });\n    }\n  _createClass(ClusterEngine, [{\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {}\n      }\n    /**\n      *\n      * @param hubsize\n      * @param options",
            "line": " src\\libs\\vis\\vis.js:36337"
        },
        {
            "message": "Missing item type\nloop over all nodes, check if they adhere to the condition and cluster if needed.",
            "line": " src\\libs\\vis\\vis.js:36419"
        },
        {
            "message": "Missing item type\nCluster all nodes in the network that have only X edges",
            "line": " src\\libs\\vis\\vis.js:36462"
        },
        {
            "message": "Missing item type\nCluster all nodes in the network that have only 1 edge",
            "line": " src\\libs\\vis\\vis.js:36546"
        },
        {
            "message": "Missing item type\nCluster all nodes in the network that have only 2 edge",
            "line": " src\\libs\\vis\\vis.js:36560"
        },
        {
            "message": "Missing item type\nsuck all connected nodes of a node into the node.",
            "line": " src\\libs\\vis\\vis.js:36574"
        },
        {
            "message": "Missing item type\nThis function creates the edges that will be attached to the cluster\nIt looks for edges that are connected to the nodes from the \"outside' of the cluster.",
            "line": " src\\libs\\vis\\vis.js:36645"
        },
        {
            "message": "Missing item type\nThis function checks the options that can be supplied to the different cluster functions\nfor certain fields and inserts defaults if needed",
            "line": " src\\libs\\vis\\vis.js:36733"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:36756"
        },
        {
            "message": "Missing item type\nCheck if a node is a cluster.",
            "line": " src\\libs\\vis\\vis.js:36901"
        },
        {
            "message": "Missing item type\nget the position of the cluster node based on what's inside",
            "line": " src\\libs\\vis\\vis.js:36918"
        },
        {
            "message": "Missing item type\nOpen a cluster by calling this function.",
            "line": " src\\libs\\vis\\vis.js:36945"
        },
        {
            "message": "Missing item type\nGet the stack clusterId's that a certain node resides in. cluster A -> cluster B -> cluster C -> node",
            "line": " src\\libs\\vis\\vis.js:37113"
        },
        {
            "message": "Missing item type\nGet the Id the node is connected to",
            "line": " src\\libs\\vis\\vis.js:37137"
        },
        {
            "message": "Missing item type\nWe determine how many connections denote an important hub.\nWe take the mean + 2*std as the important hub size. (Assuming a normal distribution of data, ~2.2%)",
            "line": " src\\libs\\vis\\vis.js:37157"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:37203"
        },
        {
            "message": "Missing item type\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar NetworkUtil = function () {\n    function NetworkUtil() {\n      _classCallCheck(this, NetworkUtil);\n    }\n  /**\n     * Find the center position of the network considering the bounding boxes",
            "line": " src\\libs\\vis\\vis.js:37205"
        },
        {
            "message": "Missing item type\nFind the center position of the network",
            "line": " src\\libs\\vis\\vis.js:37263"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:37301"
        },
        {
            "message": "Missing item type\nThis returns a clone of the options or options of the edge or node to be used for construction of new edges or check functions for new nodes.",
            "line": " src\\libs\\vis\\vis.js:37313"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:37341"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _Node2 = __webpack_require__(62);\nvar _Node3 = _interopRequireDefault(_Node2);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n/**\n   *",
            "line": " src\\libs\\vis\\vis.js:37343"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:37386"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nif (typeof window !== 'undefined') {\n    window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n  }\nvar util = __webpack_require__(1);\nvar CanvasRenderer = function () {\n    function CanvasRenderer(body, canvas) {\n      _classCallCheck(this, CanvasRenderer);\n    this.body = body;\n      this.canvas = canvas;\n    this.redrawRequested = false;\n      this.renderTimer = undefined;\n      this.requiresTimeout = true;\n      this.renderingActive = false;\n      this.renderRequests = 0;\n      this.pixelRatio = undefined;\n      this.allowRedraw = true;\n    this.dragging = false;\n      this.options = {};\n      this.defaultOptions = {\n        hideEdgesOnDrag: false,\n        hideNodesOnDrag: false\n      };\n      util.extend(this.options, this.defaultOptions);\n    this._determineBrowserMethod();\n      this.bindEventListeners();\n    }\n  _createClass(CanvasRenderer, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this = this;\n      this.body.emitter.on(\"dragStart\", function () {\n          _this.dragging = true;\n        });\n        this.body.emitter.on(\"dragEnd\", function () {\n          return _this.dragging = false;\n        });\n        this.body.emitter.on(\"_resizeNodes\", function () {\n          return _this._resizeNodes();\n        });\n        this.body.emitter.on(\"_redraw\", function () {\n          if (_this.renderingActive === false) {\n            _this._redraw();\n          }\n        });\n        this.body.emitter.on(\"_blockRedraw\", function () {\n          _this.allowRedraw = false;\n        });\n        this.body.emitter.on(\"_allowRedraw\", function () {\n          _this.allowRedraw = true;_this.redrawRequested = false;\n        });\n        this.body.emitter.on(\"_requestRedraw\", this._requestRedraw.bind(this));\n        this.body.emitter.on(\"_startRendering\", function () {\n          _this.renderRequests += 1;\n          _this.renderingActive = true;\n          _this._startRendering();\n        });\n        this.body.emitter.on(\"_stopRendering\", function () {\n          _this.renderRequests -= 1;\n          _this.renderingActive = _this.renderRequests > 0;\n          _this.renderTimer = undefined;\n        });\n        this.body.emitter.on('destroy', function () {\n          _this.renderRequests = 0;\n          _this.allowRedraw = false;\n          _this.renderingActive = false;\n          if (_this.requiresTimeout === true) {\n            clearTimeout(_this.renderTimer);\n          } else {\n            cancelAnimationFrame(_this.renderTimer);\n          }\n          _this.body.emitter.off();\n        });\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          var fields = ['hideEdgesOnDrag', 'hideNodesOnDrag'];\n          util.selectiveDeepExtend(fields, this.options, options);\n        }\n      }\n    }, {\n      key: '_startRendering',\n      value: function _startRendering() {\n        if (this.renderingActive === true) {\n          if (this.renderTimer === undefined) {\n            if (this.requiresTimeout === true) {\n              this.renderTimer = window.setTimeout(this._renderStep.bind(this), this.simulationInterval); // wait this.renderTimeStep milliseconds and perform the animation step function\n            } else {\n                this.renderTimer = window.requestAnimationFrame(this._renderStep.bind(this)); // wait this.renderTimeStep milliseconds and perform the animation step function\n              }\n          }\n        }\n      }\n    }, {\n      key: '_renderStep',\n      value: function _renderStep() {\n        if (this.renderingActive === true) {\n          // reset the renderTimer so a new scheduled animation step can be set\n          this.renderTimer = undefined;\n        if (this.requiresTimeout === true) {\n            // this schedules a new simulation step\n            this._startRendering();\n          }\n        this._redraw();\n        if (this.requiresTimeout === false) {\n            // this schedules a new simulation step\n            this._startRendering();\n          }\n        }\n      }\n    /**\n       * Redraw the network with the current data\n       * chart will be resized too.",
            "line": " src\\libs\\vis\\vis.js:37388"
        },
        {
            "message": "Missing item type\nRedraw the network with the current data",
            "line": " src\\libs\\vis\\vis.js:37535"
        },
        {
            "message": "Missing item type\nRedraw all nodes\nThe 2d context of a HTML canvas can be retrieved by canvas.getContext('2d');",
            "line": " src\\libs\\vis\\vis.js:37620"
        },
        {
            "message": "Missing item type\nRedraw all nodes\nThe 2d context of a HTML canvas can be retrieved by canvas.getContext('2d');",
            "line": " src\\libs\\vis\\vis.js:37656"
        },
        {
            "message": "Missing item type\nRedraw all edges\nThe 2d context of a HTML canvas can be retrieved by canvas.getContext('2d');",
            "line": " src\\libs\\vis\\vis.js:37705"
        },
        {
            "message": "Missing item type\nDetermine if the browser requires a setTimeout or a requestAnimationFrame. This was required because\nsome implementations (safari and IE9) did not support requestAnimationFrame",
            "line": " src\\libs\\vis\\vis.js:37727"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:37759"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar Hammer = __webpack_require__(22);\n  var hammerUtil = __webpack_require__(25);\nvar util = __webpack_require__(1);\n/**\n   * Create the main frame for the Network.\n   * This function is executed once when a Network object is created. The frame\n   * contains a canvas, and this canvas contains all objects like the axis and\n   * nodes.\n   * @private",
            "line": " src\\libs\\vis\\vis.js:37761"
        },
        {
            "message": "Missing item type\nGet and store the cameraState",
            "line": " src\\libs\\vis\\vis.js:37869"
        },
        {
            "message": "Missing item type\nSet the cameraState",
            "line": " src\\libs\\vis\\vis.js:37890"
        },
        {
            "message": "Missing item type\nCreate the HTML",
            "line": " src\\libs\\vis\\vis.js:37942"
        },
        {
            "message": "Missing item type\nThis function binds hammer, it can be repeated over and over due to the uniqueness check.",
            "line": " src\\libs\\vis\\vis.js:37989"
        },
        {
            "message": "Missing item type\nSet a new size for the network",
            "line": " src\\libs\\vis\\vis.js:38057"
        },
        {
            "message": "Missing item type\nConvert the X coordinate in DOM-space (coordinate point in browser relative to the container div) to\nthe X coordinate in canvas-space (the simulation sandbox, which the camera looks upon)",
            "line": " src\\libs\\vis\\vis.js:38138"
        },
        {
            "message": "Missing item type\nConvert the X coordinate in canvas-space (the simulation sandbox, which the camera looks upon) to\nthe X coordinate in DOM-space (coordinate point in browser relative to the container div)",
            "line": " src\\libs\\vis\\vis.js:38149"
        },
        {
            "message": "Missing item type\nConvert the Y coordinate in DOM-space (coordinate point in browser relative to the container div) to\nthe Y coordinate in canvas-space (the simulation sandbox, which the camera looks upon)",
            "line": " src\\libs\\vis\\vis.js:38163"
        },
        {
            "message": "Missing item type\nConvert the Y coordinate in canvas-space (the simulation sandbox, which the camera looks upon) to\nthe Y coordinate in DOM-space (coordinate point in browser relative to the container div)",
            "line": " src\\libs\\vis\\vis.js:38177"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:38191"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:38204"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:38223"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NetworkUtil = __webpack_require__(100);\nvar _NetworkUtil2 = _interopRequireDefault(_NetworkUtil);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar View = function () {\n    function View(body, canvas) {\n      var _this = this;\n    _classCallCheck(this, View);\n    this.body = body;\n      this.canvas = canvas;\n    this.animationSpeed = 1 / this.renderRefreshRate;\n      this.animationEasingFunction = \"easeInOutQuint\";\n      this.easingTime = 0;\n      this.sourceScale = 0;\n      this.targetScale = 0;\n      this.sourceTranslation = 0;\n      this.targetTranslation = 0;\n      this.lockedOnNodeId = undefined;\n      this.lockedOnNodeOffset = undefined;\n      this.touchTime = 0;\n    this.viewFunction = undefined;\n    this.body.emitter.on(\"fit\", this.fit.bind(this));\n      this.body.emitter.on(\"animationFinished\", function () {\n        _this.body.emitter.emit(\"_stopRendering\");\n      });\n      this.body.emitter.on(\"unlockNode\", this.releaseNode.bind(this));\n    }\n  _createClass(View, [{\n      key: 'setOptions',\n      value: function setOptions() {\n        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n      this.options = options;\n      }\n    /**\n       * This function zooms out to fit all data on screen based on amount of nodes\n       * @param {Object} Options\n       * @param {Boolean} [initialZoom]  | zoom based on fitted formula or range, true = fitted, default = false;",
            "line": " src\\libs\\vis\\vis.js:38225"
        },
        {
            "message": "Missing item type\nCenter a node in view.",
            "line": " src\\libs\\vis\\vis.js:38350"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:38373"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:38422"
        },
        {
            "message": "Missing item type\nused to animate smoothly by hijacking the redraw function.",
            "line": " src\\libs\\vis\\vis.js:38491"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:38523"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:38573"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NavigationHandler = __webpack_require__(106);\nvar _NavigationHandler2 = _interopRequireDefault(_NavigationHandler);\nvar _Popup = __webpack_require__(107);\nvar _Popup2 = _interopRequireDefault(_Popup);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar InteractionHandler = function () {\n    function InteractionHandler(body, canvas, selectionHandler) {\n      _classCallCheck(this, InteractionHandler);\n    this.body = body;\n      this.canvas = canvas;\n      this.selectionHandler = selectionHandler;\n      this.navigationHandler = new _NavigationHandler2.default(body, canvas);\n    // bind the events from hammer to functions in this object\n      this.body.eventListeners.onTap = this.onTap.bind(this);\n      this.body.eventListeners.onTouch = this.onTouch.bind(this);\n      this.body.eventListeners.onDoubleTap = this.onDoubleTap.bind(this);\n      this.body.eventListeners.onHold = this.onHold.bind(this);\n      this.body.eventListeners.onDragStart = this.onDragStart.bind(this);\n      this.body.eventListeners.onDrag = this.onDrag.bind(this);\n      this.body.eventListeners.onDragEnd = this.onDragEnd.bind(this);\n      this.body.eventListeners.onMouseWheel = this.onMouseWheel.bind(this);\n      this.body.eventListeners.onPinch = this.onPinch.bind(this);\n      this.body.eventListeners.onMouseMove = this.onMouseMove.bind(this);\n      this.body.eventListeners.onRelease = this.onRelease.bind(this);\n      this.body.eventListeners.onContext = this.onContext.bind(this);\n    this.touchTime = 0;\n      this.drag = {};\n      this.pinch = {};\n      this.popup = undefined;\n      this.popupObj = undefined;\n      this.popupTimer = undefined;\n    this.body.functions.getPointer = this.getPointer.bind(this);\n    this.options = {};\n      this.defaultOptions = {\n        dragNodes: true,\n        dragView: true,\n        hover: false,\n        keyboard: {\n          enabled: false,\n          speed: { x: 10, y: 10, zoom: 0.02 },\n          bindToWindow: true\n        },\n        navigationButtons: false,\n        tooltipDelay: 300,\n        zoomView: true\n      };\n      util.extend(this.options, this.defaultOptions);\n    this.bindEventListeners();\n    }\n  _createClass(InteractionHandler, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this = this;\n      this.body.emitter.on('destroy', function () {\n          clearTimeout(_this.popupTimer);\n          delete _this.body.functions.getPointer;\n        });\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          // extend all but the values in fields\n          var fields = ['hideEdgesOnDrag', 'hideNodesOnDrag', 'keyboard', 'multiselect', 'selectable', 'selectConnectedEdges'];\n          util.selectiveNotDeepExtend(fields, this.options, options);\n        // merge the keyboard options in.\n          util.mergeOptions(this.options, options, 'keyboard');\n        if (options.tooltip) {\n            util.extend(this.options.tooltip, options.tooltip);\n            if (options.tooltip.color) {\n              this.options.tooltip.color = util.parseColor(options.tooltip.color);\n            }\n          }\n        }\n      this.navigationHandler.setOptions(this.options);\n      }\n    /**\n       * Get the pointer location from a touch location\n       * @param {{x: Number, y: Number}} touch\n       * @return {{x: Number, y: Number}} pointer\n       * @private",
            "line": " src\\libs\\vis\\vis.js:38575"
        },
        {
            "message": "Missing item type\nOn start of a touch gesture, store the pointer",
            "line": " src\\libs\\vis\\vis.js:38698"
        },
        {
            "message": "Missing item type\nhandle tap/click event: select/unselect a node",
            "line": " src\\libs\\vis\\vis.js:38716"
        },
        {
            "message": "Missing item type\nhandle doubletap event",
            "line": " src\\libs\\vis\\vis.js:38731"
        },
        {
            "message": "Missing item type\nhandle long tap event: multi select nodes",
            "line": " src\\libs\\vis\\vis.js:38743"
        },
        {
            "message": "Missing item type\nhandle the release of the screen",
            "line": " src\\libs\\vis\\vis.js:38760"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:38783"
        },
        {
            "message": "Missing item type\nThis function checks if the nodes and edges previously selected have changed.",
            "line": " src\\libs\\vis\\vis.js:38852"
        },
        {
            "message": "Missing item type\nThis function is called by onDragStart.\nIt is separated out because we can then overload it for the datamanipulation system.",
            "line": " src\\libs\\vis\\vis.js:38890"
        },
        {
            "message": "Missing item type\nhandle drag event",
            "line": " src\\libs\\vis\\vis.js:38952"
        },
        {
            "message": "Missing item type\nhandle drag start event",
            "line": " src\\libs\\vis\\vis.js:39015"
        },
        {
            "message": "Missing item type\nHandle pinch event",
            "line": " src\\libs\\vis\\vis.js:39039"
        },
        {
            "message": "Missing item type\nZoom the network in or out",
            "line": " src\\libs\\vis\\vis.js:39060"
        },
        {
            "message": "Missing item type\nEvent handler for mouse wheel event, used to zoom the timeline\nSee http://adomas.org/javascript-mouse-wheel/\n    https://github.com/EightMedia/hammer.js/issues/256",
            "line": " src\\libs\\vis\\vis.js:39112"
        },
        {
            "message": "Missing item type\nMouse move handler for checking whether the title moves over a node with a title.",
            "line": " src\\libs\\vis\\vis.js:39161"
        },
        {
            "message": "Missing item type\nAdding hover highlights",
            "line": " src\\libs\\vis\\vis.js:39207"
        },
        {
            "message": "Missing item type\nCheck if there is an element on the given position in the network\n(a node or edge). If so, and if this element has a title,\nshow a popup window with its title.",
            "line": " src\\libs\\vis\\vis.js:39220"
        },
        {
            "message": "Missing item type\nCheck if the popup must be hidden, which is the case when the mouse is no\nlonger hovering on the object",
            "line": " src\\libs\\vis\\vis.js:39316"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:39361"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\n  var Hammer = __webpack_require__(22);\n  var hammerUtil = __webpack_require__(25);\n  var keycharm = __webpack_require__(43);\nvar NavigationHandler = function () {\n    function NavigationHandler(body, canvas) {\n      var _this = this;\n    _classCallCheck(this, NavigationHandler);\n    this.body = body;\n      this.canvas = canvas;\n    this.iconsCreated = false;\n      this.navigationHammers = [];\n      this.boundFunctions = {};\n      this.touchTime = 0;\n      this.activated = false;\n    this.body.emitter.on(\"activate\", function () {\n        _this.activated = true;_this.configureKeyboardBindings();\n      });\n      this.body.emitter.on(\"deactivate\", function () {\n        _this.activated = false;_this.configureKeyboardBindings();\n      });\n      this.body.emitter.on(\"destroy\", function () {\n        if (_this.keycharm !== undefined) {\n          _this.keycharm.destroy();\n        }\n      });\n    this.options = {};\n    }\n  _createClass(NavigationHandler, [{\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          this.options = options;\n          this.create();\n        }\n      }\n    }, {\n      key: 'create',\n      value: function create() {\n        if (this.options.navigationButtons === true) {\n          if (this.iconsCreated === false) {\n            this.loadNavigationElements();\n          }\n        } else if (this.iconsCreated === true) {\n          this.cleanNavigation();\n        }\n      this.configureKeyboardBindings();\n      }\n    }, {\n      key: 'cleanNavigation',\n      value: function cleanNavigation() {\n        // clean hammer bindings\n        if (this.navigationHammers.length != 0) {\n          for (var i = 0; i < this.navigationHammers.length; i++) {\n            this.navigationHammers[i].destroy();\n          }\n          this.navigationHammers = [];\n        }\n      // clean up previous navigation items\n        if (this.navigationDOM && this.navigationDOM['wrapper'] && this.navigationDOM['wrapper'].parentNode) {\n          this.navigationDOM['wrapper'].parentNode.removeChild(this.navigationDOM['wrapper']);\n        }\n      this.iconsCreated = false;\n      }\n    /**\n       * Creation of the navigation controls nodes. They are drawn over the rest of the nodes and are not affected by scale and translation\n       * they have a triggerFunction which is called on click. If the position of the navigation controls is dependent\n       * on this.frame.canvas.clientWidth or this.frame.canvas.clientHeight, we flag horizontalAlignLeft and verticalAlignTop false.\n       * This means that the location will be corrected by the _relocateNavigation function on a size change of the canvas.\n       *\n       * @private",
            "line": " src\\libs\\vis\\vis.js:39363"
        },
        {
            "message": "Missing item type\nthis stops all movement induced by the navigation buttons",
            "line": " src\\libs\\vis\\vis.js:39518"
        },
        {
            "message": "Missing item type\nthis stops all movement induced by the navigation buttons",
            "line": " src\\libs\\vis\\vis.js:39534"
        },
        {
            "message": "Missing item type\nbind all keys using keycharm.",
            "line": " src\\libs\\vis\\vis.js:39584"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:39690"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n   * Popup is a class to create a popup window with some text\n   * @param {Element}  container     The container object.\n   * @param {Number} [x]\n   * @param {Number} [y]\n   * @param {String} [text]\n   * @param {Object} [style]     An object containing borderColor,\n   *                             backgroundColor, etc.",
            "line": " src\\libs\\vis\\vis.js:39692"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:39731"
        },
        {
            "message": "Missing item type\nSet the content for the popup window. This can be HTML code or text.",
            "line": " src\\libs\\vis\\vis.js:39744"
        },
        {
            "message": "Missing item type\nShow the popup window",
            "line": " src\\libs\\vis\\vis.js:39760"
        },
        {
            "message": "Missing item type\nHide the popup window",
            "line": " src\\libs\\vis\\vis.js:39803"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:39820"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _Node = __webpack_require__(62);\nvar _Node2 = _interopRequireDefault(_Node);\nvar _Edge = __webpack_require__(82);\nvar _Edge2 = _interopRequireDefault(_Edge);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar SelectionHandler = function () {\n    function SelectionHandler(body, canvas) {\n      var _this = this;\n    _classCallCheck(this, SelectionHandler);\n    this.body = body;\n      this.canvas = canvas;\n      this.selectionObj = { nodes: [], edges: [] };\n      this.hoverObj = { nodes: {}, edges: {} };\n    this.options = {};\n      this.defaultOptions = {\n        multiselect: false,\n        selectable: true,\n        selectConnectedEdges: true,\n        hoverConnectedEdges: true\n      };\n      util.extend(this.options, this.defaultOptions);\n    this.body.emitter.on(\"_dataChanged\", function () {\n        _this.updateSelection();\n      });\n    }\n  _createClass(SelectionHandler, [{\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          var fields = ['multiselect', 'hoverConnectedEdges', 'selectable', 'selectConnectedEdges'];\n          util.selectiveDeepExtend(fields, this.options, options);\n        }\n      }\n    /**\n       * handles the selection part of the tap;\n       *\n       * @param {Object} pointer\n       * @private",
            "line": " src\\libs\\vis\\vis.js:39822"
        },
        {
            "message": "Missing item type\nretrieve all nodes overlapping with given object",
            "line": " src\\libs\\vis\\vis.js:39972"
        },
        {
            "message": "Missing item type\nReturn a position object in canvasspace from a single point in screenspace",
            "line": " src\\libs\\vis\\vis.js:39993"
        },
        {
            "message": "Missing item type\nGet the top node at the a specific point (like a click)",
            "line": " src\\libs\\vis\\vis.js:40013"
        },
        {
            "message": "Missing item type\nretrieve all edges overlapping with given object, selector is around center",
            "line": " src\\libs\\vis\\vis.js:40041"
        },
        {
            "message": "Missing item type\nretrieve all nodes overlapping with given object",
            "line": " src\\libs\\vis\\vis.js:40060"
        },
        {
            "message": "Missing item type\nPlace holder. To implement change the getNodeAt to a _getObjectAt. Have the _getObjectAt call\ngetNodeAt and _getEdgesAt, then priortize the selection to user preferences.",
            "line": " src\\libs\\vis\\vis.js:40075"
        },
        {
            "message": "Missing item type\nAdd object to the selection array.",
            "line": " src\\libs\\vis\\vis.js:40102"
        },
        {
            "message": "Missing item type\nAdd object to the selection array.",
            "line": " src\\libs\\vis\\vis.js:40119"
        },
        {
            "message": "Missing item type\nRemove a single option from selection.",
            "line": " src\\libs\\vis\\vis.js:40136"
        },
        {
            "message": "Missing item type\nUnselect all. The selectionObj is useful for this.",
            "line": " src\\libs\\vis\\vis.js:40154"
        },
        {
            "message": "Missing item type\nreturn the number of selected nodes",
            "line": " src\\libs\\vis\\vis.js:40175"
        },
        {
            "message": "Missing item type\nreturn the selected node",
            "line": " src\\libs\\vis\\vis.js:40194"
        },
        {
            "message": "Missing item type\nreturn the selected edge",
            "line": " src\\libs\\vis\\vis.js:40212"
        },
        {
            "message": "Missing item type\nreturn the number of selected edges",
            "line": " src\\libs\\vis\\vis.js:40230"
        },
        {
            "message": "Missing item type\nreturn the number of selected objects.",
            "line": " src\\libs\\vis\\vis.js:40249"
        },
        {
            "message": "Missing item type\nCheck if anything is selected",
            "line": " src\\libs\\vis\\vis.js:40273"
        },
        {
            "message": "Missing item type\ncheck if one of the selected nodes is a cluster.",
            "line": " src\\libs\\vis\\vis.js:40296"
        },
        {
            "message": "Missing item type\nselect the edges connected to the node that is being selected",
            "line": " src\\libs\\vis\\vis.js:40316"
        },
        {
            "message": "Missing item type\nselect the edges connected to the node that is being selected",
            "line": " src\\libs\\vis\\vis.js:40333"
        },
        {
            "message": "Missing item type\nunselect the edges connected to the node that is being selected",
            "line": " src\\libs\\vis\\vis.js:40350"
        },
        {
            "message": "Missing item type\nThis is called when someone clicks on a node. either select or deselect it.\nIf there is an existing selection and we don't want to append to it, clear the existing selection",
            "line": " src\\libs\\vis\\vis.js:40367"
        },
        {
            "message": "Missing item type\nThis is called when someone clicks on a node. either select or deselect it.\nIf there is an existing selection and we don't want to append to it, clear the existing selection",
            "line": " src\\libs\\vis\\vis.js:40388"
        },
        {
            "message": "Missing item type\nretrieve the currently selected objects",
            "line": " src\\libs\\vis\\vis.js:40450"
        },
        {
            "message": "Missing item type\nretrieve the currently selected nodes",
            "line": " src\\libs\\vis\\vis.js:40464"
        },
        {
            "message": "Missing item type\nretrieve the currently selected edges",
            "line": " src\\libs\\vis\\vis.js:40485"
        },
        {
            "message": "Missing item type\nUpdates the current selection",
            "line": " src\\libs\\vis\\vis.js:40506"
        },
        {
            "message": "Missing item type\nselect zero or more nodes with the option to highlight edges",
            "line": " src\\libs\\vis\\vis.js:40552"
        },
        {
            "message": "Missing item type\nselect zero or more edges",
            "line": " src\\libs\\vis\\vis.js:40569"
        },
        {
            "message": "Missing item type\nValidate the selection: remove ids of nodes which no longer exist",
            "line": " src\\libs\\vis\\vis.js:40583"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:40613"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _NetworkUtil = __webpack_require__(100);\nvar _NetworkUtil2 = _interopRequireDefault(_NetworkUtil);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\nvar LayoutEngine = function () {\n    function LayoutEngine(body) {\n      _classCallCheck(this, LayoutEngine);\n    this.body = body;\n    this.initialRandomSeed = Math.round(Math.random() * 1000000);\n      this.randomSeed = this.initialRandomSeed;\n      this.setPhysics = false;\n      this.options = {};\n      this.optionsBackup = { physics: {} };\n    this.defaultOptions = {\n        randomSeed: undefined,\n        improvedLayout: true,\n        hierarchical: {\n          enabled: false,\n          levelSeparation: 150,\n          nodeSpacing: 100,\n          treeSpacing: 200,\n          blockShifting: true,\n          edgeMinimization: true,\n          parentCentralization: true,\n          direction: 'UD', // UD, DU, LR, RL\n          sortMethod: 'hubsize' // hubsize, directed\n        }\n      };\n      util.extend(this.options, this.defaultOptions);\n      this.bindEventListeners();\n    }\n  _createClass(LayoutEngine, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this = this;\n      this.body.emitter.on('_dataChanged', function () {\n          _this.setupHierarchicalLayout();\n        });\n        this.body.emitter.on('_dataLoaded', function () {\n          _this.layoutNetwork();\n        });\n        this.body.emitter.on('_resetHierarchicalLayout', function () {\n          _this.setupHierarchicalLayout();\n        });\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options, allOptions) {\n        if (options !== undefined) {\n          var prevHierarchicalState = this.options.hierarchical.enabled;\n          util.selectiveDeepExtend([\"randomSeed\", \"improvedLayout\"], this.options, options);\n          util.mergeOptions(this.options, options, 'hierarchical');\n          if (options.randomSeed !== undefined) {\n            this.initialRandomSeed = options.randomSeed;\n          }\n        if (this.options.hierarchical.enabled === true) {\n            if (prevHierarchicalState === true) {\n              // refresh the overridden options for nodes and edges.\n              this.body.emitter.emit('refresh', true);\n            }\n          // make sure the level separation is the right way up\n            if (this.options.hierarchical.direction === 'RL' || this.options.hierarchical.direction === 'DU') {\n              if (this.options.hierarchical.levelSeparation > 0) {\n                this.options.hierarchical.levelSeparation *= -1;\n              }\n            } else {\n              if (this.options.hierarchical.levelSeparation < 0) {\n                this.options.hierarchical.levelSeparation *= -1;\n              }\n            }\n          this.body.emitter.emit('_resetHierarchicalLayout');\n            // because the hierarchical system needs it's own physics and smooth curve settings, we adapt the other options if needed.\n            return this.adaptAllOptionsForHierarchicalLayout(allOptions);\n          } else {\n            if (prevHierarchicalState === true) {\n              // refresh the overridden options for nodes and edges.\n              this.body.emitter.emit('refresh');\n              return util.deepExtend(allOptions, this.optionsBackup);\n            }\n          }\n        }\n        return allOptions;\n      }\n    }, {\n      key: 'adaptAllOptionsForHierarchicalLayout',\n      value: function adaptAllOptionsForHierarchicalLayout(allOptions) {\n        if (this.options.hierarchical.enabled === true) {\n          // set the physics\n          if (allOptions.physics === undefined || allOptions.physics === true) {\n            allOptions.physics = {\n              enabled: this.optionsBackup.physics.enabled === undefined ? true : this.optionsBackup.physics.enabled,\n              solver: 'hierarchicalRepulsion'\n            };\n            this.optionsBackup.physics.enabled = this.optionsBackup.physics.enabled === undefined ? true : this.optionsBackup.physics.enabled;\n            this.optionsBackup.physics.solver = this.optionsBackup.physics.solver || 'barnesHut';\n          } else if (_typeof(allOptions.physics) === 'object') {\n            this.optionsBackup.physics.enabled = allOptions.physics.enabled === undefined ? true : allOptions.physics.enabled;\n            this.optionsBackup.physics.solver = allOptions.physics.solver || 'barnesHut';\n            allOptions.physics.solver = 'hierarchicalRepulsion';\n          } else if (allOptions.physics !== false) {\n            this.optionsBackup.physics.solver = 'barnesHut';\n            allOptions.physics = { solver: 'hierarchicalRepulsion' };\n          }\n        // get the type of static smooth curve in case it is required\n          var type = 'horizontal';\n          if (this.options.hierarchical.direction === 'RL' || this.options.hierarchical.direction === 'LR') {\n            type = 'vertical';\n          }\n        // disable smooth curves if nothing is defined. If smooth curves have been turned on, turn them into static smooth curves.\n          if (allOptions.edges === undefined) {\n            this.optionsBackup.edges = { smooth: { enabled: true, type: 'dynamic' } };\n            allOptions.edges = { smooth: false };\n          } else if (allOptions.edges.smooth === undefined) {\n            this.optionsBackup.edges = { smooth: { enabled: true, type: 'dynamic' } };\n            allOptions.edges.smooth = false;\n          } else {\n            if (typeof allOptions.edges.smooth === 'boolean') {\n              this.optionsBackup.edges = { smooth: allOptions.edges.smooth };\n              allOptions.edges.smooth = { enabled: allOptions.edges.smooth, type: type };\n            } else {\n              // allow custom types except for dynamic\n              if (allOptions.edges.smooth.type !== undefined && allOptions.edges.smooth.type !== 'dynamic') {\n                type = allOptions.edges.smooth.type;\n              }\n            this.optionsBackup.edges = {\n                smooth: allOptions.edges.smooth.enabled === undefined ? true : allOptions.edges.smooth.enabled,\n                type: allOptions.edges.smooth.type === undefined ? 'dynamic' : allOptions.edges.smooth.type,\n                roundness: allOptions.edges.smooth.roundness === undefined ? 0.5 : allOptions.edges.smooth.roundness,\n                forceDirection: allOptions.edges.smooth.forceDirection === undefined ? false : allOptions.edges.smooth.forceDirection\n              };\n              allOptions.edges.smooth = {\n                enabled: allOptions.edges.smooth.enabled === undefined ? true : allOptions.edges.smooth.enabled,\n                type: type,\n                roundness: allOptions.edges.smooth.roundness === undefined ? 0.5 : allOptions.edges.smooth.roundness,\n                forceDirection: allOptions.edges.smooth.forceDirection === undefined ? false : allOptions.edges.smooth.forceDirection\n              };\n            }\n          }\n        // force all edges into static smooth curves. Only applies to edges that do not use the global options for smooth.\n          this.body.emitter.emit('_forceDisableDynamicCurves', type);\n        }\n      return allOptions;\n      }\n    }, {\n      key: 'seededRandom',\n      value: function seededRandom() {\n        var x = Math.sin(this.randomSeed++) * 10000;\n        return x - Math.floor(x);\n      }\n    }, {\n      key: 'positionInitially',\n      value: function positionInitially(nodesArray) {\n        if (this.options.hierarchical.enabled !== true) {\n          this.randomSeed = this.initialRandomSeed;\n          for (var i = 0; i < nodesArray.length; i++) {\n            var node = nodesArray[i];\n            var radius = 10 * 0.1 * nodesArray.length + 10;\n            var angle = 2 * Math.PI * this.seededRandom();\n            if (node.x === undefined) {\n              node.x = radius * Math.cos(angle);\n            }\n            if (node.y === undefined) {\n              node.y = radius * Math.sin(angle);\n            }\n          }\n        }\n      }\n    /**\n       * Use Kamada Kawai to position nodes. This is quite a heavy algorithm so if there are a lot of nodes we\n       * cluster them first to reduce the amount.",
            "line": " src\\libs\\vis\\vis.js:40615"
        },
        {
            "message": "Missing item type\nMove all the nodes towards to the center so gravitational pull wil not move the nodes away from view",
            "line": " src\\libs\\vis\\vis.js:40889"
        },
        {
            "message": "Missing item type\nThis is the main function to layout the nodes in a hierarchical way.\nIt checks if the node details are supplied correctly",
            "line": " src\\libs\\vis\\vis.js:40927"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:41012"
        },
        {
            "message": "Missing item type\nThis gives the space around the node. IF a map is supplied, it will only check against nodes NOT in the map.\nThis is used to only get the distances to nodes outside of a branch.",
            "line": " src\\libs\\vis\\vis.js:41452"
        },
        {
            "message": "Missing item type\nWe use this method to center a parent node and check if it does not cross other nodes when it does.",
            "line": " src\\libs\\vis\\vis.js:41496"
        },
        {
            "message": "Missing item type\nThis function places the nodes on the canvas based on the hierarchial distribution.",
            "line": " src\\libs\\vis\\vis.js:41542"
        },
        {
            "message": "Missing item type\nThis is a recursively called function to enumerate the branches from the largest hubs and place the nodes\non a X position that ensures there will be no overlap.",
            "line": " src\\libs\\vis\\vis.js:41580"
        },
        {
            "message": "Missing item type\nThis method checks for overlap and if required shifts the branch. It also keeps records of positioned nodes.\nFinally it will call _placeBranchNodes to place the branch nodes.",
            "line": " src\\libs\\vis\\vis.js:41639"
        },
        {
            "message": "Missing item type\nReceives an array with node indices and returns an array with the actual node references. Used for sorting based on\nnode properties.",
            "line": " src\\libs\\vis\\vis.js:41669"
        },
        {
            "message": "Missing item type\nThis function get the distribution of levels based on hubsize",
            "line": " src\\libs\\vis\\vis.js:41685"
        },
        {
            "message": "Missing item type\nGet the hubsize from all remaining unlevelled nodes.",
            "line": " src\\libs\\vis\\vis.js:41721"
        },
        {
            "message": "Missing item type\nthis function allocates nodes in levels based on the recursive branching from the largest hubs.",
            "line": " src\\libs\\vis\\vis.js:41743"
        },
        {
            "message": "Missing item type\nTODO: release feature",
            "line": " src\\libs\\vis\\vis.js:41784"
        },
        {
            "message": "Missing item type\nthis function allocates nodes in levels based on the direction of the edges",
            "line": " src\\libs\\vis\\vis.js:41815"
        },
        {
            "message": "Missing item type\nSmall util method to set the minimum levels of the nodes to zero.",
            "line": " src\\libs\\vis\\vis.js:41844"
        },
        {
            "message": "Missing item type\nUpdate the bookkeeping of parent and child.",
            "line": " src\\libs\\vis\\vis.js:41872"
        },
        {
            "message": "Missing item type\nCrawl over the entire network and use a callback on each node couple that is connected to each other.",
            "line": " src\\libs\\vis\\vis.js:41900"
        },
        {
            "message": "Missing item type\nShift a branch a certain distance",
            "line": " src\\libs\\vis\\vis.js:41964"
        },
        {
            "message": "Missing item type\nFind a common parent between branches.",
            "line": " src\\libs\\vis\\vis.js:41986"
        },
        {
            "message": "Missing item type\nAbstract the getting of the position so we won't have to repeat the check for direction all the time",
            "line": " src\\libs\\vis\\vis.js:42029"
        },
        {
            "message": "Missing item type\nAbstract the getting of the position of a node so we do not have to repeat the direction check all the time.",
            "line": " src\\libs\\vis\\vis.js:42063"
        },
        {
            "message": "Missing item type\nUse the x or y value to sort the array, allowing users to specify order.",
            "line": " src\\libs\\vis\\vis.js:42080"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:42108"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar util = __webpack_require__(1);\n  var Hammer = __webpack_require__(22);\n  var hammerUtil = __webpack_require__(25);\n/**\n   * clears the toolbar div element of children\n   *\n   * @private",
            "line": " src\\libs\\vis\\vis.js:42110"
        },
        {
            "message": "Missing item type\nIf something changes in the data during editing, switch back to the initial datamanipulation state and close all edit modes.",
            "line": " src\\libs\\vis\\vis.js:42184"
        },
        {
            "message": "Missing item type\nSet the Options",
            "line": " src\\libs\\vis\\vis.js:42202"
        },
        {
            "message": "Missing item type\nEnable or disable edit-mode. Draws the DOM required and cleans up after itself.",
            "line": " src\\libs\\vis\\vis.js:42237"
        },
        {
            "message": "Missing item type\nCreates the main toolbar. Removes functions bound to the select event. Binds all the buttons of the toolbar.",
            "line": " src\\libs\\vis\\vis.js:42279"
        },
        {
            "message": "Missing item type\nCreate the toolbar for adding Nodes",
            "line": " src\\libs\\vis\\vis.js:42362"
        },
        {
            "message": "Missing item type\ncall the bound function to handle the editing of the node. The node has to be selected.",
            "line": " src\\libs\\vis\\vis.js:42392"
        },
        {
            "message": "Missing item type\ncreate the toolbar to connect nodes",
            "line": " src\\libs\\vis\\vis.js:42439"
        },
        {
            "message": "Missing item type\ncreate the toolbar to edit edges",
            "line": " src\\libs\\vis\\vis.js:42476"
        },
        {
            "message": "Missing item type\ndelete everything in the selection",
            "line": " src\\libs\\vis\\vis.js:42552"
        },
        {
            "message": "Missing item type\ndraw or remove the DOM",
            "line": " src\\libs\\vis\\vis.js:42618"
        },
        {
            "message": "Missing item type\ncreate the div overlays that contain the DOM",
            "line": " src\\libs\\vis\\vis.js:42644"
        },
        {
            "message": "Missing item type\ngenerate a new target node. Used for creating new edges and editing edges",
            "line": " src\\libs\\vis\\vis.js:42685"
        },
        {
            "message": "Missing item type\nCreate the edit button",
            "line": " src\\libs\\vis\\vis.js:42711"
        },
        {
            "message": "Missing item type\nthis function cleans up after everything this module does. Temporary elements, functions and events are removed, physics restored, hammers removed.",
            "line": " src\\libs\\vis\\vis.js:42736"
        },
        {
            "message": "Missing item type\nEach dom element has it's own hammer. They are stored in this.manipulationHammers. This cleans them up.",
            "line": " src\\libs\\vis\\vis.js:42769"
        },
        {
            "message": "Missing item type\nRemove all DOM elements created by this module.",
            "line": " src\\libs\\vis\\vis.js:42786"
        },
        {
            "message": "Missing item type\ncreate a seperator line. the index is to differentiate in the manipulation dom",
            "line": " src\\libs\\vis\\vis.js:42819"
        },
        {
            "message": "Missing item type\nthis binds an event until cleanup by the clean functions.",
            "line": " src\\libs\\vis\\vis.js:42901"
        },
        {
            "message": "Missing item type\nthis overrides an UI function until cleanup by the clean function",
            "line": " src\\libs\\vis\\vis.js:42915"
        },
        {
            "message": "Missing item type\nRestore the overridden UI functions to their original state.",
            "line": " src\\libs\\vis\\vis.js:42933"
        },
        {
            "message": "Missing item type\nUnbind the events created by _temporaryBindEvent",
            "line": " src\\libs\\vis\\vis.js:42951"
        },
        {
            "message": "Missing item type\nBind an hammer instance to a DOM element.",
            "line": " src\\libs\\vis\\vis.js:42967"
        },
        {
            "message": "Missing item type\nNeatly clean up temporary edges and nodes",
            "line": " src\\libs\\vis\\vis.js:42981"
        },
        {
            "message": "Missing item type\nthe touch is used to get the position of the initial click",
            "line": " src\\libs\\vis\\vis.js:43013"
        },
        {
            "message": "Missing item type\nthe drag start is used to mark one of the control nodes as selected.",
            "line": " src\\libs\\vis\\vis.js:43027"
        },
        {
            "message": "Missing item type\ndragging the control nodes or the canvas",
            "line": " src\\libs\\vis\\vis.js:43062"
        },
        {
            "message": "Missing item type\nconnecting or restoring the control nodes.",
            "line": " src\\libs\\vis\\vis.js:43086"
        },
        {
            "message": "Missing item type\nthe function bound to the selection event. It checks if you want to connect a cluster and changes the description\nto walk the user through the process.",
            "line": " src\\libs\\vis\\vis.js:43135"
        },
        {
            "message": "Missing item type\nConnect the new edge to the target if one exists, otherwise remove temp line",
            "line": " src\\libs\\vis\\vis.js:43200"
        },
        {
            "message": "Missing item type\nAdds a node on the specified location",
            "line": " src\\libs\\vis\\vis.js:43249"
        },
        {
            "message": "Missing item type\nconnect two nodes with a new edge.",
            "line": " src\\libs\\vis\\vis.js:43284"
        },
        {
            "message": "Missing item type\nconnect two nodes with a new edge.",
            "line": " src\\libs\\vis\\vis.js:43316"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:43357"
        },
        {
            "message": "Missing item type\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * This object contains all possible options. It will check if the types are correct, if required if the option is one\n   * of the allowed values.\n   *\n   * __any__ means that the name of the property does not matter.\n   * __type__ is a required field for all objects and contains the allowed types of all objects",
            "line": " src\\libs\\vis\\vis.js:43359"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:43876"
        },
        {
            "message": "Missing item type\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // distance finding algorithm\n\nvar _FloydWarshall = __webpack_require__(113);\nvar _FloydWarshall2 = _interopRequireDefault(_FloydWarshall);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n   * KamadaKawai positions the nodes initially based on\n   *\n   * \"AN ALGORITHM FOR DRAWING GENERAL UNDIRECTED GRAPHS\"\n   * -- Tomihisa KAMADA and Satoru KAWAI in 1989\n   *\n   * Possible optimizations in the distance calculation can be implemented.",
            "line": " src\\libs\\vis\\vis.js:43878"
        },
        {
            "message": "Missing item type\nNot sure if needed but can be used to update the spring length and spring constant",
            "line": " src\\libs\\vis\\vis.js:43918"
        },
        {
            "message": "Missing item type\nPosition the system",
            "line": " src\\libs\\vis\\vis.js:43937"
        },
        {
            "message": "Missing item type\nget the node with the highest energy",
            "line": " src\\libs\\vis\\vis.js:44000"
        },
        {
            "message": "Missing item type\ncalculate the energy of a single node",
            "line": " src\\libs\\vis\\vis.js:44040"
        },
        {
            "message": "Missing item type\nmove the node based on it's energy\nthe dx and dy are calculated from the linear system proposed by Kamada and Kawai",
            "line": " src\\libs\\vis\\vis.js:44072"
        },
        {
            "message": "Missing item type\nCreate the L matrix: edge length times shortest path",
            "line": " src\\libs\\vis\\vis.js:44119"
        },
        {
            "message": "Missing item type\nCreate the K matrix: spring constants times shortest path",
            "line": " src\\libs\\vis\\vis.js:44140"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:44167"
        },
        {
            "message": "Missing item type\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n   * Created by Alex on 10-Aug-15.",
            "line": " src\\libs\\vis\\vis.js:44169"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:44237"
        },
        {
            "message": "Missing item type\n'use strict';\n/**\n   * Canvas shapes used by Network",
            "line": " src\\libs\\vis\\vis.js:44239"
        },
        {
            "message": "Missing item type\nDraw a circle shape",
            "line": " src\\libs\\vis\\vis.js:44248"
        },
        {
            "message": "Missing item type\nDraw a square shape",
            "line": " src\\libs\\vis\\vis.js:44257"
        },
        {
            "message": "Missing item type\nDraw a triangle shape",
            "line": " src\\libs\\vis\\vis.js:44269"
        },
        {
            "message": "Missing item type\nDraw a triangle shape in downward orientation",
            "line": " src\\libs\\vis\\vis.js:44295"
        },
        {
            "message": "Missing item type\nDraw a star shape, a star with 5 points",
            "line": " src\\libs\\vis\\vis.js:44321"
        },
        {
            "message": "Missing item type\nDraw a Diamond shape",
            "line": " src\\libs\\vis\\vis.js:44343"
        },
        {
            "message": "Missing item type\nhttp://stackoverflow.com/questions/1255512/how-to-draw-a-rounded-rectangle-on-html-canvas",
            "line": " src\\libs\\vis\\vis.js:44361"
        },
        {
            "message": "Missing item type\nhttp://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas",
            "line": " src\\libs\\vis\\vis.js:44385"
        },
        {
            "message": "Missing item type\nhttp://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas",
            "line": " src\\libs\\vis\\vis.js:44411"
        },
        {
            "message": "Missing item type\nDraw an arrow point (no line)",
            "line": " src\\libs\\vis\\vis.js:44453"
        },
        {
            "message": "Missing item type\nSets up the dashedLine functionality for drawing\nOriginal code came from http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas",
            "line": " src\\libs\\vis\\vis.js:44481"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:44524"
        },
        {
            "message": "Missing item type\n'use strict';\n/**\n   * Parse a text source containing data in DOT language into a JSON object.\n   * The object contains two lists: one with nodes and one with edges.\n   *\n   * DOT language reference: http://www.graphviz.org/doc/info/lang.html\n   *\n   * DOT language attributes: http://graphviz.org/content/attrs\n   *\n   * @param {String} data     Text containing a graph in DOT-notation\n   * @return {Object} graph   An object containing two parameters:\n   *                          {Object[]} nodes\n   *                          {Object[]} edges",
            "line": " src\\libs\\vis\\vis.js:44526"
        },
        {
            "message": "Missing item type\nGet the first character from the dot file.\nThe character is stored into the char c. If the end of the dot file is\nreached, the function puts an empty string in c.",
            "line": " src\\libs\\vis\\vis.js:44590"
        },
        {
            "message": "Missing item type\nGet the next character from the dot file.\nThe character is stored into the char c. If the end of the dot file is\nreached, the function puts an empty string in c.",
            "line": " src\\libs\\vis\\vis.js:44600"
        },
        {
            "message": "Missing item type\nPreview the next character from the dot file.",
            "line": " src\\libs\\vis\\vis.js:44610"
        },
        {
            "message": "Missing item type\nTest whether given character is alphabetic or numeric",
            "line": " src\\libs\\vis\\vis.js:44618"
        },
        {
            "message": "Missing item type\nMerge all options of object b into object b",
            "line": " src\\libs\\vis\\vis.js:44628"
        },
        {
            "message": "Missing item type\nSet a value in an object, where the provided parameter name can be a\npath with nested parameters. For example:\n\n    var obj = {a: 2};\n    setValue(obj, 'b.c', 3);     // obj = {a: 2, b: {c: 3}}",
            "line": " src\\libs\\vis\\vis.js:44649"
        },
        {
            "message": "Missing item type\nAdd a node to a graph object. If there is already a node with\nthe same id, their attributes will be merged.",
            "line": " src\\libs\\vis\\vis.js:44679"
        },
        {
            "message": "Missing item type\nAdd an edge to a graph object",
            "line": " src\\libs\\vis\\vis.js:44736"
        },
        {
            "message": "Missing item type\nCreate an edge to a graph object",
            "line": " src\\libs\\vis\\vis.js:44752"
        },
        {
            "message": "Missing item type\nGet next token in the current dot file.\nThe token and token type are available as token and tokenType",
            "line": " src\\libs\\vis\\vis.js:44776"
        },
        {
            "message": "Missing item type\nParse a graph.",
            "line": " src\\libs\\vis\\vis.js:44911"
        },
        {
            "message": "Missing item type\nParse a list with statements.",
            "line": " src\\libs\\vis\\vis.js:44968"
        },
        {
            "message": "Missing item type\nParse a single statement. Can be a an attribute statement, node\nstatement, a series of node statements and edge statements, or a\nparameter.",
            "line": " src\\libs\\vis\\vis.js:44981"
        },
        {
            "message": "Missing item type\nParse a subgraph",
            "line": " src\\libs\\vis\\vis.js:45024"
        },
        {
            "message": "Missing item type\nparse an attribute statement like \"node [shape=circle fontSize=16]\".\nAvailable keywords are 'node', 'edge', 'graph'.\nThe previous list with default attributes will be replaced",
            "line": " src\\libs\\vis\\vis.js:45082"
        },
        {
            "message": "Missing item type\nparse a node statement",
            "line": " src\\libs\\vis\\vis.js:45116"
        },
        {
            "message": "Missing item type\nParse an edge or a series of edges",
            "line": " src\\libs\\vis\\vis.js:45136"
        },
        {
            "message": "Missing item type\nParse a set with attributes,\nfor example [label=\"1.000\", shape=solid]",
            "line": " src\\libs\\vis\\vis.js:45172"
        },
        {
            "message": "Missing item type\nCreate a syntax error with extra information on current token and index.",
            "line": " src\\libs\\vis\\vis.js:45216"
        },
        {
            "message": "Missing item type\nChop off text after a maximum length",
            "line": " src\\libs\\vis\\vis.js:45225"
        },
        {
            "message": "Missing item type\nExecute a function fn for each pair of elements in two arrays",
            "line": " src\\libs\\vis\\vis.js:45235"
        },
        {
            "message": "Missing item type\nSet a nested property on an object\nWhen nested objects are missing, they will be created.\nFor example setProp({}, 'font.color', 'red') will return {font: {color: 'red'}}",
            "line": " src\\libs\\vis\\vis.js:45263"
        },
        {
            "message": "Missing item type\nConvert an object with DOT attributes to their vis.js equivalents.",
            "line": " src\\libs\\vis\\vis.js:45292"
        },
        {
            "message": "Missing item type\nConvert a string containing a graph in DOT language into a map containing\nwith nodes and edges in the format of graph.",
            "line": " src\\libs\\vis\\vis.js:45319"
        },
        {
            "message": "Missing item type\nConvert an edge in DOT format to an edge with VisGraph format",
            "line": " src\\libs\\vis\\vis.js:45351"
        },
        {
            "message": "Missing item type",
            "line": " src\\libs\\vis\\vis.js:45422"
        },
        {
            "message": "Missing item type\n'use strict';\nfunction parseGephi(gephiJSON, optionsObj) {\n    var edges = [];\n    var nodes = [];\n    var options = {\n      edges: {\n        inheritColor: false\n      },\n      nodes: {\n        fixed: false,\n        parseColor: false\n      }\n    };\n  if (optionsObj !== undefined) {\n      if (optionsObj.fixed !== undefined) {\n        options.nodes.fixed = optionsObj.fixed;\n      }\n      if (optionsObj.parseColor !== undefined) {\n        options.nodes.parseColor = optionsObj.parseColor;\n      }\n      if (optionsObj.inheritColor !== undefined) {\n        options.edges.inheritColor = optionsObj.inheritColor;\n      }\n    }\n  var gEdges = gephiJSON.edges;\n    var gNodes = gephiJSON.nodes;\n    for (var i = 0; i < gEdges.length; i++) {\n      var edge = {};\n      var gEdge = gEdges[i];\n      edge['id'] = gEdge.id;\n      edge['from'] = gEdge.source;\n      edge['to'] = gEdge.target;\n      edge['attributes'] = gEdge.attributes;\n      edge['label'] = gEdge.label;\n      edge['title'] = gEdge.attributes !== undefined ? gEdge.attributes.title : undefined;\n      if (gEdge['type'] === 'Directed') {\n        edge['arrows'] = 'to';\n      }\n      //    edge['value'] = gEdge.attributes !== undefined ? gEdge.attributes.Weight : undefined;\n      //    edge['width'] = edge['value'] !== undefined ? undefined : edgegEdge.size;\n      if (gEdge.color && options.inheritColor === false) {\n        edge['color'] = gEdge.color;\n      }\n      edges.push(edge);\n    }\n  for (var i = 0; i < gNodes.length; i++) {\n      var node = {};\n      var gNode = gNodes[i];\n      node['id'] = gNode.id;\n      node['attributes'] = gNode.attributes;\n      node['title'] = gNode.title;\n      node['x'] = gNode.x;\n      node['y'] = gNode.y;\n      node['label'] = gNode.label;\n      node['title'] = gNode.attributes !== undefined ? gNode.attributes.title : undefined;\n      if (options.nodes.parseColor === true) {\n        node['color'] = gNode.color;\n      } else {\n        node['color'] = gNode.color !== undefined ? { background: gNode.color, border: gNode.color, highlight: { background: gNode.color, border: gNode.color }, hover: { background: gNode.color, border: gNode.color } } : undefined;\n      }\n      node['size'] = gNode.size;\n      node['fixed'] = options.nodes.fixed && gNode.x !== undefined && gNode.y !== undefined;\n      nodes.push(node);\n    }\n  return { nodes: nodes, edges: edges };\n  }\nexports.parseGephi = parseGephi;\n\n/***/ },",
            "line": " src\\libs\\vis\\vis.js:45424"
        },
        {
            "message": "Missing item type\n'use strict';\n// English\n  exports['en'] = {\n    edit: 'Edit',\n    del: 'Delete selected',\n    back: 'Back',\n    addNode: 'Add Node',\n    addEdge: 'Add Edge',\n    editNode: 'Edit Node',\n    editEdge: 'Edit Edge',\n    addDescription: 'Click in an empty space to place a new node.',\n    edgeDescription: 'Click on a node and drag the edge to another node to connect them.',\n    editEdgeDescription: 'Click on the control points and drag them to a node to connect to it.',\n    createEdgeError: 'Cannot link edges to a cluster.',\n    deleteClusterError: 'Clusters cannot be deleted.',\n    editClusterError: 'Clusters cannot be edited.'\n  };\n  exports['en_EN'] = exports['en'];\n  exports['en_US'] = exports['en'];\n// German\n  exports['de'] = {\n    edit: 'Editieren',\n    del: 'Lösche Auswahl',\n    back: 'Zurück',\n    addNode: 'Knoten hinzufügen',\n    addEdge: 'Kante hinzufügen',\n    editNode: 'Knoten editieren',\n    editEdge: 'Kante editieren',\n    addDescription: 'Klicke auf eine freie Stelle, um einen neuen Knoten zu plazieren.',\n    edgeDescription: 'Klicke auf einen Knoten und ziehe die Kante zu einem anderen Knoten, um diese zu verbinden.',\n    editEdgeDescription: 'Klicke auf die Verbindungspunkte und ziehe diese auf einen Knoten, um sie zu verbinden.',\n    createEdgeError: 'Es ist nicht möglich, Kanten mit Clustern zu verbinden.',\n    deleteClusterError: 'Cluster können nicht gelöscht werden.',\n    editClusterError: 'Cluster können nicht editiert werden.'\n  };\n  exports['de_DE'] = exports['de'];\n// Spanish\n  exports['es'] = {\n    edit: 'Editar',\n    del: 'Eliminar selección',\n    back: 'Átras',\n    addNode: 'Añadir nodo',\n    addEdge: 'Añadir arista',\n    editNode: 'Editar nodo',\n    editEdge: 'Editar arista',\n    addDescription: 'Haga clic en un lugar vacío para colocar un nuevo nodo.',\n    edgeDescription: 'Haga clic en un nodo y arrastre la arista hacia otro nodo para conectarlos.',\n    editEdgeDescription: 'Haga clic en un punto de control y arrastrelo a un nodo para conectarlo.',\n    createEdgeError: 'No se puede conectar una arista a un grupo.',\n    deleteClusterError: 'No es posible eliminar grupos.',\n    editClusterError: 'No es posible editar grupos.'\n  };\n  exports['es_ES'] = exports['es'];\n// Dutch\n  exports['nl'] = {\n    edit: 'Wijzigen',\n    del: 'Selectie verwijderen',\n    back: 'Terug',\n    addNode: 'Node toevoegen',\n    addEdge: 'Link toevoegen',\n    editNode: 'Node wijzigen',\n    editEdge: 'Link wijzigen',\n    addDescription: 'Klik op een leeg gebied om een nieuwe node te maken.',\n    edgeDescription: 'Klik op een node en sleep de link naar een andere node om ze te verbinden.',\n    editEdgeDescription: 'Klik op de verbindingspunten en sleep ze naar een node om daarmee te verbinden.',\n    createEdgeError: 'Kan geen link maken naar een cluster.',\n    deleteClusterError: 'Clusters kunnen niet worden verwijderd.',\n    editClusterError: 'Clusters kunnen niet worden aangepast.'\n  };\n  exports['nl_NL'] = exports['nl'];\n  exports['nl_BE'] = exports['nl'];\n\n/***/ }\n/******/ ])\n});\n;",
            "line": " src\\libs\\vis\\vis.js:45502"
        },
        {
            "message": "Missing item type\nvis.js\nhttps://github.com/almende/vis\n\nA dynamic, browser-based visualization library.",
            "line": " src\\libs\\vis\\vis.min.js:1"
        }
    ]
}